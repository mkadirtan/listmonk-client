/*
Listmonk

The API collection for listmonk

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SubscriberQueryRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriberQueryRequest{}

// SubscriberQueryRequest struct for SubscriberQueryRequest
type SubscriberQueryRequest struct {
	Query *string `json:"query,omitempty"`
	// The ids of the subscribers to be modified.
	Ids []int32 `json:"ids,omitempty"`
	// Whether to add, remove, or unsubscribe the users.
	Action *string `json:"action,omitempty"`
	// The ids of the lists to be modified.
	TargetListIds []int32 `json:"target_list_ids,omitempty"`
	// confirmed, unconfirmed, or unsubscribed status.
	Status *string `json:"status,omitempty"`
}

// NewSubscriberQueryRequest instantiates a new SubscriberQueryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriberQueryRequest() *SubscriberQueryRequest {
	this := SubscriberQueryRequest{}
	return &this
}

// NewSubscriberQueryRequestWithDefaults instantiates a new SubscriberQueryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriberQueryRequestWithDefaults() *SubscriberQueryRequest {
	this := SubscriberQueryRequest{}
	return &this
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *SubscriberQueryRequest) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberQueryRequest) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *SubscriberQueryRequest) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *SubscriberQueryRequest) SetQuery(v string) {
	o.Query = &v
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *SubscriberQueryRequest) GetIds() []int32 {
	if o == nil || IsNil(o.Ids) {
		var ret []int32
		return ret
	}
	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberQueryRequest) GetIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *SubscriberQueryRequest) HasIds() bool {
	if o != nil && !IsNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given []int32 and assigns it to the Ids field.
func (o *SubscriberQueryRequest) SetIds(v []int32) {
	o.Ids = v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *SubscriberQueryRequest) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberQueryRequest) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *SubscriberQueryRequest) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *SubscriberQueryRequest) SetAction(v string) {
	o.Action = &v
}

// GetTargetListIds returns the TargetListIds field value if set, zero value otherwise.
func (o *SubscriberQueryRequest) GetTargetListIds() []int32 {
	if o == nil || IsNil(o.TargetListIds) {
		var ret []int32
		return ret
	}
	return o.TargetListIds
}

// GetTargetListIdsOk returns a tuple with the TargetListIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberQueryRequest) GetTargetListIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.TargetListIds) {
		return nil, false
	}
	return o.TargetListIds, true
}

// HasTargetListIds returns a boolean if a field has been set.
func (o *SubscriberQueryRequest) HasTargetListIds() bool {
	if o != nil && !IsNil(o.TargetListIds) {
		return true
	}

	return false
}

// SetTargetListIds gets a reference to the given []int32 and assigns it to the TargetListIds field.
func (o *SubscriberQueryRequest) SetTargetListIds(v []int32) {
	o.TargetListIds = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SubscriberQueryRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriberQueryRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SubscriberQueryRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SubscriberQueryRequest) SetStatus(v string) {
	o.Status = &v
}

func (o SubscriberQueryRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriberQueryRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if !IsNil(o.Ids) {
		toSerialize["ids"] = o.Ids
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.TargetListIds) {
		toSerialize["target_list_ids"] = o.TargetListIds
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableSubscriberQueryRequest struct {
	value *SubscriberQueryRequest
	isSet bool
}

func (v NullableSubscriberQueryRequest) Get() *SubscriberQueryRequest {
	return v.value
}

func (v *NullableSubscriberQueryRequest) Set(val *SubscriberQueryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriberQueryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriberQueryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriberQueryRequest(val *SubscriberQueryRequest) *NullableSubscriberQueryRequest {
	return &NullableSubscriberQueryRequest{value: val, isSet: true}
}

func (v NullableSubscriberQueryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriberQueryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


