/*
Listmonk

The API collection for listmonk

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LanguagePackData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LanguagePackData{}

// LanguagePackData struct for LanguagePackData
type LanguagePackData struct {
	Code *string `json:"_.code,omitempty"`
	Name *string `json:"_.name,omitempty"`
	AdminErrorMarshallingConfig *string `json:"admin.errorMarshallingConfig,omitempty"`
	AnalyticsCount *string `json:"analytics.count,omitempty"`
	AnalyticsFromDate *string `json:"analytics.fromDate,omitempty"`
	AnalyticsInvalidDates *string `json:"analytics.invalidDates,omitempty"`
	AnalyticsIsUnique *string `json:"analytics.isUnique,omitempty"`
	AnalyticsLinks *string `json:"analytics.links,omitempty"`
	AnalyticsNonUnique *string `json:"analytics.nonUnique,omitempty"`
	AnalyticsTitle *string `json:"analytics.title,omitempty"`
	AnalyticsToDate *string `json:"analytics.toDate,omitempty"`
	BouncesSource *string `json:"bounces.source,omitempty"`
	BouncesUnknownService *string `json:"bounces.unknownService,omitempty"`
	BouncesView *string `json:"bounces.view,omitempty"`
	CampaignsAddAltText *string `json:"campaigns.addAltText,omitempty"`
	CampaignsArchive *string `json:"campaigns.archive,omitempty"`
	CampaignsArchiveEnable *string `json:"campaigns.archiveEnable,omitempty"`
	CampaignsArchiveHelp *string `json:"campaigns.archiveHelp,omitempty"`
	CampaignsArchiveMeta *string `json:"campaigns.archiveMeta,omitempty"`
	CampaignsArchiveMetaHelp *string `json:"campaigns.archiveMetaHelp,omitempty"`
	CampaignsCantUpdate *string `json:"campaigns.cantUpdate,omitempty"`
	CampaignsClicks *string `json:"campaigns.clicks,omitempty"`
	CampaignsConfirmDelete *string `json:"campaigns.confirmDelete,omitempty"`
	CampaignsConfirmSchedule *string `json:"campaigns.confirmSchedule,omitempty"`
	CampaignsConfirmSwitchFormat *string `json:"campaigns.confirmSwitchFormat,omitempty"`
	CampaignsContent *string `json:"campaigns.content,omitempty"`
	CampaignsContentHelp *string `json:"campaigns.contentHelp,omitempty"`
	CampaignsContinue *string `json:"campaigns.continue,omitempty"`
	CampaignsCopyOf *string `json:"campaigns.copyOf,omitempty"`
	CampaignsCustomHeadersHelp *string `json:"campaigns.customHeadersHelp,omitempty"`
	CampaignsDateAndTime *string `json:"campaigns.dateAndTime,omitempty"`
	CampaignsEnded *string `json:"campaigns.ended,omitempty"`
	CampaignsErrorSendTest *string `json:"campaigns.errorSendTest,omitempty"`
	CampaignsFieldInvalidBody *string `json:"campaigns.fieldInvalidBody,omitempty"`
	CampaignsFieldInvalidFromEmail *string `json:"campaigns.fieldInvalidFromEmail,omitempty"`
	CampaignsFieldInvalidListIDs *string `json:"campaigns.fieldInvalidListIDs,omitempty"`
	CampaignsFieldInvalidMessenger *string `json:"campaigns.fieldInvalidMessenger,omitempty"`
	CampaignsFieldInvalidName *string `json:"campaigns.fieldInvalidName,omitempty"`
	CampaignsFieldInvalidSendAt *string `json:"campaigns.fieldInvalidSendAt,omitempty"`
	CampaignsFieldInvalidSubject *string `json:"campaigns.fieldInvalidSubject,omitempty"`
	CampaignsFormatHTML *string `json:"campaigns.formatHTML,omitempty"`
	CampaignsFromAddress *string `json:"campaigns.fromAddress,omitempty"`
	CampaignsFromAddressPlaceholder *string `json:"campaigns.fromAddressPlaceholder,omitempty"`
	CampaignsInvalid *string `json:"campaigns.invalid,omitempty"`
	CampaignsInvalidCustomHeaders *string `json:"campaigns.invalidCustomHeaders,omitempty"`
	CampaignsMarkdown *string `json:"campaigns.markdown,omitempty"`
	CampaignsNeedsSendAt *string `json:"campaigns.needsSendAt,omitempty"`
	CampaignsNewCampaign *string `json:"campaigns.newCampaign,omitempty"`
	CampaignsNoKnownSubsToTest *string `json:"campaigns.noKnownSubsToTest,omitempty"`
	CampaignsNoOptinLists *string `json:"campaigns.noOptinLists,omitempty"`
	CampaignsNoSubs *string `json:"campaigns.noSubs,omitempty"`
	CampaignsNoSubsToTest *string `json:"campaigns.noSubsToTest,omitempty"`
	CampaignsNotFound *string `json:"campaigns.notFound,omitempty"`
	CampaignsOnlyActiveCancel *string `json:"campaigns.onlyActiveCancel,omitempty"`
	CampaignsOnlyActivePause *string `json:"campaigns.onlyActivePause,omitempty"`
	CampaignsOnlyDraftAsScheduled *string `json:"campaigns.onlyDraftAsScheduled,omitempty"`
	CampaignsOnlyPausedDraft *string `json:"campaigns.onlyPausedDraft,omitempty"`
	CampaignsOnlyScheduledAsDraft *string `json:"campaigns.onlyScheduledAsDraft,omitempty"`
	CampaignsPause *string `json:"campaigns.pause,omitempty"`
	CampaignsPlainText *string `json:"campaigns.plainText,omitempty"`
	CampaignsPreview *string `json:"campaigns.preview,omitempty"`
	CampaignsProgress *string `json:"campaigns.progress,omitempty"`
	CampaignsQueryPlaceholder *string `json:"campaigns.queryPlaceholder,omitempty"`
	CampaignsRateMinuteShort *string `json:"campaigns.rateMinuteShort,omitempty"`
	CampaignsRawHTML *string `json:"campaigns.rawHTML,omitempty"`
	CampaignsRemoveAltText *string `json:"campaigns.removeAltText,omitempty"`
	CampaignsRichText *string `json:"campaigns.richText,omitempty"`
	CampaignsSchedule *string `json:"campaigns.schedule,omitempty"`
	CampaignsScheduled *string `json:"campaigns.scheduled,omitempty"`
	CampaignsSend *string `json:"campaigns.send,omitempty"`
	CampaignsSendLater *string `json:"campaigns.sendLater,omitempty"`
	CampaignsSendTest *string `json:"campaigns.sendTest,omitempty"`
	CampaignsSendTestHelp *string `json:"campaigns.sendTestHelp,omitempty"`
	CampaignsSendToLists *string `json:"campaigns.sendToLists,omitempty"`
	CampaignsSent *string `json:"campaigns.sent,omitempty"`
	CampaignsStart *string `json:"campaigns.start,omitempty"`
	CampaignsStarted *string `json:"campaigns.started,omitempty"`
	CampaignsStartedAt *string `json:"campaigns.startedAt,omitempty"`
	CampaignsStats *string `json:"campaigns.stats,omitempty"`
	CampaignsStatusCancelled *string `json:"campaigns.status.cancelled,omitempty"`
	CampaignsStatusDraft *string `json:"campaigns.status.draft,omitempty"`
	CampaignsStatusFinished *string `json:"campaigns.status.finished,omitempty"`
	CampaignsStatusPaused *string `json:"campaigns.status.paused,omitempty"`
	CampaignsStatusRunning *string `json:"campaigns.status.running,omitempty"`
	CampaignsStatusScheduled *string `json:"campaigns.status.scheduled,omitempty"`
	CampaignsStatusChanged *string `json:"campaigns.statusChanged,omitempty"`
	CampaignsSubject *string `json:"campaigns.subject,omitempty"`
	CampaignsTestEmails *string `json:"campaigns.testEmails,omitempty"`
	CampaignsTestSent *string `json:"campaigns.testSent,omitempty"`
	CampaignsTimestamps *string `json:"campaigns.timestamps,omitempty"`
	CampaignsTrackLink *string `json:"campaigns.trackLink,omitempty"`
	CampaignsViews *string `json:"campaigns.views,omitempty"`
	DashboardCampaignViews *string `json:"dashboard.campaignViews,omitempty"`
	DashboardLinkClicks *string `json:"dashboard.linkClicks,omitempty"`
	DashboardMessagesSent *string `json:"dashboard.messagesSent,omitempty"`
	DashboardOrphanSubs *string `json:"dashboard.orphanSubs,omitempty"`
	EmailDataInfo *string `json:"email.data.info,omitempty"`
	EmailDataTitle *string `json:"email.data.title,omitempty"`
	EmailOptinConfirmSub *string `json:"email.optin.confirmSub,omitempty"`
	EmailOptinConfirmSubHelp *string `json:"email.optin.confirmSubHelp,omitempty"`
	EmailOptinConfirmSubInfo *string `json:"email.optin.confirmSubInfo,omitempty"`
	EmailOptinConfirmSubTitle *string `json:"email.optin.confirmSubTitle,omitempty"`
	EmailOptinConfirmSubWelcome *string `json:"email.optin.confirmSubWelcome,omitempty"`
	EmailOptinPrivateList *string `json:"email.optin.privateList,omitempty"`
	EmailStatusCampaignReason *string `json:"email.status.campaignReason,omitempty"`
	EmailStatusCampaignSent *string `json:"email.status.campaignSent,omitempty"`
	EmailStatusCampaignUpdateTitle *string `json:"email.status.campaignUpdateTitle,omitempty"`
	EmailStatusImportFile *string `json:"email.status.importFile,omitempty"`
	EmailStatusImportRecords *string `json:"email.status.importRecords,omitempty"`
	EmailStatusImportTitle *string `json:"email.status.importTitle,omitempty"`
	EmailStatusStatus *string `json:"email.status.status,omitempty"`
	EmailUnsub *string `json:"email.unsub,omitempty"`
	EmailUnsubHelp *string `json:"email.unsubHelp,omitempty"`
	EmailViewInBrowser *string `json:"email.viewInBrowser,omitempty"`
	FormsFormHTML *string `json:"forms.formHTML,omitempty"`
	FormsFormHTMLHelp *string `json:"forms.formHTMLHelp,omitempty"`
	FormsNoPublicLists *string `json:"forms.noPublicLists,omitempty"`
	FormsPublicLists *string `json:"forms.publicLists,omitempty"`
	FormsPublicSubPage *string `json:"forms.publicSubPage,omitempty"`
	FormsSelectHelp *string `json:"forms.selectHelp,omitempty"`
	FormsTitle *string `json:"forms.title,omitempty"`
	GlobalsButtonsAdd *string `json:"globals.buttons.add,omitempty"`
	GlobalsButtonsAddNew *string `json:"globals.buttons.addNew,omitempty"`
	GlobalsButtonsBack *string `json:"globals.buttons.back,omitempty"`
	GlobalsButtonsCancel *string `json:"globals.buttons.cancel,omitempty"`
	GlobalsButtonsClone *string `json:"globals.buttons.clone,omitempty"`
	GlobalsButtonsClose *string `json:"globals.buttons.close,omitempty"`
	GlobalsButtonsContinue *string `json:"globals.buttons.continue,omitempty"`
	GlobalsButtonsDelete *string `json:"globals.buttons.delete,omitempty"`
	GlobalsButtonsDeleteAll *string `json:"globals.buttons.deleteAll,omitempty"`
	GlobalsButtonsEdit *string `json:"globals.buttons.edit,omitempty"`
	GlobalsButtonsEnabled *string `json:"globals.buttons.enabled,omitempty"`
	GlobalsButtonsInsert *string `json:"globals.buttons.insert,omitempty"`
	GlobalsButtonsLearnMore *string `json:"globals.buttons.learnMore,omitempty"`
	GlobalsButtonsMore *string `json:"globals.buttons.more,omitempty"`
	GlobalsButtonsNew *string `json:"globals.buttons.new,omitempty"`
	GlobalsButtonsOk *string `json:"globals.buttons.ok,omitempty"`
	GlobalsButtonsRemove *string `json:"globals.buttons.remove,omitempty"`
	GlobalsButtonsSave *string `json:"globals.buttons.save,omitempty"`
	GlobalsButtonsSaveChanges *string `json:"globals.buttons.saveChanges,omitempty"`
	GlobalsDays0 *string `json:"globals.days.0,omitempty"`
	GlobalsDays1 *string `json:"globals.days.1,omitempty"`
	GlobalsDays2 *string `json:"globals.days.2,omitempty"`
	GlobalsDays3 *string `json:"globals.days.3,omitempty"`
	GlobalsDays4 *string `json:"globals.days.4,omitempty"`
	GlobalsDays5 *string `json:"globals.days.5,omitempty"`
	GlobalsDays6 *string `json:"globals.days.6,omitempty"`
	GlobalsDays7 *string `json:"globals.days.7,omitempty"`
	GlobalsFieldsCreatedAt *string `json:"globals.fields.createdAt,omitempty"`
	GlobalsFieldsDescription *string `json:"globals.fields.description,omitempty"`
	GlobalsFieldsId *string `json:"globals.fields.id,omitempty"`
	GlobalsFieldsName *string `json:"globals.fields.name,omitempty"`
	GlobalsFieldsStatus *string `json:"globals.fields.status,omitempty"`
	GlobalsFieldsType *string `json:"globals.fields.type,omitempty"`
	GlobalsFieldsUpdatedAt *string `json:"globals.fields.updatedAt,omitempty"`
	GlobalsFieldsUuid *string `json:"globals.fields.uuid,omitempty"`
	GlobalsMessagesConfirm *string `json:"globals.messages.confirm,omitempty"`
	GlobalsMessagesConfirmDiscard *string `json:"globals.messages.confirmDiscard,omitempty"`
	GlobalsMessagesCreated *string `json:"globals.messages.created,omitempty"`
	GlobalsMessagesDeleted *string `json:"globals.messages.deleted,omitempty"`
	GlobalsMessagesDeletedCount *string `json:"globals.messages.deletedCount,omitempty"`
	GlobalsMessagesDone *string `json:"globals.messages.done,omitempty"`
	GlobalsMessagesEmptyState *string `json:"globals.messages.emptyState,omitempty"`
	GlobalsMessagesErrorCreating *string `json:"globals.messages.errorCreating,omitempty"`
	GlobalsMessagesErrorDeleting *string `json:"globals.messages.errorDeleting,omitempty"`
	GlobalsMessagesErrorFetching *string `json:"globals.messages.errorFetching,omitempty"`
	GlobalsMessagesErrorInvalidIDs *string `json:"globals.messages.errorInvalidIDs,omitempty"`
	GlobalsMessagesErrorUUID *string `json:"globals.messages.errorUUID,omitempty"`
	GlobalsMessagesErrorUpdating *string `json:"globals.messages.errorUpdating,omitempty"`
	GlobalsMessagesInternalError *string `json:"globals.messages.internalError,omitempty"`
	GlobalsMessagesInvalidData *string `json:"globals.messages.invalidData,omitempty"`
	GlobalsMessagesInvalidID *string `json:"globals.messages.invalidID,omitempty"`
	GlobalsMessagesInvalidUUID *string `json:"globals.messages.invalidUUID,omitempty"`
	GlobalsMessagesMissingFields *string `json:"globals.messages.missingFields,omitempty"`
	GlobalsMessagesNotFound *string `json:"globals.messages.notFound,omitempty"`
	GlobalsMessagesPasswordChange *string `json:"globals.messages.passwordChange,omitempty"`
	GlobalsMessagesUpdated *string `json:"globals.messages.updated,omitempty"`
	GlobalsMonths1 *string `json:"globals.months.1,omitempty"`
	GlobalsMonths10 *string `json:"globals.months.10,omitempty"`
	GlobalsMonths11 *string `json:"globals.months.11,omitempty"`
	GlobalsMonths12 *string `json:"globals.months.12,omitempty"`
	GlobalsMonths2 *string `json:"globals.months.2,omitempty"`
	GlobalsMonths3 *string `json:"globals.months.3,omitempty"`
	GlobalsMonths4 *string `json:"globals.months.4,omitempty"`
	GlobalsMonths5 *string `json:"globals.months.5,omitempty"`
	GlobalsMonths6 *string `json:"globals.months.6,omitempty"`
	GlobalsMonths7 *string `json:"globals.months.7,omitempty"`
	GlobalsMonths8 *string `json:"globals.months.8,omitempty"`
	GlobalsMonths9 *string `json:"globals.months.9,omitempty"`
	GlobalsStatesOff *string `json:"globals.states.off,omitempty"`
	GlobalsTermsAll *string `json:"globals.terms.all,omitempty"`
	GlobalsTermsAnalytics *string `json:"globals.terms.analytics,omitempty"`
	GlobalsTermsBounce *string `json:"globals.terms.bounce,omitempty"`
	GlobalsTermsBounces *string `json:"globals.terms.bounces,omitempty"`
	GlobalsTermsCampaign *string `json:"globals.terms.campaign,omitempty"`
	GlobalsTermsCampaigns *string `json:"globals.terms.campaigns,omitempty"`
	GlobalsTermsDashboard *string `json:"globals.terms.dashboard,omitempty"`
	GlobalsTermsDay *string `json:"globals.terms.day,omitempty"`
	GlobalsTermsHour *string `json:"globals.terms.hour,omitempty"`
	GlobalsTermsList *string `json:"globals.terms.list,omitempty"`
	GlobalsTermsLists *string `json:"globals.terms.lists,omitempty"`
	GlobalsTermsMedia *string `json:"globals.terms.media,omitempty"`
	GlobalsTermsMessenger *string `json:"globals.terms.messenger,omitempty"`
	GlobalsTermsMessengers *string `json:"globals.terms.messengers,omitempty"`
	GlobalsTermsMinute *string `json:"globals.terms.minute,omitempty"`
	GlobalsTermsMonth *string `json:"globals.terms.month,omitempty"`
	GlobalsTermsSecond *string `json:"globals.terms.second,omitempty"`
	GlobalsTermsSettings *string `json:"globals.terms.settings,omitempty"`
	GlobalsTermsSubscriber *string `json:"globals.terms.subscriber,omitempty"`
	GlobalsTermsSubscribers *string `json:"globals.terms.subscribers,omitempty"`
	GlobalsTermsSubscriptions *string `json:"globals.terms.subscriptions,omitempty"`
	GlobalsTermsTag *string `json:"globals.terms.tag,omitempty"`
	GlobalsTermsTags *string `json:"globals.terms.tags,omitempty"`
	GlobalsTermsTemplate *string `json:"globals.terms.template,omitempty"`
	GlobalsTermsTemplates *string `json:"globals.terms.templates,omitempty"`
	GlobalsTermsTx *string `json:"globals.terms.tx,omitempty"`
	GlobalsTermsYear *string `json:"globals.terms.year,omitempty"`
	ImportAlreadyRunning *string `json:"import.alreadyRunning,omitempty"`
	ImportBlocklist *string `json:"import.blocklist,omitempty"`
	ImportCsvDelim *string `json:"import.csvDelim,omitempty"`
	ImportCsvDelimHelp *string `json:"import.csvDelimHelp,omitempty"`
	ImportCsvExample *string `json:"import.csvExample,omitempty"`
	ImportCsvFile *string `json:"import.csvFile,omitempty"`
	ImportCsvFileHelp *string `json:"import.csvFileHelp,omitempty"`
	ImportErrorCopyingFile *string `json:"import.errorCopyingFile,omitempty"`
	ImportErrorProcessingZIP *string `json:"import.errorProcessingZIP,omitempty"`
	ImportErrorStarting *string `json:"import.errorStarting,omitempty"`
	ImportImportDone *string `json:"import.importDone,omitempty"`
	ImportImportStarted *string `json:"import.importStarted,omitempty"`
	ImportInstructions *string `json:"import.instructions,omitempty"`
	ImportInstructionsHelp *string `json:"import.instructionsHelp,omitempty"`
	ImportInvalidDelim *string `json:"import.invalidDelim,omitempty"`
	ImportInvalidFile *string `json:"import.invalidFile,omitempty"`
	ImportInvalidMode *string `json:"import.invalidMode,omitempty"`
	ImportInvalidParams *string `json:"import.invalidParams,omitempty"`
	ImportInvalidSubStatus *string `json:"import.invalidSubStatus,omitempty"`
	ImportListSubHelp *string `json:"import.listSubHelp,omitempty"`
	ImportMode *string `json:"import.mode,omitempty"`
	ImportOverwrite *string `json:"import.overwrite,omitempty"`
	ImportOverwriteHelp *string `json:"import.overwriteHelp,omitempty"`
	ImportRecordsCount *string `json:"import.recordsCount,omitempty"`
	ImportStopImport *string `json:"import.stopImport,omitempty"`
	ImportSubscribe *string `json:"import.subscribe,omitempty"`
	ImportTitle *string `json:"import.title,omitempty"`
	ImportUpload *string `json:"import.upload,omitempty"`
	ListsConfirmDelete *string `json:"lists.confirmDelete,omitempty"`
	ListsConfirmSub *string `json:"lists.confirmSub,omitempty"`
	ListsInvalidName *string `json:"lists.invalidName,omitempty"`
	ListsNewList *string `json:"lists.newList,omitempty"`
	ListsOptin *string `json:"lists.optin,omitempty"`
	ListsOptinHelp *string `json:"lists.optinHelp,omitempty"`
	ListsOptinTo *string `json:"lists.optinTo,omitempty"`
	ListsOptinsDouble *string `json:"lists.optins.double,omitempty"`
	ListsOptinsSingle *string `json:"lists.optins.single,omitempty"`
	ListsSendCampaign *string `json:"lists.sendCampaign,omitempty"`
	ListsSendOptinCampaign *string `json:"lists.sendOptinCampaign,omitempty"`
	ListsType *string `json:"lists.type,omitempty"`
	ListsTypeHelp *string `json:"lists.typeHelp,omitempty"`
	ListsTypesPrivate *string `json:"lists.types.private,omitempty"`
	ListsTypesPublic *string `json:"lists.types.public,omitempty"`
	LogsTitle *string `json:"logs.title,omitempty"`
	MaintenanceHelp *string `json:"maintenance.help,omitempty"`
	MaintenanceMaintenanceUnconfirmedOptins *string `json:"maintenance.maintenance.unconfirmedOptins,omitempty"`
	MaintenanceOlderThan *string `json:"maintenance.olderThan,omitempty"`
	MaintenanceTitle *string `json:"maintenance.title,omitempty"`
	MaintenanceUnconfirmedSubs *string `json:"maintenance.unconfirmedSubs,omitempty"`
	MediaErrorReadingFile *string `json:"media.errorReadingFile,omitempty"`
	MediaErrorResizing *string `json:"media.errorResizing,omitempty"`
	MediaErrorSavingThumbnail *string `json:"media.errorSavingThumbnail,omitempty"`
	MediaErrorUploading *string `json:"media.errorUploading,omitempty"`
	MediaInvalidFile *string `json:"media.invalidFile,omitempty"`
	MediaTitle *string `json:"media.title,omitempty"`
	MediaUnsupportedFileType *string `json:"media.unsupportedFileType,omitempty"`
	MediaUpload *string `json:"media.upload,omitempty"`
	MediaUploadHelp *string `json:"media.uploadHelp,omitempty"`
	MediaUploadImage *string `json:"media.uploadImage,omitempty"`
	MenuAllCampaigns *string `json:"menu.allCampaigns,omitempty"`
	MenuAllLists *string `json:"menu.allLists,omitempty"`
	MenuAllSubscribers *string `json:"menu.allSubscribers,omitempty"`
	MenuDashboard *string `json:"menu.dashboard,omitempty"`
	MenuForms *string `json:"menu.forms,omitempty"`
	MenuImport *string `json:"menu.import,omitempty"`
	MenuLogs *string `json:"menu.logs,omitempty"`
	MenuMaintenance *string `json:"menu.maintenance,omitempty"`
	MenuMedia *string `json:"menu.media,omitempty"`
	MenuNewCampaign *string `json:"menu.newCampaign,omitempty"`
	MenuSettings *string `json:"menu.settings,omitempty"`
	PublicArchiveEmpty *string `json:"public.archiveEmpty,omitempty"`
	PublicArchiveTitle *string `json:"public.archiveTitle,omitempty"`
	PublicBlocklisted *string `json:"public.blocklisted,omitempty"`
	PublicCampaignNotFound *string `json:"public.campaignNotFound,omitempty"`
	PublicConfirmOptinSubTitle *string `json:"public.confirmOptinSubTitle,omitempty"`
	PublicConfirmSub *string `json:"public.confirmSub,omitempty"`
	PublicConfirmSubInfo *string `json:"public.confirmSubInfo,omitempty"`
	PublicConfirmSubTitle *string `json:"public.confirmSubTitle,omitempty"`
	PublicDataRemoved *string `json:"public.dataRemoved,omitempty"`
	PublicDataRemovedTitle *string `json:"public.dataRemovedTitle,omitempty"`
	PublicDataSent *string `json:"public.dataSent,omitempty"`
	PublicDataSentTitle *string `json:"public.dataSentTitle,omitempty"`
	PublicErrorFetchingCampaign *string `json:"public.errorFetchingCampaign,omitempty"`
	PublicErrorFetchingEmail *string `json:"public.errorFetchingEmail,omitempty"`
	PublicErrorFetchingLists *string `json:"public.errorFetchingLists,omitempty"`
	PublicErrorProcessingRequest *string `json:"public.errorProcessingRequest,omitempty"`
	PublicErrorTitle *string `json:"public.errorTitle,omitempty"`
	PublicInvalidFeature *string `json:"public.invalidFeature,omitempty"`
	PublicInvalidLink *string `json:"public.invalidLink,omitempty"`
	PublicManagePrefs *string `json:"public.managePrefs,omitempty"`
	PublicManagePrefsUnsub *string `json:"public.managePrefsUnsub,omitempty"`
	PublicNoListsAvailable *string `json:"public.noListsAvailable,omitempty"`
	PublicNoListsSelected *string `json:"public.noListsSelected,omitempty"`
	PublicNoSubInfo *string `json:"public.noSubInfo,omitempty"`
	PublicNoSubTitle *string `json:"public.noSubTitle,omitempty"`
	PublicNotFoundTitle *string `json:"public.notFoundTitle,omitempty"`
	PublicPrefsSaved *string `json:"public.prefsSaved,omitempty"`
	PublicPrivacyConfirmWipe *string `json:"public.privacyConfirmWipe,omitempty"`
	PublicPrivacyExport *string `json:"public.privacyExport,omitempty"`
	PublicPrivacyExportHelp *string `json:"public.privacyExportHelp,omitempty"`
	PublicPrivacyTitle *string `json:"public.privacyTitle,omitempty"`
	PublicPrivacyWipe *string `json:"public.privacyWipe,omitempty"`
	PublicPrivacyWipeHelp *string `json:"public.privacyWipeHelp,omitempty"`
	PublicSub *string `json:"public.sub,omitempty"`
	PublicSubConfirmed *string `json:"public.subConfirmed,omitempty"`
	PublicSubConfirmedTitle *string `json:"public.subConfirmedTitle,omitempty"`
	PublicSubName *string `json:"public.subName,omitempty"`
	PublicSubNotFound *string `json:"public.subNotFound,omitempty"`
	PublicSubOptinPending *string `json:"public.subOptinPending,omitempty"`
	PublicSubPrivateList *string `json:"public.subPrivateList,omitempty"`
	PublicSubTitle *string `json:"public.subTitle,omitempty"`
	PublicUnsub *string `json:"public.unsub,omitempty"`
	PublicUnsubFull *string `json:"public.unsubFull,omitempty"`
	PublicUnsubHelp *string `json:"public.unsubHelp,omitempty"`
	PublicUnsubTitle *string `json:"public.unsubTitle,omitempty"`
	PublicUnsubbedInfo *string `json:"public.unsubbedInfo,omitempty"`
	PublicUnsubbedTitle *string `json:"public.unsubbedTitle,omitempty"`
	PublicUnsubscribeTitle *string `json:"public.unsubscribeTitle,omitempty"`
	SettingsAppearanceAdminHelp *string `json:"settings.appearance.adminHelp,omitempty"`
	SettingsAppearanceAdminName *string `json:"settings.appearance.adminName,omitempty"`
	SettingsAppearanceCustomCSS *string `json:"settings.appearance.customCSS,omitempty"`
	SettingsAppearanceCustomJS *string `json:"settings.appearance.customJS,omitempty"`
	SettingsAppearanceName *string `json:"settings.appearance.name,omitempty"`
	SettingsAppearancePublicHelp *string `json:"settings.appearance.publicHelp,omitempty"`
	SettingsAppearancePublicName *string `json:"settings.appearance.publicName,omitempty"`
	SettingsBouncesAction *string `json:"settings.bounces.action,omitempty"`
	SettingsBouncesBlocklist *string `json:"settings.bounces.blocklist,omitempty"`
	SettingsBouncesCount *string `json:"settings.bounces.count,omitempty"`
	SettingsBouncesCountHelp *string `json:"settings.bounces.countHelp,omitempty"`
	SettingsBouncesDelete *string `json:"settings.bounces.delete,omitempty"`
	SettingsBouncesEnable *string `json:"settings.bounces.enable,omitempty"`
	SettingsBouncesEnableMailbox *string `json:"settings.bounces.enableMailbox,omitempty"`
	SettingsBouncesEnableSES *string `json:"settings.bounces.enableSES,omitempty"`
	SettingsBouncesEnableSendgrid *string `json:"settings.bounces.enableSendgrid,omitempty"`
	SettingsBouncesEnableWebhooks *string `json:"settings.bounces.enableWebhooks,omitempty"`
	SettingsBouncesEnabled *string `json:"settings.bounces.enabled,omitempty"`
	SettingsBouncesFolder *string `json:"settings.bounces.folder,omitempty"`
	SettingsBouncesFolderHelp *string `json:"settings.bounces.folderHelp,omitempty"`
	SettingsBouncesInvalidScanInterval *string `json:"settings.bounces.invalidScanInterval,omitempty"`
	SettingsBouncesName *string `json:"settings.bounces.name,omitempty"`
	SettingsBouncesScanInterval *string `json:"settings.bounces.scanInterval,omitempty"`
	SettingsBouncesScanIntervalHelp *string `json:"settings.bounces.scanIntervalHelp,omitempty"`
	SettingsBouncesSendgridKey *string `json:"settings.bounces.sendgridKey,omitempty"`
	SettingsBouncesType *string `json:"settings.bounces.type,omitempty"`
	SettingsBouncesUsername *string `json:"settings.bounces.username,omitempty"`
	SettingsConfirmRestart *string `json:"settings.confirmRestart,omitempty"`
	SettingsDuplicateMessengerName *string `json:"settings.duplicateMessengerName,omitempty"`
	SettingsErrorEncoding *string `json:"settings.errorEncoding,omitempty"`
	SettingsErrorNoSMTP *string `json:"settings.errorNoSMTP,omitempty"`
	SettingsGeneralAdminNotifEmails *string `json:"settings.general.adminNotifEmails,omitempty"`
	SettingsGeneralAdminNotifEmailsHelp *string `json:"settings.general.adminNotifEmailsHelp,omitempty"`
	SettingsGeneralCheckUpdates *string `json:"settings.general.checkUpdates,omitempty"`
	SettingsGeneralCheckUpdatesHelp *string `json:"settings.general.checkUpdatesHelp,omitempty"`
	SettingsGeneralEnablePublicArchive *string `json:"settings.general.enablePublicArchive,omitempty"`
	SettingsGeneralEnablePublicArchiveHelp *string `json:"settings.general.enablePublicArchiveHelp,omitempty"`
	SettingsGeneralEnablePublicSubPage *string `json:"settings.general.enablePublicSubPage,omitempty"`
	SettingsGeneralEnablePublicSubPageHelp *string `json:"settings.general.enablePublicSubPageHelp,omitempty"`
	SettingsGeneralFaviconURL *string `json:"settings.general.faviconURL,omitempty"`
	SettingsGeneralFaviconURLHelp *string `json:"settings.general.faviconURLHelp,omitempty"`
	SettingsGeneralFromEmail *string `json:"settings.general.fromEmail,omitempty"`
	SettingsGeneralFromEmailHelp *string `json:"settings.general.fromEmailHelp,omitempty"`
	SettingsGeneralLanguage *string `json:"settings.general.language,omitempty"`
	SettingsGeneralLogoURL *string `json:"settings.general.logoURL,omitempty"`
	SettingsGeneralLogoURLHelp *string `json:"settings.general.logoURLHelp,omitempty"`
	SettingsGeneralName *string `json:"settings.general.name,omitempty"`
	SettingsGeneralRootURL *string `json:"settings.general.rootURL,omitempty"`
	SettingsGeneralRootURLHelp *string `json:"settings.general.rootURLHelp,omitempty"`
	SettingsGeneralSendOptinConfirm *string `json:"settings.general.sendOptinConfirm,omitempty"`
	SettingsGeneralSendOptinConfirmHelp *string `json:"settings.general.sendOptinConfirmHelp,omitempty"`
	SettingsGeneralSiteName *string `json:"settings.general.siteName,omitempty"`
	SettingsInvalidMessengerName *string `json:"settings.invalidMessengerName,omitempty"`
	SettingsMailserverAuthProtocol *string `json:"settings.mailserver.authProtocol,omitempty"`
	SettingsMailserverHost *string `json:"settings.mailserver.host,omitempty"`
	SettingsMailserverHostHelp *string `json:"settings.mailserver.hostHelp,omitempty"`
	SettingsMailserverIdleTimeout *string `json:"settings.mailserver.idleTimeout,omitempty"`
	SettingsMailserverIdleTimeoutHelp *string `json:"settings.mailserver.idleTimeoutHelp,omitempty"`
	SettingsMailserverMaxConns *string `json:"settings.mailserver.maxConns,omitempty"`
	SettingsMailserverMaxConnsHelp *string `json:"settings.mailserver.maxConnsHelp,omitempty"`
	SettingsMailserverPassword *string `json:"settings.mailserver.password,omitempty"`
	SettingsMailserverPasswordHelp *string `json:"settings.mailserver.passwordHelp,omitempty"`
	SettingsMailserverPort *string `json:"settings.mailserver.port,omitempty"`
	SettingsMailserverPortHelp *string `json:"settings.mailserver.portHelp,omitempty"`
	SettingsMailserverSkipTLS *string `json:"settings.mailserver.skipTLS,omitempty"`
	SettingsMailserverSkipTLSHelp *string `json:"settings.mailserver.skipTLSHelp,omitempty"`
	SettingsMailserverTls *string `json:"settings.mailserver.tls,omitempty"`
	SettingsMailserverTlsHelp *string `json:"settings.mailserver.tlsHelp,omitempty"`
	SettingsMailserverUsername *string `json:"settings.mailserver.username,omitempty"`
	SettingsMailserverWaitTimeout *string `json:"settings.mailserver.waitTimeout,omitempty"`
	SettingsMailserverWaitTimeoutHelp *string `json:"settings.mailserver.waitTimeoutHelp,omitempty"`
	SettingsMediaProvider *string `json:"settings.media.provider,omitempty"`
	SettingsMediaS3Bucket *string `json:"settings.media.s3.bucket,omitempty"`
	SettingsMediaS3BucketPath *string `json:"settings.media.s3.bucketPath,omitempty"`
	SettingsMediaS3BucketPathHelp *string `json:"settings.media.s3.bucketPathHelp,omitempty"`
	SettingsMediaS3BucketType *string `json:"settings.media.s3.bucketType,omitempty"`
	SettingsMediaS3BucketTypePrivate *string `json:"settings.media.s3.bucketTypePrivate,omitempty"`
	SettingsMediaS3BucketTypePublic *string `json:"settings.media.s3.bucketTypePublic,omitempty"`
	SettingsMediaS3Key *string `json:"settings.media.s3.key,omitempty"`
	SettingsMediaS3PublicURL *string `json:"settings.media.s3.publicURL,omitempty"`
	SettingsMediaS3PublicURLHelp *string `json:"settings.media.s3.publicURLHelp,omitempty"`
	SettingsMediaS3Region *string `json:"settings.media.s3.region,omitempty"`
	SettingsMediaS3Secret *string `json:"settings.media.s3.secret,omitempty"`
	SettingsMediaS3UploadExpiry *string `json:"settings.media.s3.uploadExpiry,omitempty"`
	SettingsMediaS3UploadExpiryHelp *string `json:"settings.media.s3.uploadExpiryHelp,omitempty"`
	SettingsMediaS3Url *string `json:"settings.media.s3.url,omitempty"`
	SettingsMediaS3UrlHelp *string `json:"settings.media.s3.urlHelp,omitempty"`
	SettingsMediaTitle *string `json:"settings.media.title,omitempty"`
	SettingsMediaUploadPath *string `json:"settings.media.upload.path,omitempty"`
	SettingsMediaUploadPathHelp *string `json:"settings.media.upload.pathHelp,omitempty"`
	SettingsMediaUploadUri *string `json:"settings.media.upload.uri,omitempty"`
	SettingsMediaUploadUriHelp *string `json:"settings.media.upload.uriHelp,omitempty"`
	SettingsMessengersMaxConns *string `json:"settings.messengers.maxConns,omitempty"`
	SettingsMessengersMaxConnsHelp *string `json:"settings.messengers.maxConnsHelp,omitempty"`
	SettingsMessengersMessageSaved *string `json:"settings.messengers.messageSaved,omitempty"`
	SettingsMessengersName *string `json:"settings.messengers.name,omitempty"`
	SettingsMessengersNameHelp *string `json:"settings.messengers.nameHelp,omitempty"`
	SettingsMessengersPassword *string `json:"settings.messengers.password,omitempty"`
	SettingsMessengersRetries *string `json:"settings.messengers.retries,omitempty"`
	SettingsMessengersRetriesHelp *string `json:"settings.messengers.retriesHelp,omitempty"`
	SettingsMessengersSkipTLSHelp *string `json:"settings.messengers.skipTLSHelp,omitempty"`
	SettingsMessengersTimeout *string `json:"settings.messengers.timeout,omitempty"`
	SettingsMessengersTimeoutHelp *string `json:"settings.messengers.timeoutHelp,omitempty"`
	SettingsMessengersUrl *string `json:"settings.messengers.url,omitempty"`
	SettingsMessengersUrlHelp *string `json:"settings.messengers.urlHelp,omitempty"`
	SettingsMessengersUsername *string `json:"settings.messengers.username,omitempty"`
	SettingsNeedsRestart *string `json:"settings.needsRestart,omitempty"`
	SettingsPerformanceBatchSize *string `json:"settings.performance.batchSize,omitempty"`
	SettingsPerformanceBatchSizeHelp *string `json:"settings.performance.batchSizeHelp,omitempty"`
	SettingsPerformanceConcurrency *string `json:"settings.performance.concurrency,omitempty"`
	SettingsPerformanceConcurrencyHelp *string `json:"settings.performance.concurrencyHelp,omitempty"`
	SettingsPerformanceMaxErrThreshold *string `json:"settings.performance.maxErrThreshold,omitempty"`
	SettingsPerformanceMaxErrThresholdHelp *string `json:"settings.performance.maxErrThresholdHelp,omitempty"`
	SettingsPerformanceMessageRate *string `json:"settings.performance.messageRate,omitempty"`
	SettingsPerformanceMessageRateHelp *string `json:"settings.performance.messageRateHelp,omitempty"`
	SettingsPerformanceName *string `json:"settings.performance.name,omitempty"`
	SettingsPerformanceSlidingWindow *string `json:"settings.performance.slidingWindow,omitempty"`
	SettingsPerformanceSlidingWindowDuration *string `json:"settings.performance.slidingWindowDuration,omitempty"`
	SettingsPerformanceSlidingWindowDurationHelp *string `json:"settings.performance.slidingWindowDurationHelp,omitempty"`
	SettingsPerformanceSlidingWindowHelp *string `json:"settings.performance.slidingWindowHelp,omitempty"`
	SettingsPerformanceSlidingWindowRate *string `json:"settings.performance.slidingWindowRate,omitempty"`
	SettingsPerformanceSlidingWindowRateHelp *string `json:"settings.performance.slidingWindowRateHelp,omitempty"`
	SettingsPrivacyAllowBlocklist *string `json:"settings.privacy.allowBlocklist,omitempty"`
	SettingsPrivacyAllowBlocklistHelp *string `json:"settings.privacy.allowBlocklistHelp,omitempty"`
	SettingsPrivacyAllowExport *string `json:"settings.privacy.allowExport,omitempty"`
	SettingsPrivacyAllowExportHelp *string `json:"settings.privacy.allowExportHelp,omitempty"`
	SettingsPrivacyAllowPrefs *string `json:"settings.privacy.allowPrefs,omitempty"`
	SettingsPrivacyAllowPrefsHelp *string `json:"settings.privacy.allowPrefsHelp,omitempty"`
	SettingsPrivacyAllowWipe *string `json:"settings.privacy.allowWipe,omitempty"`
	SettingsPrivacyAllowWipeHelp *string `json:"settings.privacy.allowWipeHelp,omitempty"`
	SettingsPrivacyDomainBlocklist *string `json:"settings.privacy.domainBlocklist,omitempty"`
	SettingsPrivacyDomainBlocklistHelp *string `json:"settings.privacy.domainBlocklistHelp,omitempty"`
	SettingsPrivacyIndividualSubTracking *string `json:"settings.privacy.individualSubTracking,omitempty"`
	SettingsPrivacyIndividualSubTrackingHelp *string `json:"settings.privacy.individualSubTrackingHelp,omitempty"`
	SettingsPrivacyListUnsubHeader *string `json:"settings.privacy.listUnsubHeader,omitempty"`
	SettingsPrivacyListUnsubHeaderHelp *string `json:"settings.privacy.listUnsubHeaderHelp,omitempty"`
	SettingsPrivacyName *string `json:"settings.privacy.name,omitempty"`
	SettingsRestart *string `json:"settings.restart,omitempty"`
	SettingsSmtpCustomHeaders *string `json:"settings.smtp.customHeaders,omitempty"`
	SettingsSmtpCustomHeadersHelp *string `json:"settings.smtp.customHeadersHelp,omitempty"`
	SettingsSmtpEnabled *string `json:"settings.smtp.enabled,omitempty"`
	SettingsSmtpHeloHost *string `json:"settings.smtp.heloHost,omitempty"`
	SettingsSmtpHeloHostHelp *string `json:"settings.smtp.heloHostHelp,omitempty"`
	SettingsSmtpName *string `json:"settings.smtp.name,omitempty"`
	SettingsSmtpRetries *string `json:"settings.smtp.retries,omitempty"`
	SettingsSmtpRetriesHelp *string `json:"settings.smtp.retriesHelp,omitempty"`
	SettingsSmtpSendTest *string `json:"settings.smtp.sendTest,omitempty"`
	SettingsSmtpSetCustomHeaders *string `json:"settings.smtp.setCustomHeaders,omitempty"`
	SettingsSmtpTestConnection *string `json:"settings.smtp.testConnection,omitempty"`
	SettingsSmtpTestEnterEmail *string `json:"settings.smtp.testEnterEmail,omitempty"`
	SettingsSmtpToEmail *string `json:"settings.smtp.toEmail,omitempty"`
	SettingsTitle *string `json:"settings.title,omitempty"`
	SettingsUpdateAvailable *string `json:"settings.updateAvailable,omitempty"`
	SubscribersAdvancedQuery *string `json:"subscribers.advancedQuery,omitempty"`
	SubscribersAdvancedQueryHelp *string `json:"subscribers.advancedQueryHelp,omitempty"`
	SubscribersAttribs *string `json:"subscribers.attribs,omitempty"`
	SubscribersAttribsHelp *string `json:"subscribers.attribsHelp,omitempty"`
	SubscribersBlocklistedHelp *string `json:"subscribers.blocklistedHelp,omitempty"`
	SubscribersConfirmBlocklist *string `json:"subscribers.confirmBlocklist,omitempty"`
	SubscribersConfirmDelete *string `json:"subscribers.confirmDelete,omitempty"`
	SubscribersConfirmExport *string `json:"subscribers.confirmExport,omitempty"`
	SubscribersDomainBlocklisted *string `json:"subscribers.domainBlocklisted,omitempty"`
	SubscribersDownloadData *string `json:"subscribers.downloadData,omitempty"`
	SubscribersEmail *string `json:"subscribers.email,omitempty"`
	SubscribersEmailExists *string `json:"subscribers.emailExists,omitempty"`
	SubscribersErrorBlocklisting *string `json:"subscribers.errorBlocklisting,omitempty"`
	SubscribersErrorNoIDs *string `json:"subscribers.errorNoIDs,omitempty"`
	SubscribersErrorNoListsGiven *string `json:"subscribers.errorNoListsGiven,omitempty"`
	SubscribersErrorPreparingQuery *string `json:"subscribers.errorPreparingQuery,omitempty"`
	SubscribersErrorSendingOptin *string `json:"subscribers.errorSendingOptin,omitempty"`
	SubscribersExport *string `json:"subscribers.export,omitempty"`
	SubscribersInvalidAction *string `json:"subscribers.invalidAction,omitempty"`
	SubscribersInvalidEmail *string `json:"subscribers.invalidEmail,omitempty"`
	SubscribersInvalidJSON *string `json:"subscribers.invalidJSON,omitempty"`
	SubscribersInvalidName *string `json:"subscribers.invalidName,omitempty"`
	SubscribersListChangeApplied *string `json:"subscribers.listChangeApplied,omitempty"`
	SubscribersLists *string `json:"subscribers.lists,omitempty"`
	SubscribersListsHelp *string `json:"subscribers.listsHelp,omitempty"`
	SubscribersListsPlaceholder *string `json:"subscribers.listsPlaceholder,omitempty"`
	SubscribersManageLists *string `json:"subscribers.manageLists,omitempty"`
	SubscribersMarkUnsubscribed *string `json:"subscribers.markUnsubscribed,omitempty"`
	SubscribersNewSubscriber *string `json:"subscribers.newSubscriber,omitempty"`
	SubscribersNumSelected *string `json:"subscribers.numSelected,omitempty"`
	SubscribersOptinSubject *string `json:"subscribers.optinSubject,omitempty"`
	SubscribersPreconfirm *string `json:"subscribers.preconfirm,omitempty"`
	SubscribersPreconfirmHelp *string `json:"subscribers.preconfirmHelp,omitempty"`
	SubscribersQuery *string `json:"subscribers.query,omitempty"`
	SubscribersQueryPlaceholder *string `json:"subscribers.queryPlaceholder,omitempty"`
	SubscribersReset *string `json:"subscribers.reset,omitempty"`
	SubscribersSelectAll *string `json:"subscribers.selectAll,omitempty"`
	SubscribersSendOptinConfirm *string `json:"subscribers.sendOptinConfirm,omitempty"`
	SubscribersSentOptinConfirm *string `json:"subscribers.sentOptinConfirm,omitempty"`
	SubscribersStatusBlocklisted *string `json:"subscribers.status.blocklisted,omitempty"`
	SubscribersStatusConfirmed *string `json:"subscribers.status.confirmed,omitempty"`
	SubscribersStatusEnabled *string `json:"subscribers.status.enabled,omitempty"`
	SubscribersStatusSubscribed *string `json:"subscribers.status.subscribed,omitempty"`
	SubscribersStatusUnconfirmed *string `json:"subscribers.status.unconfirmed,omitempty"`
	SubscribersStatusUnsubscribed *string `json:"subscribers.status.unsubscribed,omitempty"`
	SubscribersSubscribersDeleted *string `json:"subscribers.subscribersDeleted,omitempty"`
	TemplatesCantDeleteDefault *string `json:"templates.cantDeleteDefault,omitempty"`
	TemplatesDefault *string `json:"templates.default,omitempty"`
	TemplatesDummyName *string `json:"templates.dummyName,omitempty"`
	TemplatesDummySubject *string `json:"templates.dummySubject,omitempty"`
	TemplatesErrorCompiling *string `json:"templates.errorCompiling,omitempty"`
	TemplatesErrorRendering *string `json:"templates.errorRendering,omitempty"`
	TemplatesFieldInvalidName *string `json:"templates.fieldInvalidName,omitempty"`
	TemplatesMakeDefault *string `json:"templates.makeDefault,omitempty"`
	TemplatesNewTemplate *string `json:"templates.newTemplate,omitempty"`
	TemplatesPlaceholderHelp *string `json:"templates.placeholderHelp,omitempty"`
	TemplatesPreview *string `json:"templates.preview,omitempty"`
	TemplatesRawHTML *string `json:"templates.rawHTML,omitempty"`
	TemplatesSubject *string `json:"templates.subject,omitempty"`
	UsersLogin *string `json:"users.login,omitempty"`
	UsersLogout *string `json:"users.logout,omitempty"`
}

// NewLanguagePackData instantiates a new LanguagePackData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLanguagePackData() *LanguagePackData {
	this := LanguagePackData{}
	return &this
}

// NewLanguagePackDataWithDefaults instantiates a new LanguagePackData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLanguagePackDataWithDefaults() *LanguagePackData {
	this := LanguagePackData{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *LanguagePackData) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *LanguagePackData) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *LanguagePackData) SetCode(v string) {
	o.Code = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LanguagePackData) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LanguagePackData) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LanguagePackData) SetName(v string) {
	o.Name = &v
}

// GetAdminErrorMarshallingConfig returns the AdminErrorMarshallingConfig field value if set, zero value otherwise.
func (o *LanguagePackData) GetAdminErrorMarshallingConfig() string {
	if o == nil || IsNil(o.AdminErrorMarshallingConfig) {
		var ret string
		return ret
	}
	return *o.AdminErrorMarshallingConfig
}

// GetAdminErrorMarshallingConfigOk returns a tuple with the AdminErrorMarshallingConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetAdminErrorMarshallingConfigOk() (*string, bool) {
	if o == nil || IsNil(o.AdminErrorMarshallingConfig) {
		return nil, false
	}
	return o.AdminErrorMarshallingConfig, true
}

// HasAdminErrorMarshallingConfig returns a boolean if a field has been set.
func (o *LanguagePackData) HasAdminErrorMarshallingConfig() bool {
	if o != nil && !IsNil(o.AdminErrorMarshallingConfig) {
		return true
	}

	return false
}

// SetAdminErrorMarshallingConfig gets a reference to the given string and assigns it to the AdminErrorMarshallingConfig field.
func (o *LanguagePackData) SetAdminErrorMarshallingConfig(v string) {
	o.AdminErrorMarshallingConfig = &v
}

// GetAnalyticsCount returns the AnalyticsCount field value if set, zero value otherwise.
func (o *LanguagePackData) GetAnalyticsCount() string {
	if o == nil || IsNil(o.AnalyticsCount) {
		var ret string
		return ret
	}
	return *o.AnalyticsCount
}

// GetAnalyticsCountOk returns a tuple with the AnalyticsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetAnalyticsCountOk() (*string, bool) {
	if o == nil || IsNil(o.AnalyticsCount) {
		return nil, false
	}
	return o.AnalyticsCount, true
}

// HasAnalyticsCount returns a boolean if a field has been set.
func (o *LanguagePackData) HasAnalyticsCount() bool {
	if o != nil && !IsNil(o.AnalyticsCount) {
		return true
	}

	return false
}

// SetAnalyticsCount gets a reference to the given string and assigns it to the AnalyticsCount field.
func (o *LanguagePackData) SetAnalyticsCount(v string) {
	o.AnalyticsCount = &v
}

// GetAnalyticsFromDate returns the AnalyticsFromDate field value if set, zero value otherwise.
func (o *LanguagePackData) GetAnalyticsFromDate() string {
	if o == nil || IsNil(o.AnalyticsFromDate) {
		var ret string
		return ret
	}
	return *o.AnalyticsFromDate
}

// GetAnalyticsFromDateOk returns a tuple with the AnalyticsFromDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetAnalyticsFromDateOk() (*string, bool) {
	if o == nil || IsNil(o.AnalyticsFromDate) {
		return nil, false
	}
	return o.AnalyticsFromDate, true
}

// HasAnalyticsFromDate returns a boolean if a field has been set.
func (o *LanguagePackData) HasAnalyticsFromDate() bool {
	if o != nil && !IsNil(o.AnalyticsFromDate) {
		return true
	}

	return false
}

// SetAnalyticsFromDate gets a reference to the given string and assigns it to the AnalyticsFromDate field.
func (o *LanguagePackData) SetAnalyticsFromDate(v string) {
	o.AnalyticsFromDate = &v
}

// GetAnalyticsInvalidDates returns the AnalyticsInvalidDates field value if set, zero value otherwise.
func (o *LanguagePackData) GetAnalyticsInvalidDates() string {
	if o == nil || IsNil(o.AnalyticsInvalidDates) {
		var ret string
		return ret
	}
	return *o.AnalyticsInvalidDates
}

// GetAnalyticsInvalidDatesOk returns a tuple with the AnalyticsInvalidDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetAnalyticsInvalidDatesOk() (*string, bool) {
	if o == nil || IsNil(o.AnalyticsInvalidDates) {
		return nil, false
	}
	return o.AnalyticsInvalidDates, true
}

// HasAnalyticsInvalidDates returns a boolean if a field has been set.
func (o *LanguagePackData) HasAnalyticsInvalidDates() bool {
	if o != nil && !IsNil(o.AnalyticsInvalidDates) {
		return true
	}

	return false
}

// SetAnalyticsInvalidDates gets a reference to the given string and assigns it to the AnalyticsInvalidDates field.
func (o *LanguagePackData) SetAnalyticsInvalidDates(v string) {
	o.AnalyticsInvalidDates = &v
}

// GetAnalyticsIsUnique returns the AnalyticsIsUnique field value if set, zero value otherwise.
func (o *LanguagePackData) GetAnalyticsIsUnique() string {
	if o == nil || IsNil(o.AnalyticsIsUnique) {
		var ret string
		return ret
	}
	return *o.AnalyticsIsUnique
}

// GetAnalyticsIsUniqueOk returns a tuple with the AnalyticsIsUnique field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetAnalyticsIsUniqueOk() (*string, bool) {
	if o == nil || IsNil(o.AnalyticsIsUnique) {
		return nil, false
	}
	return o.AnalyticsIsUnique, true
}

// HasAnalyticsIsUnique returns a boolean if a field has been set.
func (o *LanguagePackData) HasAnalyticsIsUnique() bool {
	if o != nil && !IsNil(o.AnalyticsIsUnique) {
		return true
	}

	return false
}

// SetAnalyticsIsUnique gets a reference to the given string and assigns it to the AnalyticsIsUnique field.
func (o *LanguagePackData) SetAnalyticsIsUnique(v string) {
	o.AnalyticsIsUnique = &v
}

// GetAnalyticsLinks returns the AnalyticsLinks field value if set, zero value otherwise.
func (o *LanguagePackData) GetAnalyticsLinks() string {
	if o == nil || IsNil(o.AnalyticsLinks) {
		var ret string
		return ret
	}
	return *o.AnalyticsLinks
}

// GetAnalyticsLinksOk returns a tuple with the AnalyticsLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetAnalyticsLinksOk() (*string, bool) {
	if o == nil || IsNil(o.AnalyticsLinks) {
		return nil, false
	}
	return o.AnalyticsLinks, true
}

// HasAnalyticsLinks returns a boolean if a field has been set.
func (o *LanguagePackData) HasAnalyticsLinks() bool {
	if o != nil && !IsNil(o.AnalyticsLinks) {
		return true
	}

	return false
}

// SetAnalyticsLinks gets a reference to the given string and assigns it to the AnalyticsLinks field.
func (o *LanguagePackData) SetAnalyticsLinks(v string) {
	o.AnalyticsLinks = &v
}

// GetAnalyticsNonUnique returns the AnalyticsNonUnique field value if set, zero value otherwise.
func (o *LanguagePackData) GetAnalyticsNonUnique() string {
	if o == nil || IsNil(o.AnalyticsNonUnique) {
		var ret string
		return ret
	}
	return *o.AnalyticsNonUnique
}

// GetAnalyticsNonUniqueOk returns a tuple with the AnalyticsNonUnique field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetAnalyticsNonUniqueOk() (*string, bool) {
	if o == nil || IsNil(o.AnalyticsNonUnique) {
		return nil, false
	}
	return o.AnalyticsNonUnique, true
}

// HasAnalyticsNonUnique returns a boolean if a field has been set.
func (o *LanguagePackData) HasAnalyticsNonUnique() bool {
	if o != nil && !IsNil(o.AnalyticsNonUnique) {
		return true
	}

	return false
}

// SetAnalyticsNonUnique gets a reference to the given string and assigns it to the AnalyticsNonUnique field.
func (o *LanguagePackData) SetAnalyticsNonUnique(v string) {
	o.AnalyticsNonUnique = &v
}

// GetAnalyticsTitle returns the AnalyticsTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetAnalyticsTitle() string {
	if o == nil || IsNil(o.AnalyticsTitle) {
		var ret string
		return ret
	}
	return *o.AnalyticsTitle
}

// GetAnalyticsTitleOk returns a tuple with the AnalyticsTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetAnalyticsTitleOk() (*string, bool) {
	if o == nil || IsNil(o.AnalyticsTitle) {
		return nil, false
	}
	return o.AnalyticsTitle, true
}

// HasAnalyticsTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasAnalyticsTitle() bool {
	if o != nil && !IsNil(o.AnalyticsTitle) {
		return true
	}

	return false
}

// SetAnalyticsTitle gets a reference to the given string and assigns it to the AnalyticsTitle field.
func (o *LanguagePackData) SetAnalyticsTitle(v string) {
	o.AnalyticsTitle = &v
}

// GetAnalyticsToDate returns the AnalyticsToDate field value if set, zero value otherwise.
func (o *LanguagePackData) GetAnalyticsToDate() string {
	if o == nil || IsNil(o.AnalyticsToDate) {
		var ret string
		return ret
	}
	return *o.AnalyticsToDate
}

// GetAnalyticsToDateOk returns a tuple with the AnalyticsToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetAnalyticsToDateOk() (*string, bool) {
	if o == nil || IsNil(o.AnalyticsToDate) {
		return nil, false
	}
	return o.AnalyticsToDate, true
}

// HasAnalyticsToDate returns a boolean if a field has been set.
func (o *LanguagePackData) HasAnalyticsToDate() bool {
	if o != nil && !IsNil(o.AnalyticsToDate) {
		return true
	}

	return false
}

// SetAnalyticsToDate gets a reference to the given string and assigns it to the AnalyticsToDate field.
func (o *LanguagePackData) SetAnalyticsToDate(v string) {
	o.AnalyticsToDate = &v
}

// GetBouncesSource returns the BouncesSource field value if set, zero value otherwise.
func (o *LanguagePackData) GetBouncesSource() string {
	if o == nil || IsNil(o.BouncesSource) {
		var ret string
		return ret
	}
	return *o.BouncesSource
}

// GetBouncesSourceOk returns a tuple with the BouncesSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetBouncesSourceOk() (*string, bool) {
	if o == nil || IsNil(o.BouncesSource) {
		return nil, false
	}
	return o.BouncesSource, true
}

// HasBouncesSource returns a boolean if a field has been set.
func (o *LanguagePackData) HasBouncesSource() bool {
	if o != nil && !IsNil(o.BouncesSource) {
		return true
	}

	return false
}

// SetBouncesSource gets a reference to the given string and assigns it to the BouncesSource field.
func (o *LanguagePackData) SetBouncesSource(v string) {
	o.BouncesSource = &v
}

// GetBouncesUnknownService returns the BouncesUnknownService field value if set, zero value otherwise.
func (o *LanguagePackData) GetBouncesUnknownService() string {
	if o == nil || IsNil(o.BouncesUnknownService) {
		var ret string
		return ret
	}
	return *o.BouncesUnknownService
}

// GetBouncesUnknownServiceOk returns a tuple with the BouncesUnknownService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetBouncesUnknownServiceOk() (*string, bool) {
	if o == nil || IsNil(o.BouncesUnknownService) {
		return nil, false
	}
	return o.BouncesUnknownService, true
}

// HasBouncesUnknownService returns a boolean if a field has been set.
func (o *LanguagePackData) HasBouncesUnknownService() bool {
	if o != nil && !IsNil(o.BouncesUnknownService) {
		return true
	}

	return false
}

// SetBouncesUnknownService gets a reference to the given string and assigns it to the BouncesUnknownService field.
func (o *LanguagePackData) SetBouncesUnknownService(v string) {
	o.BouncesUnknownService = &v
}

// GetBouncesView returns the BouncesView field value if set, zero value otherwise.
func (o *LanguagePackData) GetBouncesView() string {
	if o == nil || IsNil(o.BouncesView) {
		var ret string
		return ret
	}
	return *o.BouncesView
}

// GetBouncesViewOk returns a tuple with the BouncesView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetBouncesViewOk() (*string, bool) {
	if o == nil || IsNil(o.BouncesView) {
		return nil, false
	}
	return o.BouncesView, true
}

// HasBouncesView returns a boolean if a field has been set.
func (o *LanguagePackData) HasBouncesView() bool {
	if o != nil && !IsNil(o.BouncesView) {
		return true
	}

	return false
}

// SetBouncesView gets a reference to the given string and assigns it to the BouncesView field.
func (o *LanguagePackData) SetBouncesView(v string) {
	o.BouncesView = &v
}

// GetCampaignsAddAltText returns the CampaignsAddAltText field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsAddAltText() string {
	if o == nil || IsNil(o.CampaignsAddAltText) {
		var ret string
		return ret
	}
	return *o.CampaignsAddAltText
}

// GetCampaignsAddAltTextOk returns a tuple with the CampaignsAddAltText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsAddAltTextOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsAddAltText) {
		return nil, false
	}
	return o.CampaignsAddAltText, true
}

// HasCampaignsAddAltText returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsAddAltText() bool {
	if o != nil && !IsNil(o.CampaignsAddAltText) {
		return true
	}

	return false
}

// SetCampaignsAddAltText gets a reference to the given string and assigns it to the CampaignsAddAltText field.
func (o *LanguagePackData) SetCampaignsAddAltText(v string) {
	o.CampaignsAddAltText = &v
}

// GetCampaignsArchive returns the CampaignsArchive field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsArchive() string {
	if o == nil || IsNil(o.CampaignsArchive) {
		var ret string
		return ret
	}
	return *o.CampaignsArchive
}

// GetCampaignsArchiveOk returns a tuple with the CampaignsArchive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsArchiveOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsArchive) {
		return nil, false
	}
	return o.CampaignsArchive, true
}

// HasCampaignsArchive returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsArchive() bool {
	if o != nil && !IsNil(o.CampaignsArchive) {
		return true
	}

	return false
}

// SetCampaignsArchive gets a reference to the given string and assigns it to the CampaignsArchive field.
func (o *LanguagePackData) SetCampaignsArchive(v string) {
	o.CampaignsArchive = &v
}

// GetCampaignsArchiveEnable returns the CampaignsArchiveEnable field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsArchiveEnable() string {
	if o == nil || IsNil(o.CampaignsArchiveEnable) {
		var ret string
		return ret
	}
	return *o.CampaignsArchiveEnable
}

// GetCampaignsArchiveEnableOk returns a tuple with the CampaignsArchiveEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsArchiveEnableOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsArchiveEnable) {
		return nil, false
	}
	return o.CampaignsArchiveEnable, true
}

// HasCampaignsArchiveEnable returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsArchiveEnable() bool {
	if o != nil && !IsNil(o.CampaignsArchiveEnable) {
		return true
	}

	return false
}

// SetCampaignsArchiveEnable gets a reference to the given string and assigns it to the CampaignsArchiveEnable field.
func (o *LanguagePackData) SetCampaignsArchiveEnable(v string) {
	o.CampaignsArchiveEnable = &v
}

// GetCampaignsArchiveHelp returns the CampaignsArchiveHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsArchiveHelp() string {
	if o == nil || IsNil(o.CampaignsArchiveHelp) {
		var ret string
		return ret
	}
	return *o.CampaignsArchiveHelp
}

// GetCampaignsArchiveHelpOk returns a tuple with the CampaignsArchiveHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsArchiveHelpOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsArchiveHelp) {
		return nil, false
	}
	return o.CampaignsArchiveHelp, true
}

// HasCampaignsArchiveHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsArchiveHelp() bool {
	if o != nil && !IsNil(o.CampaignsArchiveHelp) {
		return true
	}

	return false
}

// SetCampaignsArchiveHelp gets a reference to the given string and assigns it to the CampaignsArchiveHelp field.
func (o *LanguagePackData) SetCampaignsArchiveHelp(v string) {
	o.CampaignsArchiveHelp = &v
}

// GetCampaignsArchiveMeta returns the CampaignsArchiveMeta field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsArchiveMeta() string {
	if o == nil || IsNil(o.CampaignsArchiveMeta) {
		var ret string
		return ret
	}
	return *o.CampaignsArchiveMeta
}

// GetCampaignsArchiveMetaOk returns a tuple with the CampaignsArchiveMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsArchiveMetaOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsArchiveMeta) {
		return nil, false
	}
	return o.CampaignsArchiveMeta, true
}

// HasCampaignsArchiveMeta returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsArchiveMeta() bool {
	if o != nil && !IsNil(o.CampaignsArchiveMeta) {
		return true
	}

	return false
}

// SetCampaignsArchiveMeta gets a reference to the given string and assigns it to the CampaignsArchiveMeta field.
func (o *LanguagePackData) SetCampaignsArchiveMeta(v string) {
	o.CampaignsArchiveMeta = &v
}

// GetCampaignsArchiveMetaHelp returns the CampaignsArchiveMetaHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsArchiveMetaHelp() string {
	if o == nil || IsNil(o.CampaignsArchiveMetaHelp) {
		var ret string
		return ret
	}
	return *o.CampaignsArchiveMetaHelp
}

// GetCampaignsArchiveMetaHelpOk returns a tuple with the CampaignsArchiveMetaHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsArchiveMetaHelpOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsArchiveMetaHelp) {
		return nil, false
	}
	return o.CampaignsArchiveMetaHelp, true
}

// HasCampaignsArchiveMetaHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsArchiveMetaHelp() bool {
	if o != nil && !IsNil(o.CampaignsArchiveMetaHelp) {
		return true
	}

	return false
}

// SetCampaignsArchiveMetaHelp gets a reference to the given string and assigns it to the CampaignsArchiveMetaHelp field.
func (o *LanguagePackData) SetCampaignsArchiveMetaHelp(v string) {
	o.CampaignsArchiveMetaHelp = &v
}

// GetCampaignsCantUpdate returns the CampaignsCantUpdate field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsCantUpdate() string {
	if o == nil || IsNil(o.CampaignsCantUpdate) {
		var ret string
		return ret
	}
	return *o.CampaignsCantUpdate
}

// GetCampaignsCantUpdateOk returns a tuple with the CampaignsCantUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsCantUpdateOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsCantUpdate) {
		return nil, false
	}
	return o.CampaignsCantUpdate, true
}

// HasCampaignsCantUpdate returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsCantUpdate() bool {
	if o != nil && !IsNil(o.CampaignsCantUpdate) {
		return true
	}

	return false
}

// SetCampaignsCantUpdate gets a reference to the given string and assigns it to the CampaignsCantUpdate field.
func (o *LanguagePackData) SetCampaignsCantUpdate(v string) {
	o.CampaignsCantUpdate = &v
}

// GetCampaignsClicks returns the CampaignsClicks field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsClicks() string {
	if o == nil || IsNil(o.CampaignsClicks) {
		var ret string
		return ret
	}
	return *o.CampaignsClicks
}

// GetCampaignsClicksOk returns a tuple with the CampaignsClicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsClicksOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsClicks) {
		return nil, false
	}
	return o.CampaignsClicks, true
}

// HasCampaignsClicks returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsClicks() bool {
	if o != nil && !IsNil(o.CampaignsClicks) {
		return true
	}

	return false
}

// SetCampaignsClicks gets a reference to the given string and assigns it to the CampaignsClicks field.
func (o *LanguagePackData) SetCampaignsClicks(v string) {
	o.CampaignsClicks = &v
}

// GetCampaignsConfirmDelete returns the CampaignsConfirmDelete field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsConfirmDelete() string {
	if o == nil || IsNil(o.CampaignsConfirmDelete) {
		var ret string
		return ret
	}
	return *o.CampaignsConfirmDelete
}

// GetCampaignsConfirmDeleteOk returns a tuple with the CampaignsConfirmDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsConfirmDeleteOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsConfirmDelete) {
		return nil, false
	}
	return o.CampaignsConfirmDelete, true
}

// HasCampaignsConfirmDelete returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsConfirmDelete() bool {
	if o != nil && !IsNil(o.CampaignsConfirmDelete) {
		return true
	}

	return false
}

// SetCampaignsConfirmDelete gets a reference to the given string and assigns it to the CampaignsConfirmDelete field.
func (o *LanguagePackData) SetCampaignsConfirmDelete(v string) {
	o.CampaignsConfirmDelete = &v
}

// GetCampaignsConfirmSchedule returns the CampaignsConfirmSchedule field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsConfirmSchedule() string {
	if o == nil || IsNil(o.CampaignsConfirmSchedule) {
		var ret string
		return ret
	}
	return *o.CampaignsConfirmSchedule
}

// GetCampaignsConfirmScheduleOk returns a tuple with the CampaignsConfirmSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsConfirmScheduleOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsConfirmSchedule) {
		return nil, false
	}
	return o.CampaignsConfirmSchedule, true
}

// HasCampaignsConfirmSchedule returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsConfirmSchedule() bool {
	if o != nil && !IsNil(o.CampaignsConfirmSchedule) {
		return true
	}

	return false
}

// SetCampaignsConfirmSchedule gets a reference to the given string and assigns it to the CampaignsConfirmSchedule field.
func (o *LanguagePackData) SetCampaignsConfirmSchedule(v string) {
	o.CampaignsConfirmSchedule = &v
}

// GetCampaignsConfirmSwitchFormat returns the CampaignsConfirmSwitchFormat field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsConfirmSwitchFormat() string {
	if o == nil || IsNil(o.CampaignsConfirmSwitchFormat) {
		var ret string
		return ret
	}
	return *o.CampaignsConfirmSwitchFormat
}

// GetCampaignsConfirmSwitchFormatOk returns a tuple with the CampaignsConfirmSwitchFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsConfirmSwitchFormatOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsConfirmSwitchFormat) {
		return nil, false
	}
	return o.CampaignsConfirmSwitchFormat, true
}

// HasCampaignsConfirmSwitchFormat returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsConfirmSwitchFormat() bool {
	if o != nil && !IsNil(o.CampaignsConfirmSwitchFormat) {
		return true
	}

	return false
}

// SetCampaignsConfirmSwitchFormat gets a reference to the given string and assigns it to the CampaignsConfirmSwitchFormat field.
func (o *LanguagePackData) SetCampaignsConfirmSwitchFormat(v string) {
	o.CampaignsConfirmSwitchFormat = &v
}

// GetCampaignsContent returns the CampaignsContent field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsContent() string {
	if o == nil || IsNil(o.CampaignsContent) {
		var ret string
		return ret
	}
	return *o.CampaignsContent
}

// GetCampaignsContentOk returns a tuple with the CampaignsContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsContentOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsContent) {
		return nil, false
	}
	return o.CampaignsContent, true
}

// HasCampaignsContent returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsContent() bool {
	if o != nil && !IsNil(o.CampaignsContent) {
		return true
	}

	return false
}

// SetCampaignsContent gets a reference to the given string and assigns it to the CampaignsContent field.
func (o *LanguagePackData) SetCampaignsContent(v string) {
	o.CampaignsContent = &v
}

// GetCampaignsContentHelp returns the CampaignsContentHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsContentHelp() string {
	if o == nil || IsNil(o.CampaignsContentHelp) {
		var ret string
		return ret
	}
	return *o.CampaignsContentHelp
}

// GetCampaignsContentHelpOk returns a tuple with the CampaignsContentHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsContentHelpOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsContentHelp) {
		return nil, false
	}
	return o.CampaignsContentHelp, true
}

// HasCampaignsContentHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsContentHelp() bool {
	if o != nil && !IsNil(o.CampaignsContentHelp) {
		return true
	}

	return false
}

// SetCampaignsContentHelp gets a reference to the given string and assigns it to the CampaignsContentHelp field.
func (o *LanguagePackData) SetCampaignsContentHelp(v string) {
	o.CampaignsContentHelp = &v
}

// GetCampaignsContinue returns the CampaignsContinue field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsContinue() string {
	if o == nil || IsNil(o.CampaignsContinue) {
		var ret string
		return ret
	}
	return *o.CampaignsContinue
}

// GetCampaignsContinueOk returns a tuple with the CampaignsContinue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsContinueOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsContinue) {
		return nil, false
	}
	return o.CampaignsContinue, true
}

// HasCampaignsContinue returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsContinue() bool {
	if o != nil && !IsNil(o.CampaignsContinue) {
		return true
	}

	return false
}

// SetCampaignsContinue gets a reference to the given string and assigns it to the CampaignsContinue field.
func (o *LanguagePackData) SetCampaignsContinue(v string) {
	o.CampaignsContinue = &v
}

// GetCampaignsCopyOf returns the CampaignsCopyOf field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsCopyOf() string {
	if o == nil || IsNil(o.CampaignsCopyOf) {
		var ret string
		return ret
	}
	return *o.CampaignsCopyOf
}

// GetCampaignsCopyOfOk returns a tuple with the CampaignsCopyOf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsCopyOfOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsCopyOf) {
		return nil, false
	}
	return o.CampaignsCopyOf, true
}

// HasCampaignsCopyOf returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsCopyOf() bool {
	if o != nil && !IsNil(o.CampaignsCopyOf) {
		return true
	}

	return false
}

// SetCampaignsCopyOf gets a reference to the given string and assigns it to the CampaignsCopyOf field.
func (o *LanguagePackData) SetCampaignsCopyOf(v string) {
	o.CampaignsCopyOf = &v
}

// GetCampaignsCustomHeadersHelp returns the CampaignsCustomHeadersHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsCustomHeadersHelp() string {
	if o == nil || IsNil(o.CampaignsCustomHeadersHelp) {
		var ret string
		return ret
	}
	return *o.CampaignsCustomHeadersHelp
}

// GetCampaignsCustomHeadersHelpOk returns a tuple with the CampaignsCustomHeadersHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsCustomHeadersHelpOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsCustomHeadersHelp) {
		return nil, false
	}
	return o.CampaignsCustomHeadersHelp, true
}

// HasCampaignsCustomHeadersHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsCustomHeadersHelp() bool {
	if o != nil && !IsNil(o.CampaignsCustomHeadersHelp) {
		return true
	}

	return false
}

// SetCampaignsCustomHeadersHelp gets a reference to the given string and assigns it to the CampaignsCustomHeadersHelp field.
func (o *LanguagePackData) SetCampaignsCustomHeadersHelp(v string) {
	o.CampaignsCustomHeadersHelp = &v
}

// GetCampaignsDateAndTime returns the CampaignsDateAndTime field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsDateAndTime() string {
	if o == nil || IsNil(o.CampaignsDateAndTime) {
		var ret string
		return ret
	}
	return *o.CampaignsDateAndTime
}

// GetCampaignsDateAndTimeOk returns a tuple with the CampaignsDateAndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsDateAndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsDateAndTime) {
		return nil, false
	}
	return o.CampaignsDateAndTime, true
}

// HasCampaignsDateAndTime returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsDateAndTime() bool {
	if o != nil && !IsNil(o.CampaignsDateAndTime) {
		return true
	}

	return false
}

// SetCampaignsDateAndTime gets a reference to the given string and assigns it to the CampaignsDateAndTime field.
func (o *LanguagePackData) SetCampaignsDateAndTime(v string) {
	o.CampaignsDateAndTime = &v
}

// GetCampaignsEnded returns the CampaignsEnded field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsEnded() string {
	if o == nil || IsNil(o.CampaignsEnded) {
		var ret string
		return ret
	}
	return *o.CampaignsEnded
}

// GetCampaignsEndedOk returns a tuple with the CampaignsEnded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsEndedOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsEnded) {
		return nil, false
	}
	return o.CampaignsEnded, true
}

// HasCampaignsEnded returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsEnded() bool {
	if o != nil && !IsNil(o.CampaignsEnded) {
		return true
	}

	return false
}

// SetCampaignsEnded gets a reference to the given string and assigns it to the CampaignsEnded field.
func (o *LanguagePackData) SetCampaignsEnded(v string) {
	o.CampaignsEnded = &v
}

// GetCampaignsErrorSendTest returns the CampaignsErrorSendTest field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsErrorSendTest() string {
	if o == nil || IsNil(o.CampaignsErrorSendTest) {
		var ret string
		return ret
	}
	return *o.CampaignsErrorSendTest
}

// GetCampaignsErrorSendTestOk returns a tuple with the CampaignsErrorSendTest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsErrorSendTestOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsErrorSendTest) {
		return nil, false
	}
	return o.CampaignsErrorSendTest, true
}

// HasCampaignsErrorSendTest returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsErrorSendTest() bool {
	if o != nil && !IsNil(o.CampaignsErrorSendTest) {
		return true
	}

	return false
}

// SetCampaignsErrorSendTest gets a reference to the given string and assigns it to the CampaignsErrorSendTest field.
func (o *LanguagePackData) SetCampaignsErrorSendTest(v string) {
	o.CampaignsErrorSendTest = &v
}

// GetCampaignsFieldInvalidBody returns the CampaignsFieldInvalidBody field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsFieldInvalidBody() string {
	if o == nil || IsNil(o.CampaignsFieldInvalidBody) {
		var ret string
		return ret
	}
	return *o.CampaignsFieldInvalidBody
}

// GetCampaignsFieldInvalidBodyOk returns a tuple with the CampaignsFieldInvalidBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsFieldInvalidBodyOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsFieldInvalidBody) {
		return nil, false
	}
	return o.CampaignsFieldInvalidBody, true
}

// HasCampaignsFieldInvalidBody returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsFieldInvalidBody() bool {
	if o != nil && !IsNil(o.CampaignsFieldInvalidBody) {
		return true
	}

	return false
}

// SetCampaignsFieldInvalidBody gets a reference to the given string and assigns it to the CampaignsFieldInvalidBody field.
func (o *LanguagePackData) SetCampaignsFieldInvalidBody(v string) {
	o.CampaignsFieldInvalidBody = &v
}

// GetCampaignsFieldInvalidFromEmail returns the CampaignsFieldInvalidFromEmail field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsFieldInvalidFromEmail() string {
	if o == nil || IsNil(o.CampaignsFieldInvalidFromEmail) {
		var ret string
		return ret
	}
	return *o.CampaignsFieldInvalidFromEmail
}

// GetCampaignsFieldInvalidFromEmailOk returns a tuple with the CampaignsFieldInvalidFromEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsFieldInvalidFromEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsFieldInvalidFromEmail) {
		return nil, false
	}
	return o.CampaignsFieldInvalidFromEmail, true
}

// HasCampaignsFieldInvalidFromEmail returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsFieldInvalidFromEmail() bool {
	if o != nil && !IsNil(o.CampaignsFieldInvalidFromEmail) {
		return true
	}

	return false
}

// SetCampaignsFieldInvalidFromEmail gets a reference to the given string and assigns it to the CampaignsFieldInvalidFromEmail field.
func (o *LanguagePackData) SetCampaignsFieldInvalidFromEmail(v string) {
	o.CampaignsFieldInvalidFromEmail = &v
}

// GetCampaignsFieldInvalidListIDs returns the CampaignsFieldInvalidListIDs field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsFieldInvalidListIDs() string {
	if o == nil || IsNil(o.CampaignsFieldInvalidListIDs) {
		var ret string
		return ret
	}
	return *o.CampaignsFieldInvalidListIDs
}

// GetCampaignsFieldInvalidListIDsOk returns a tuple with the CampaignsFieldInvalidListIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsFieldInvalidListIDsOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsFieldInvalidListIDs) {
		return nil, false
	}
	return o.CampaignsFieldInvalidListIDs, true
}

// HasCampaignsFieldInvalidListIDs returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsFieldInvalidListIDs() bool {
	if o != nil && !IsNil(o.CampaignsFieldInvalidListIDs) {
		return true
	}

	return false
}

// SetCampaignsFieldInvalidListIDs gets a reference to the given string and assigns it to the CampaignsFieldInvalidListIDs field.
func (o *LanguagePackData) SetCampaignsFieldInvalidListIDs(v string) {
	o.CampaignsFieldInvalidListIDs = &v
}

// GetCampaignsFieldInvalidMessenger returns the CampaignsFieldInvalidMessenger field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsFieldInvalidMessenger() string {
	if o == nil || IsNil(o.CampaignsFieldInvalidMessenger) {
		var ret string
		return ret
	}
	return *o.CampaignsFieldInvalidMessenger
}

// GetCampaignsFieldInvalidMessengerOk returns a tuple with the CampaignsFieldInvalidMessenger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsFieldInvalidMessengerOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsFieldInvalidMessenger) {
		return nil, false
	}
	return o.CampaignsFieldInvalidMessenger, true
}

// HasCampaignsFieldInvalidMessenger returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsFieldInvalidMessenger() bool {
	if o != nil && !IsNil(o.CampaignsFieldInvalidMessenger) {
		return true
	}

	return false
}

// SetCampaignsFieldInvalidMessenger gets a reference to the given string and assigns it to the CampaignsFieldInvalidMessenger field.
func (o *LanguagePackData) SetCampaignsFieldInvalidMessenger(v string) {
	o.CampaignsFieldInvalidMessenger = &v
}

// GetCampaignsFieldInvalidName returns the CampaignsFieldInvalidName field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsFieldInvalidName() string {
	if o == nil || IsNil(o.CampaignsFieldInvalidName) {
		var ret string
		return ret
	}
	return *o.CampaignsFieldInvalidName
}

// GetCampaignsFieldInvalidNameOk returns a tuple with the CampaignsFieldInvalidName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsFieldInvalidNameOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsFieldInvalidName) {
		return nil, false
	}
	return o.CampaignsFieldInvalidName, true
}

// HasCampaignsFieldInvalidName returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsFieldInvalidName() bool {
	if o != nil && !IsNil(o.CampaignsFieldInvalidName) {
		return true
	}

	return false
}

// SetCampaignsFieldInvalidName gets a reference to the given string and assigns it to the CampaignsFieldInvalidName field.
func (o *LanguagePackData) SetCampaignsFieldInvalidName(v string) {
	o.CampaignsFieldInvalidName = &v
}

// GetCampaignsFieldInvalidSendAt returns the CampaignsFieldInvalidSendAt field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsFieldInvalidSendAt() string {
	if o == nil || IsNil(o.CampaignsFieldInvalidSendAt) {
		var ret string
		return ret
	}
	return *o.CampaignsFieldInvalidSendAt
}

// GetCampaignsFieldInvalidSendAtOk returns a tuple with the CampaignsFieldInvalidSendAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsFieldInvalidSendAtOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsFieldInvalidSendAt) {
		return nil, false
	}
	return o.CampaignsFieldInvalidSendAt, true
}

// HasCampaignsFieldInvalidSendAt returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsFieldInvalidSendAt() bool {
	if o != nil && !IsNil(o.CampaignsFieldInvalidSendAt) {
		return true
	}

	return false
}

// SetCampaignsFieldInvalidSendAt gets a reference to the given string and assigns it to the CampaignsFieldInvalidSendAt field.
func (o *LanguagePackData) SetCampaignsFieldInvalidSendAt(v string) {
	o.CampaignsFieldInvalidSendAt = &v
}

// GetCampaignsFieldInvalidSubject returns the CampaignsFieldInvalidSubject field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsFieldInvalidSubject() string {
	if o == nil || IsNil(o.CampaignsFieldInvalidSubject) {
		var ret string
		return ret
	}
	return *o.CampaignsFieldInvalidSubject
}

// GetCampaignsFieldInvalidSubjectOk returns a tuple with the CampaignsFieldInvalidSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsFieldInvalidSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsFieldInvalidSubject) {
		return nil, false
	}
	return o.CampaignsFieldInvalidSubject, true
}

// HasCampaignsFieldInvalidSubject returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsFieldInvalidSubject() bool {
	if o != nil && !IsNil(o.CampaignsFieldInvalidSubject) {
		return true
	}

	return false
}

// SetCampaignsFieldInvalidSubject gets a reference to the given string and assigns it to the CampaignsFieldInvalidSubject field.
func (o *LanguagePackData) SetCampaignsFieldInvalidSubject(v string) {
	o.CampaignsFieldInvalidSubject = &v
}

// GetCampaignsFormatHTML returns the CampaignsFormatHTML field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsFormatHTML() string {
	if o == nil || IsNil(o.CampaignsFormatHTML) {
		var ret string
		return ret
	}
	return *o.CampaignsFormatHTML
}

// GetCampaignsFormatHTMLOk returns a tuple with the CampaignsFormatHTML field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsFormatHTMLOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsFormatHTML) {
		return nil, false
	}
	return o.CampaignsFormatHTML, true
}

// HasCampaignsFormatHTML returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsFormatHTML() bool {
	if o != nil && !IsNil(o.CampaignsFormatHTML) {
		return true
	}

	return false
}

// SetCampaignsFormatHTML gets a reference to the given string and assigns it to the CampaignsFormatHTML field.
func (o *LanguagePackData) SetCampaignsFormatHTML(v string) {
	o.CampaignsFormatHTML = &v
}

// GetCampaignsFromAddress returns the CampaignsFromAddress field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsFromAddress() string {
	if o == nil || IsNil(o.CampaignsFromAddress) {
		var ret string
		return ret
	}
	return *o.CampaignsFromAddress
}

// GetCampaignsFromAddressOk returns a tuple with the CampaignsFromAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsFromAddressOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsFromAddress) {
		return nil, false
	}
	return o.CampaignsFromAddress, true
}

// HasCampaignsFromAddress returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsFromAddress() bool {
	if o != nil && !IsNil(o.CampaignsFromAddress) {
		return true
	}

	return false
}

// SetCampaignsFromAddress gets a reference to the given string and assigns it to the CampaignsFromAddress field.
func (o *LanguagePackData) SetCampaignsFromAddress(v string) {
	o.CampaignsFromAddress = &v
}

// GetCampaignsFromAddressPlaceholder returns the CampaignsFromAddressPlaceholder field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsFromAddressPlaceholder() string {
	if o == nil || IsNil(o.CampaignsFromAddressPlaceholder) {
		var ret string
		return ret
	}
	return *o.CampaignsFromAddressPlaceholder
}

// GetCampaignsFromAddressPlaceholderOk returns a tuple with the CampaignsFromAddressPlaceholder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsFromAddressPlaceholderOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsFromAddressPlaceholder) {
		return nil, false
	}
	return o.CampaignsFromAddressPlaceholder, true
}

// HasCampaignsFromAddressPlaceholder returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsFromAddressPlaceholder() bool {
	if o != nil && !IsNil(o.CampaignsFromAddressPlaceholder) {
		return true
	}

	return false
}

// SetCampaignsFromAddressPlaceholder gets a reference to the given string and assigns it to the CampaignsFromAddressPlaceholder field.
func (o *LanguagePackData) SetCampaignsFromAddressPlaceholder(v string) {
	o.CampaignsFromAddressPlaceholder = &v
}

// GetCampaignsInvalid returns the CampaignsInvalid field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsInvalid() string {
	if o == nil || IsNil(o.CampaignsInvalid) {
		var ret string
		return ret
	}
	return *o.CampaignsInvalid
}

// GetCampaignsInvalidOk returns a tuple with the CampaignsInvalid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsInvalidOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsInvalid) {
		return nil, false
	}
	return o.CampaignsInvalid, true
}

// HasCampaignsInvalid returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsInvalid() bool {
	if o != nil && !IsNil(o.CampaignsInvalid) {
		return true
	}

	return false
}

// SetCampaignsInvalid gets a reference to the given string and assigns it to the CampaignsInvalid field.
func (o *LanguagePackData) SetCampaignsInvalid(v string) {
	o.CampaignsInvalid = &v
}

// GetCampaignsInvalidCustomHeaders returns the CampaignsInvalidCustomHeaders field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsInvalidCustomHeaders() string {
	if o == nil || IsNil(o.CampaignsInvalidCustomHeaders) {
		var ret string
		return ret
	}
	return *o.CampaignsInvalidCustomHeaders
}

// GetCampaignsInvalidCustomHeadersOk returns a tuple with the CampaignsInvalidCustomHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsInvalidCustomHeadersOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsInvalidCustomHeaders) {
		return nil, false
	}
	return o.CampaignsInvalidCustomHeaders, true
}

// HasCampaignsInvalidCustomHeaders returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsInvalidCustomHeaders() bool {
	if o != nil && !IsNil(o.CampaignsInvalidCustomHeaders) {
		return true
	}

	return false
}

// SetCampaignsInvalidCustomHeaders gets a reference to the given string and assigns it to the CampaignsInvalidCustomHeaders field.
func (o *LanguagePackData) SetCampaignsInvalidCustomHeaders(v string) {
	o.CampaignsInvalidCustomHeaders = &v
}

// GetCampaignsMarkdown returns the CampaignsMarkdown field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsMarkdown() string {
	if o == nil || IsNil(o.CampaignsMarkdown) {
		var ret string
		return ret
	}
	return *o.CampaignsMarkdown
}

// GetCampaignsMarkdownOk returns a tuple with the CampaignsMarkdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsMarkdownOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsMarkdown) {
		return nil, false
	}
	return o.CampaignsMarkdown, true
}

// HasCampaignsMarkdown returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsMarkdown() bool {
	if o != nil && !IsNil(o.CampaignsMarkdown) {
		return true
	}

	return false
}

// SetCampaignsMarkdown gets a reference to the given string and assigns it to the CampaignsMarkdown field.
func (o *LanguagePackData) SetCampaignsMarkdown(v string) {
	o.CampaignsMarkdown = &v
}

// GetCampaignsNeedsSendAt returns the CampaignsNeedsSendAt field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsNeedsSendAt() string {
	if o == nil || IsNil(o.CampaignsNeedsSendAt) {
		var ret string
		return ret
	}
	return *o.CampaignsNeedsSendAt
}

// GetCampaignsNeedsSendAtOk returns a tuple with the CampaignsNeedsSendAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsNeedsSendAtOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsNeedsSendAt) {
		return nil, false
	}
	return o.CampaignsNeedsSendAt, true
}

// HasCampaignsNeedsSendAt returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsNeedsSendAt() bool {
	if o != nil && !IsNil(o.CampaignsNeedsSendAt) {
		return true
	}

	return false
}

// SetCampaignsNeedsSendAt gets a reference to the given string and assigns it to the CampaignsNeedsSendAt field.
func (o *LanguagePackData) SetCampaignsNeedsSendAt(v string) {
	o.CampaignsNeedsSendAt = &v
}

// GetCampaignsNewCampaign returns the CampaignsNewCampaign field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsNewCampaign() string {
	if o == nil || IsNil(o.CampaignsNewCampaign) {
		var ret string
		return ret
	}
	return *o.CampaignsNewCampaign
}

// GetCampaignsNewCampaignOk returns a tuple with the CampaignsNewCampaign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsNewCampaignOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsNewCampaign) {
		return nil, false
	}
	return o.CampaignsNewCampaign, true
}

// HasCampaignsNewCampaign returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsNewCampaign() bool {
	if o != nil && !IsNil(o.CampaignsNewCampaign) {
		return true
	}

	return false
}

// SetCampaignsNewCampaign gets a reference to the given string and assigns it to the CampaignsNewCampaign field.
func (o *LanguagePackData) SetCampaignsNewCampaign(v string) {
	o.CampaignsNewCampaign = &v
}

// GetCampaignsNoKnownSubsToTest returns the CampaignsNoKnownSubsToTest field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsNoKnownSubsToTest() string {
	if o == nil || IsNil(o.CampaignsNoKnownSubsToTest) {
		var ret string
		return ret
	}
	return *o.CampaignsNoKnownSubsToTest
}

// GetCampaignsNoKnownSubsToTestOk returns a tuple with the CampaignsNoKnownSubsToTest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsNoKnownSubsToTestOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsNoKnownSubsToTest) {
		return nil, false
	}
	return o.CampaignsNoKnownSubsToTest, true
}

// HasCampaignsNoKnownSubsToTest returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsNoKnownSubsToTest() bool {
	if o != nil && !IsNil(o.CampaignsNoKnownSubsToTest) {
		return true
	}

	return false
}

// SetCampaignsNoKnownSubsToTest gets a reference to the given string and assigns it to the CampaignsNoKnownSubsToTest field.
func (o *LanguagePackData) SetCampaignsNoKnownSubsToTest(v string) {
	o.CampaignsNoKnownSubsToTest = &v
}

// GetCampaignsNoOptinLists returns the CampaignsNoOptinLists field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsNoOptinLists() string {
	if o == nil || IsNil(o.CampaignsNoOptinLists) {
		var ret string
		return ret
	}
	return *o.CampaignsNoOptinLists
}

// GetCampaignsNoOptinListsOk returns a tuple with the CampaignsNoOptinLists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsNoOptinListsOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsNoOptinLists) {
		return nil, false
	}
	return o.CampaignsNoOptinLists, true
}

// HasCampaignsNoOptinLists returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsNoOptinLists() bool {
	if o != nil && !IsNil(o.CampaignsNoOptinLists) {
		return true
	}

	return false
}

// SetCampaignsNoOptinLists gets a reference to the given string and assigns it to the CampaignsNoOptinLists field.
func (o *LanguagePackData) SetCampaignsNoOptinLists(v string) {
	o.CampaignsNoOptinLists = &v
}

// GetCampaignsNoSubs returns the CampaignsNoSubs field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsNoSubs() string {
	if o == nil || IsNil(o.CampaignsNoSubs) {
		var ret string
		return ret
	}
	return *o.CampaignsNoSubs
}

// GetCampaignsNoSubsOk returns a tuple with the CampaignsNoSubs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsNoSubsOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsNoSubs) {
		return nil, false
	}
	return o.CampaignsNoSubs, true
}

// HasCampaignsNoSubs returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsNoSubs() bool {
	if o != nil && !IsNil(o.CampaignsNoSubs) {
		return true
	}

	return false
}

// SetCampaignsNoSubs gets a reference to the given string and assigns it to the CampaignsNoSubs field.
func (o *LanguagePackData) SetCampaignsNoSubs(v string) {
	o.CampaignsNoSubs = &v
}

// GetCampaignsNoSubsToTest returns the CampaignsNoSubsToTest field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsNoSubsToTest() string {
	if o == nil || IsNil(o.CampaignsNoSubsToTest) {
		var ret string
		return ret
	}
	return *o.CampaignsNoSubsToTest
}

// GetCampaignsNoSubsToTestOk returns a tuple with the CampaignsNoSubsToTest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsNoSubsToTestOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsNoSubsToTest) {
		return nil, false
	}
	return o.CampaignsNoSubsToTest, true
}

// HasCampaignsNoSubsToTest returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsNoSubsToTest() bool {
	if o != nil && !IsNil(o.CampaignsNoSubsToTest) {
		return true
	}

	return false
}

// SetCampaignsNoSubsToTest gets a reference to the given string and assigns it to the CampaignsNoSubsToTest field.
func (o *LanguagePackData) SetCampaignsNoSubsToTest(v string) {
	o.CampaignsNoSubsToTest = &v
}

// GetCampaignsNotFound returns the CampaignsNotFound field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsNotFound() string {
	if o == nil || IsNil(o.CampaignsNotFound) {
		var ret string
		return ret
	}
	return *o.CampaignsNotFound
}

// GetCampaignsNotFoundOk returns a tuple with the CampaignsNotFound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsNotFoundOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsNotFound) {
		return nil, false
	}
	return o.CampaignsNotFound, true
}

// HasCampaignsNotFound returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsNotFound() bool {
	if o != nil && !IsNil(o.CampaignsNotFound) {
		return true
	}

	return false
}

// SetCampaignsNotFound gets a reference to the given string and assigns it to the CampaignsNotFound field.
func (o *LanguagePackData) SetCampaignsNotFound(v string) {
	o.CampaignsNotFound = &v
}

// GetCampaignsOnlyActiveCancel returns the CampaignsOnlyActiveCancel field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsOnlyActiveCancel() string {
	if o == nil || IsNil(o.CampaignsOnlyActiveCancel) {
		var ret string
		return ret
	}
	return *o.CampaignsOnlyActiveCancel
}

// GetCampaignsOnlyActiveCancelOk returns a tuple with the CampaignsOnlyActiveCancel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsOnlyActiveCancelOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsOnlyActiveCancel) {
		return nil, false
	}
	return o.CampaignsOnlyActiveCancel, true
}

// HasCampaignsOnlyActiveCancel returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsOnlyActiveCancel() bool {
	if o != nil && !IsNil(o.CampaignsOnlyActiveCancel) {
		return true
	}

	return false
}

// SetCampaignsOnlyActiveCancel gets a reference to the given string and assigns it to the CampaignsOnlyActiveCancel field.
func (o *LanguagePackData) SetCampaignsOnlyActiveCancel(v string) {
	o.CampaignsOnlyActiveCancel = &v
}

// GetCampaignsOnlyActivePause returns the CampaignsOnlyActivePause field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsOnlyActivePause() string {
	if o == nil || IsNil(o.CampaignsOnlyActivePause) {
		var ret string
		return ret
	}
	return *o.CampaignsOnlyActivePause
}

// GetCampaignsOnlyActivePauseOk returns a tuple with the CampaignsOnlyActivePause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsOnlyActivePauseOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsOnlyActivePause) {
		return nil, false
	}
	return o.CampaignsOnlyActivePause, true
}

// HasCampaignsOnlyActivePause returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsOnlyActivePause() bool {
	if o != nil && !IsNil(o.CampaignsOnlyActivePause) {
		return true
	}

	return false
}

// SetCampaignsOnlyActivePause gets a reference to the given string and assigns it to the CampaignsOnlyActivePause field.
func (o *LanguagePackData) SetCampaignsOnlyActivePause(v string) {
	o.CampaignsOnlyActivePause = &v
}

// GetCampaignsOnlyDraftAsScheduled returns the CampaignsOnlyDraftAsScheduled field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsOnlyDraftAsScheduled() string {
	if o == nil || IsNil(o.CampaignsOnlyDraftAsScheduled) {
		var ret string
		return ret
	}
	return *o.CampaignsOnlyDraftAsScheduled
}

// GetCampaignsOnlyDraftAsScheduledOk returns a tuple with the CampaignsOnlyDraftAsScheduled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsOnlyDraftAsScheduledOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsOnlyDraftAsScheduled) {
		return nil, false
	}
	return o.CampaignsOnlyDraftAsScheduled, true
}

// HasCampaignsOnlyDraftAsScheduled returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsOnlyDraftAsScheduled() bool {
	if o != nil && !IsNil(o.CampaignsOnlyDraftAsScheduled) {
		return true
	}

	return false
}

// SetCampaignsOnlyDraftAsScheduled gets a reference to the given string and assigns it to the CampaignsOnlyDraftAsScheduled field.
func (o *LanguagePackData) SetCampaignsOnlyDraftAsScheduled(v string) {
	o.CampaignsOnlyDraftAsScheduled = &v
}

// GetCampaignsOnlyPausedDraft returns the CampaignsOnlyPausedDraft field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsOnlyPausedDraft() string {
	if o == nil || IsNil(o.CampaignsOnlyPausedDraft) {
		var ret string
		return ret
	}
	return *o.CampaignsOnlyPausedDraft
}

// GetCampaignsOnlyPausedDraftOk returns a tuple with the CampaignsOnlyPausedDraft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsOnlyPausedDraftOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsOnlyPausedDraft) {
		return nil, false
	}
	return o.CampaignsOnlyPausedDraft, true
}

// HasCampaignsOnlyPausedDraft returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsOnlyPausedDraft() bool {
	if o != nil && !IsNil(o.CampaignsOnlyPausedDraft) {
		return true
	}

	return false
}

// SetCampaignsOnlyPausedDraft gets a reference to the given string and assigns it to the CampaignsOnlyPausedDraft field.
func (o *LanguagePackData) SetCampaignsOnlyPausedDraft(v string) {
	o.CampaignsOnlyPausedDraft = &v
}

// GetCampaignsOnlyScheduledAsDraft returns the CampaignsOnlyScheduledAsDraft field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsOnlyScheduledAsDraft() string {
	if o == nil || IsNil(o.CampaignsOnlyScheduledAsDraft) {
		var ret string
		return ret
	}
	return *o.CampaignsOnlyScheduledAsDraft
}

// GetCampaignsOnlyScheduledAsDraftOk returns a tuple with the CampaignsOnlyScheduledAsDraft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsOnlyScheduledAsDraftOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsOnlyScheduledAsDraft) {
		return nil, false
	}
	return o.CampaignsOnlyScheduledAsDraft, true
}

// HasCampaignsOnlyScheduledAsDraft returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsOnlyScheduledAsDraft() bool {
	if o != nil && !IsNil(o.CampaignsOnlyScheduledAsDraft) {
		return true
	}

	return false
}

// SetCampaignsOnlyScheduledAsDraft gets a reference to the given string and assigns it to the CampaignsOnlyScheduledAsDraft field.
func (o *LanguagePackData) SetCampaignsOnlyScheduledAsDraft(v string) {
	o.CampaignsOnlyScheduledAsDraft = &v
}

// GetCampaignsPause returns the CampaignsPause field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsPause() string {
	if o == nil || IsNil(o.CampaignsPause) {
		var ret string
		return ret
	}
	return *o.CampaignsPause
}

// GetCampaignsPauseOk returns a tuple with the CampaignsPause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsPauseOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsPause) {
		return nil, false
	}
	return o.CampaignsPause, true
}

// HasCampaignsPause returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsPause() bool {
	if o != nil && !IsNil(o.CampaignsPause) {
		return true
	}

	return false
}

// SetCampaignsPause gets a reference to the given string and assigns it to the CampaignsPause field.
func (o *LanguagePackData) SetCampaignsPause(v string) {
	o.CampaignsPause = &v
}

// GetCampaignsPlainText returns the CampaignsPlainText field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsPlainText() string {
	if o == nil || IsNil(o.CampaignsPlainText) {
		var ret string
		return ret
	}
	return *o.CampaignsPlainText
}

// GetCampaignsPlainTextOk returns a tuple with the CampaignsPlainText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsPlainTextOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsPlainText) {
		return nil, false
	}
	return o.CampaignsPlainText, true
}

// HasCampaignsPlainText returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsPlainText() bool {
	if o != nil && !IsNil(o.CampaignsPlainText) {
		return true
	}

	return false
}

// SetCampaignsPlainText gets a reference to the given string and assigns it to the CampaignsPlainText field.
func (o *LanguagePackData) SetCampaignsPlainText(v string) {
	o.CampaignsPlainText = &v
}

// GetCampaignsPreview returns the CampaignsPreview field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsPreview() string {
	if o == nil || IsNil(o.CampaignsPreview) {
		var ret string
		return ret
	}
	return *o.CampaignsPreview
}

// GetCampaignsPreviewOk returns a tuple with the CampaignsPreview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsPreviewOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsPreview) {
		return nil, false
	}
	return o.CampaignsPreview, true
}

// HasCampaignsPreview returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsPreview() bool {
	if o != nil && !IsNil(o.CampaignsPreview) {
		return true
	}

	return false
}

// SetCampaignsPreview gets a reference to the given string and assigns it to the CampaignsPreview field.
func (o *LanguagePackData) SetCampaignsPreview(v string) {
	o.CampaignsPreview = &v
}

// GetCampaignsProgress returns the CampaignsProgress field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsProgress() string {
	if o == nil || IsNil(o.CampaignsProgress) {
		var ret string
		return ret
	}
	return *o.CampaignsProgress
}

// GetCampaignsProgressOk returns a tuple with the CampaignsProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsProgressOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsProgress) {
		return nil, false
	}
	return o.CampaignsProgress, true
}

// HasCampaignsProgress returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsProgress() bool {
	if o != nil && !IsNil(o.CampaignsProgress) {
		return true
	}

	return false
}

// SetCampaignsProgress gets a reference to the given string and assigns it to the CampaignsProgress field.
func (o *LanguagePackData) SetCampaignsProgress(v string) {
	o.CampaignsProgress = &v
}

// GetCampaignsQueryPlaceholder returns the CampaignsQueryPlaceholder field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsQueryPlaceholder() string {
	if o == nil || IsNil(o.CampaignsQueryPlaceholder) {
		var ret string
		return ret
	}
	return *o.CampaignsQueryPlaceholder
}

// GetCampaignsQueryPlaceholderOk returns a tuple with the CampaignsQueryPlaceholder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsQueryPlaceholderOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsQueryPlaceholder) {
		return nil, false
	}
	return o.CampaignsQueryPlaceholder, true
}

// HasCampaignsQueryPlaceholder returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsQueryPlaceholder() bool {
	if o != nil && !IsNil(o.CampaignsQueryPlaceholder) {
		return true
	}

	return false
}

// SetCampaignsQueryPlaceholder gets a reference to the given string and assigns it to the CampaignsQueryPlaceholder field.
func (o *LanguagePackData) SetCampaignsQueryPlaceholder(v string) {
	o.CampaignsQueryPlaceholder = &v
}

// GetCampaignsRateMinuteShort returns the CampaignsRateMinuteShort field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsRateMinuteShort() string {
	if o == nil || IsNil(o.CampaignsRateMinuteShort) {
		var ret string
		return ret
	}
	return *o.CampaignsRateMinuteShort
}

// GetCampaignsRateMinuteShortOk returns a tuple with the CampaignsRateMinuteShort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsRateMinuteShortOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsRateMinuteShort) {
		return nil, false
	}
	return o.CampaignsRateMinuteShort, true
}

// HasCampaignsRateMinuteShort returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsRateMinuteShort() bool {
	if o != nil && !IsNil(o.CampaignsRateMinuteShort) {
		return true
	}

	return false
}

// SetCampaignsRateMinuteShort gets a reference to the given string and assigns it to the CampaignsRateMinuteShort field.
func (o *LanguagePackData) SetCampaignsRateMinuteShort(v string) {
	o.CampaignsRateMinuteShort = &v
}

// GetCampaignsRawHTML returns the CampaignsRawHTML field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsRawHTML() string {
	if o == nil || IsNil(o.CampaignsRawHTML) {
		var ret string
		return ret
	}
	return *o.CampaignsRawHTML
}

// GetCampaignsRawHTMLOk returns a tuple with the CampaignsRawHTML field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsRawHTMLOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsRawHTML) {
		return nil, false
	}
	return o.CampaignsRawHTML, true
}

// HasCampaignsRawHTML returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsRawHTML() bool {
	if o != nil && !IsNil(o.CampaignsRawHTML) {
		return true
	}

	return false
}

// SetCampaignsRawHTML gets a reference to the given string and assigns it to the CampaignsRawHTML field.
func (o *LanguagePackData) SetCampaignsRawHTML(v string) {
	o.CampaignsRawHTML = &v
}

// GetCampaignsRemoveAltText returns the CampaignsRemoveAltText field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsRemoveAltText() string {
	if o == nil || IsNil(o.CampaignsRemoveAltText) {
		var ret string
		return ret
	}
	return *o.CampaignsRemoveAltText
}

// GetCampaignsRemoveAltTextOk returns a tuple with the CampaignsRemoveAltText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsRemoveAltTextOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsRemoveAltText) {
		return nil, false
	}
	return o.CampaignsRemoveAltText, true
}

// HasCampaignsRemoveAltText returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsRemoveAltText() bool {
	if o != nil && !IsNil(o.CampaignsRemoveAltText) {
		return true
	}

	return false
}

// SetCampaignsRemoveAltText gets a reference to the given string and assigns it to the CampaignsRemoveAltText field.
func (o *LanguagePackData) SetCampaignsRemoveAltText(v string) {
	o.CampaignsRemoveAltText = &v
}

// GetCampaignsRichText returns the CampaignsRichText field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsRichText() string {
	if o == nil || IsNil(o.CampaignsRichText) {
		var ret string
		return ret
	}
	return *o.CampaignsRichText
}

// GetCampaignsRichTextOk returns a tuple with the CampaignsRichText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsRichTextOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsRichText) {
		return nil, false
	}
	return o.CampaignsRichText, true
}

// HasCampaignsRichText returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsRichText() bool {
	if o != nil && !IsNil(o.CampaignsRichText) {
		return true
	}

	return false
}

// SetCampaignsRichText gets a reference to the given string and assigns it to the CampaignsRichText field.
func (o *LanguagePackData) SetCampaignsRichText(v string) {
	o.CampaignsRichText = &v
}

// GetCampaignsSchedule returns the CampaignsSchedule field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsSchedule() string {
	if o == nil || IsNil(o.CampaignsSchedule) {
		var ret string
		return ret
	}
	return *o.CampaignsSchedule
}

// GetCampaignsScheduleOk returns a tuple with the CampaignsSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsScheduleOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsSchedule) {
		return nil, false
	}
	return o.CampaignsSchedule, true
}

// HasCampaignsSchedule returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsSchedule() bool {
	if o != nil && !IsNil(o.CampaignsSchedule) {
		return true
	}

	return false
}

// SetCampaignsSchedule gets a reference to the given string and assigns it to the CampaignsSchedule field.
func (o *LanguagePackData) SetCampaignsSchedule(v string) {
	o.CampaignsSchedule = &v
}

// GetCampaignsScheduled returns the CampaignsScheduled field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsScheduled() string {
	if o == nil || IsNil(o.CampaignsScheduled) {
		var ret string
		return ret
	}
	return *o.CampaignsScheduled
}

// GetCampaignsScheduledOk returns a tuple with the CampaignsScheduled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsScheduledOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsScheduled) {
		return nil, false
	}
	return o.CampaignsScheduled, true
}

// HasCampaignsScheduled returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsScheduled() bool {
	if o != nil && !IsNil(o.CampaignsScheduled) {
		return true
	}

	return false
}

// SetCampaignsScheduled gets a reference to the given string and assigns it to the CampaignsScheduled field.
func (o *LanguagePackData) SetCampaignsScheduled(v string) {
	o.CampaignsScheduled = &v
}

// GetCampaignsSend returns the CampaignsSend field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsSend() string {
	if o == nil || IsNil(o.CampaignsSend) {
		var ret string
		return ret
	}
	return *o.CampaignsSend
}

// GetCampaignsSendOk returns a tuple with the CampaignsSend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsSendOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsSend) {
		return nil, false
	}
	return o.CampaignsSend, true
}

// HasCampaignsSend returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsSend() bool {
	if o != nil && !IsNil(o.CampaignsSend) {
		return true
	}

	return false
}

// SetCampaignsSend gets a reference to the given string and assigns it to the CampaignsSend field.
func (o *LanguagePackData) SetCampaignsSend(v string) {
	o.CampaignsSend = &v
}

// GetCampaignsSendLater returns the CampaignsSendLater field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsSendLater() string {
	if o == nil || IsNil(o.CampaignsSendLater) {
		var ret string
		return ret
	}
	return *o.CampaignsSendLater
}

// GetCampaignsSendLaterOk returns a tuple with the CampaignsSendLater field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsSendLaterOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsSendLater) {
		return nil, false
	}
	return o.CampaignsSendLater, true
}

// HasCampaignsSendLater returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsSendLater() bool {
	if o != nil && !IsNil(o.CampaignsSendLater) {
		return true
	}

	return false
}

// SetCampaignsSendLater gets a reference to the given string and assigns it to the CampaignsSendLater field.
func (o *LanguagePackData) SetCampaignsSendLater(v string) {
	o.CampaignsSendLater = &v
}

// GetCampaignsSendTest returns the CampaignsSendTest field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsSendTest() string {
	if o == nil || IsNil(o.CampaignsSendTest) {
		var ret string
		return ret
	}
	return *o.CampaignsSendTest
}

// GetCampaignsSendTestOk returns a tuple with the CampaignsSendTest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsSendTestOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsSendTest) {
		return nil, false
	}
	return o.CampaignsSendTest, true
}

// HasCampaignsSendTest returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsSendTest() bool {
	if o != nil && !IsNil(o.CampaignsSendTest) {
		return true
	}

	return false
}

// SetCampaignsSendTest gets a reference to the given string and assigns it to the CampaignsSendTest field.
func (o *LanguagePackData) SetCampaignsSendTest(v string) {
	o.CampaignsSendTest = &v
}

// GetCampaignsSendTestHelp returns the CampaignsSendTestHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsSendTestHelp() string {
	if o == nil || IsNil(o.CampaignsSendTestHelp) {
		var ret string
		return ret
	}
	return *o.CampaignsSendTestHelp
}

// GetCampaignsSendTestHelpOk returns a tuple with the CampaignsSendTestHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsSendTestHelpOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsSendTestHelp) {
		return nil, false
	}
	return o.CampaignsSendTestHelp, true
}

// HasCampaignsSendTestHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsSendTestHelp() bool {
	if o != nil && !IsNil(o.CampaignsSendTestHelp) {
		return true
	}

	return false
}

// SetCampaignsSendTestHelp gets a reference to the given string and assigns it to the CampaignsSendTestHelp field.
func (o *LanguagePackData) SetCampaignsSendTestHelp(v string) {
	o.CampaignsSendTestHelp = &v
}

// GetCampaignsSendToLists returns the CampaignsSendToLists field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsSendToLists() string {
	if o == nil || IsNil(o.CampaignsSendToLists) {
		var ret string
		return ret
	}
	return *o.CampaignsSendToLists
}

// GetCampaignsSendToListsOk returns a tuple with the CampaignsSendToLists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsSendToListsOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsSendToLists) {
		return nil, false
	}
	return o.CampaignsSendToLists, true
}

// HasCampaignsSendToLists returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsSendToLists() bool {
	if o != nil && !IsNil(o.CampaignsSendToLists) {
		return true
	}

	return false
}

// SetCampaignsSendToLists gets a reference to the given string and assigns it to the CampaignsSendToLists field.
func (o *LanguagePackData) SetCampaignsSendToLists(v string) {
	o.CampaignsSendToLists = &v
}

// GetCampaignsSent returns the CampaignsSent field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsSent() string {
	if o == nil || IsNil(o.CampaignsSent) {
		var ret string
		return ret
	}
	return *o.CampaignsSent
}

// GetCampaignsSentOk returns a tuple with the CampaignsSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsSentOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsSent) {
		return nil, false
	}
	return o.CampaignsSent, true
}

// HasCampaignsSent returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsSent() bool {
	if o != nil && !IsNil(o.CampaignsSent) {
		return true
	}

	return false
}

// SetCampaignsSent gets a reference to the given string and assigns it to the CampaignsSent field.
func (o *LanguagePackData) SetCampaignsSent(v string) {
	o.CampaignsSent = &v
}

// GetCampaignsStart returns the CampaignsStart field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsStart() string {
	if o == nil || IsNil(o.CampaignsStart) {
		var ret string
		return ret
	}
	return *o.CampaignsStart
}

// GetCampaignsStartOk returns a tuple with the CampaignsStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsStartOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsStart) {
		return nil, false
	}
	return o.CampaignsStart, true
}

// HasCampaignsStart returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsStart() bool {
	if o != nil && !IsNil(o.CampaignsStart) {
		return true
	}

	return false
}

// SetCampaignsStart gets a reference to the given string and assigns it to the CampaignsStart field.
func (o *LanguagePackData) SetCampaignsStart(v string) {
	o.CampaignsStart = &v
}

// GetCampaignsStarted returns the CampaignsStarted field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsStarted() string {
	if o == nil || IsNil(o.CampaignsStarted) {
		var ret string
		return ret
	}
	return *o.CampaignsStarted
}

// GetCampaignsStartedOk returns a tuple with the CampaignsStarted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsStartedOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsStarted) {
		return nil, false
	}
	return o.CampaignsStarted, true
}

// HasCampaignsStarted returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsStarted() bool {
	if o != nil && !IsNil(o.CampaignsStarted) {
		return true
	}

	return false
}

// SetCampaignsStarted gets a reference to the given string and assigns it to the CampaignsStarted field.
func (o *LanguagePackData) SetCampaignsStarted(v string) {
	o.CampaignsStarted = &v
}

// GetCampaignsStartedAt returns the CampaignsStartedAt field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsStartedAt() string {
	if o == nil || IsNil(o.CampaignsStartedAt) {
		var ret string
		return ret
	}
	return *o.CampaignsStartedAt
}

// GetCampaignsStartedAtOk returns a tuple with the CampaignsStartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsStartedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsStartedAt) {
		return nil, false
	}
	return o.CampaignsStartedAt, true
}

// HasCampaignsStartedAt returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsStartedAt() bool {
	if o != nil && !IsNil(o.CampaignsStartedAt) {
		return true
	}

	return false
}

// SetCampaignsStartedAt gets a reference to the given string and assigns it to the CampaignsStartedAt field.
func (o *LanguagePackData) SetCampaignsStartedAt(v string) {
	o.CampaignsStartedAt = &v
}

// GetCampaignsStats returns the CampaignsStats field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsStats() string {
	if o == nil || IsNil(o.CampaignsStats) {
		var ret string
		return ret
	}
	return *o.CampaignsStats
}

// GetCampaignsStatsOk returns a tuple with the CampaignsStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsStatsOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsStats) {
		return nil, false
	}
	return o.CampaignsStats, true
}

// HasCampaignsStats returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsStats() bool {
	if o != nil && !IsNil(o.CampaignsStats) {
		return true
	}

	return false
}

// SetCampaignsStats gets a reference to the given string and assigns it to the CampaignsStats field.
func (o *LanguagePackData) SetCampaignsStats(v string) {
	o.CampaignsStats = &v
}

// GetCampaignsStatusCancelled returns the CampaignsStatusCancelled field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsStatusCancelled() string {
	if o == nil || IsNil(o.CampaignsStatusCancelled) {
		var ret string
		return ret
	}
	return *o.CampaignsStatusCancelled
}

// GetCampaignsStatusCancelledOk returns a tuple with the CampaignsStatusCancelled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsStatusCancelledOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsStatusCancelled) {
		return nil, false
	}
	return o.CampaignsStatusCancelled, true
}

// HasCampaignsStatusCancelled returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsStatusCancelled() bool {
	if o != nil && !IsNil(o.CampaignsStatusCancelled) {
		return true
	}

	return false
}

// SetCampaignsStatusCancelled gets a reference to the given string and assigns it to the CampaignsStatusCancelled field.
func (o *LanguagePackData) SetCampaignsStatusCancelled(v string) {
	o.CampaignsStatusCancelled = &v
}

// GetCampaignsStatusDraft returns the CampaignsStatusDraft field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsStatusDraft() string {
	if o == nil || IsNil(o.CampaignsStatusDraft) {
		var ret string
		return ret
	}
	return *o.CampaignsStatusDraft
}

// GetCampaignsStatusDraftOk returns a tuple with the CampaignsStatusDraft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsStatusDraftOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsStatusDraft) {
		return nil, false
	}
	return o.CampaignsStatusDraft, true
}

// HasCampaignsStatusDraft returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsStatusDraft() bool {
	if o != nil && !IsNil(o.CampaignsStatusDraft) {
		return true
	}

	return false
}

// SetCampaignsStatusDraft gets a reference to the given string and assigns it to the CampaignsStatusDraft field.
func (o *LanguagePackData) SetCampaignsStatusDraft(v string) {
	o.CampaignsStatusDraft = &v
}

// GetCampaignsStatusFinished returns the CampaignsStatusFinished field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsStatusFinished() string {
	if o == nil || IsNil(o.CampaignsStatusFinished) {
		var ret string
		return ret
	}
	return *o.CampaignsStatusFinished
}

// GetCampaignsStatusFinishedOk returns a tuple with the CampaignsStatusFinished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsStatusFinishedOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsStatusFinished) {
		return nil, false
	}
	return o.CampaignsStatusFinished, true
}

// HasCampaignsStatusFinished returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsStatusFinished() bool {
	if o != nil && !IsNil(o.CampaignsStatusFinished) {
		return true
	}

	return false
}

// SetCampaignsStatusFinished gets a reference to the given string and assigns it to the CampaignsStatusFinished field.
func (o *LanguagePackData) SetCampaignsStatusFinished(v string) {
	o.CampaignsStatusFinished = &v
}

// GetCampaignsStatusPaused returns the CampaignsStatusPaused field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsStatusPaused() string {
	if o == nil || IsNil(o.CampaignsStatusPaused) {
		var ret string
		return ret
	}
	return *o.CampaignsStatusPaused
}

// GetCampaignsStatusPausedOk returns a tuple with the CampaignsStatusPaused field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsStatusPausedOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsStatusPaused) {
		return nil, false
	}
	return o.CampaignsStatusPaused, true
}

// HasCampaignsStatusPaused returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsStatusPaused() bool {
	if o != nil && !IsNil(o.CampaignsStatusPaused) {
		return true
	}

	return false
}

// SetCampaignsStatusPaused gets a reference to the given string and assigns it to the CampaignsStatusPaused field.
func (o *LanguagePackData) SetCampaignsStatusPaused(v string) {
	o.CampaignsStatusPaused = &v
}

// GetCampaignsStatusRunning returns the CampaignsStatusRunning field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsStatusRunning() string {
	if o == nil || IsNil(o.CampaignsStatusRunning) {
		var ret string
		return ret
	}
	return *o.CampaignsStatusRunning
}

// GetCampaignsStatusRunningOk returns a tuple with the CampaignsStatusRunning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsStatusRunningOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsStatusRunning) {
		return nil, false
	}
	return o.CampaignsStatusRunning, true
}

// HasCampaignsStatusRunning returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsStatusRunning() bool {
	if o != nil && !IsNil(o.CampaignsStatusRunning) {
		return true
	}

	return false
}

// SetCampaignsStatusRunning gets a reference to the given string and assigns it to the CampaignsStatusRunning field.
func (o *LanguagePackData) SetCampaignsStatusRunning(v string) {
	o.CampaignsStatusRunning = &v
}

// GetCampaignsStatusScheduled returns the CampaignsStatusScheduled field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsStatusScheduled() string {
	if o == nil || IsNil(o.CampaignsStatusScheduled) {
		var ret string
		return ret
	}
	return *o.CampaignsStatusScheduled
}

// GetCampaignsStatusScheduledOk returns a tuple with the CampaignsStatusScheduled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsStatusScheduledOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsStatusScheduled) {
		return nil, false
	}
	return o.CampaignsStatusScheduled, true
}

// HasCampaignsStatusScheduled returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsStatusScheduled() bool {
	if o != nil && !IsNil(o.CampaignsStatusScheduled) {
		return true
	}

	return false
}

// SetCampaignsStatusScheduled gets a reference to the given string and assigns it to the CampaignsStatusScheduled field.
func (o *LanguagePackData) SetCampaignsStatusScheduled(v string) {
	o.CampaignsStatusScheduled = &v
}

// GetCampaignsStatusChanged returns the CampaignsStatusChanged field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsStatusChanged() string {
	if o == nil || IsNil(o.CampaignsStatusChanged) {
		var ret string
		return ret
	}
	return *o.CampaignsStatusChanged
}

// GetCampaignsStatusChangedOk returns a tuple with the CampaignsStatusChanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsStatusChangedOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsStatusChanged) {
		return nil, false
	}
	return o.CampaignsStatusChanged, true
}

// HasCampaignsStatusChanged returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsStatusChanged() bool {
	if o != nil && !IsNil(o.CampaignsStatusChanged) {
		return true
	}

	return false
}

// SetCampaignsStatusChanged gets a reference to the given string and assigns it to the CampaignsStatusChanged field.
func (o *LanguagePackData) SetCampaignsStatusChanged(v string) {
	o.CampaignsStatusChanged = &v
}

// GetCampaignsSubject returns the CampaignsSubject field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsSubject() string {
	if o == nil || IsNil(o.CampaignsSubject) {
		var ret string
		return ret
	}
	return *o.CampaignsSubject
}

// GetCampaignsSubjectOk returns a tuple with the CampaignsSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsSubject) {
		return nil, false
	}
	return o.CampaignsSubject, true
}

// HasCampaignsSubject returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsSubject() bool {
	if o != nil && !IsNil(o.CampaignsSubject) {
		return true
	}

	return false
}

// SetCampaignsSubject gets a reference to the given string and assigns it to the CampaignsSubject field.
func (o *LanguagePackData) SetCampaignsSubject(v string) {
	o.CampaignsSubject = &v
}

// GetCampaignsTestEmails returns the CampaignsTestEmails field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsTestEmails() string {
	if o == nil || IsNil(o.CampaignsTestEmails) {
		var ret string
		return ret
	}
	return *o.CampaignsTestEmails
}

// GetCampaignsTestEmailsOk returns a tuple with the CampaignsTestEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsTestEmailsOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsTestEmails) {
		return nil, false
	}
	return o.CampaignsTestEmails, true
}

// HasCampaignsTestEmails returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsTestEmails() bool {
	if o != nil && !IsNil(o.CampaignsTestEmails) {
		return true
	}

	return false
}

// SetCampaignsTestEmails gets a reference to the given string and assigns it to the CampaignsTestEmails field.
func (o *LanguagePackData) SetCampaignsTestEmails(v string) {
	o.CampaignsTestEmails = &v
}

// GetCampaignsTestSent returns the CampaignsTestSent field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsTestSent() string {
	if o == nil || IsNil(o.CampaignsTestSent) {
		var ret string
		return ret
	}
	return *o.CampaignsTestSent
}

// GetCampaignsTestSentOk returns a tuple with the CampaignsTestSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsTestSentOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsTestSent) {
		return nil, false
	}
	return o.CampaignsTestSent, true
}

// HasCampaignsTestSent returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsTestSent() bool {
	if o != nil && !IsNil(o.CampaignsTestSent) {
		return true
	}

	return false
}

// SetCampaignsTestSent gets a reference to the given string and assigns it to the CampaignsTestSent field.
func (o *LanguagePackData) SetCampaignsTestSent(v string) {
	o.CampaignsTestSent = &v
}

// GetCampaignsTimestamps returns the CampaignsTimestamps field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsTimestamps() string {
	if o == nil || IsNil(o.CampaignsTimestamps) {
		var ret string
		return ret
	}
	return *o.CampaignsTimestamps
}

// GetCampaignsTimestampsOk returns a tuple with the CampaignsTimestamps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsTimestampsOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsTimestamps) {
		return nil, false
	}
	return o.CampaignsTimestamps, true
}

// HasCampaignsTimestamps returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsTimestamps() bool {
	if o != nil && !IsNil(o.CampaignsTimestamps) {
		return true
	}

	return false
}

// SetCampaignsTimestamps gets a reference to the given string and assigns it to the CampaignsTimestamps field.
func (o *LanguagePackData) SetCampaignsTimestamps(v string) {
	o.CampaignsTimestamps = &v
}

// GetCampaignsTrackLink returns the CampaignsTrackLink field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsTrackLink() string {
	if o == nil || IsNil(o.CampaignsTrackLink) {
		var ret string
		return ret
	}
	return *o.CampaignsTrackLink
}

// GetCampaignsTrackLinkOk returns a tuple with the CampaignsTrackLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsTrackLinkOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsTrackLink) {
		return nil, false
	}
	return o.CampaignsTrackLink, true
}

// HasCampaignsTrackLink returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsTrackLink() bool {
	if o != nil && !IsNil(o.CampaignsTrackLink) {
		return true
	}

	return false
}

// SetCampaignsTrackLink gets a reference to the given string and assigns it to the CampaignsTrackLink field.
func (o *LanguagePackData) SetCampaignsTrackLink(v string) {
	o.CampaignsTrackLink = &v
}

// GetCampaignsViews returns the CampaignsViews field value if set, zero value otherwise.
func (o *LanguagePackData) GetCampaignsViews() string {
	if o == nil || IsNil(o.CampaignsViews) {
		var ret string
		return ret
	}
	return *o.CampaignsViews
}

// GetCampaignsViewsOk returns a tuple with the CampaignsViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetCampaignsViewsOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignsViews) {
		return nil, false
	}
	return o.CampaignsViews, true
}

// HasCampaignsViews returns a boolean if a field has been set.
func (o *LanguagePackData) HasCampaignsViews() bool {
	if o != nil && !IsNil(o.CampaignsViews) {
		return true
	}

	return false
}

// SetCampaignsViews gets a reference to the given string and assigns it to the CampaignsViews field.
func (o *LanguagePackData) SetCampaignsViews(v string) {
	o.CampaignsViews = &v
}

// GetDashboardCampaignViews returns the DashboardCampaignViews field value if set, zero value otherwise.
func (o *LanguagePackData) GetDashboardCampaignViews() string {
	if o == nil || IsNil(o.DashboardCampaignViews) {
		var ret string
		return ret
	}
	return *o.DashboardCampaignViews
}

// GetDashboardCampaignViewsOk returns a tuple with the DashboardCampaignViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetDashboardCampaignViewsOk() (*string, bool) {
	if o == nil || IsNil(o.DashboardCampaignViews) {
		return nil, false
	}
	return o.DashboardCampaignViews, true
}

// HasDashboardCampaignViews returns a boolean if a field has been set.
func (o *LanguagePackData) HasDashboardCampaignViews() bool {
	if o != nil && !IsNil(o.DashboardCampaignViews) {
		return true
	}

	return false
}

// SetDashboardCampaignViews gets a reference to the given string and assigns it to the DashboardCampaignViews field.
func (o *LanguagePackData) SetDashboardCampaignViews(v string) {
	o.DashboardCampaignViews = &v
}

// GetDashboardLinkClicks returns the DashboardLinkClicks field value if set, zero value otherwise.
func (o *LanguagePackData) GetDashboardLinkClicks() string {
	if o == nil || IsNil(o.DashboardLinkClicks) {
		var ret string
		return ret
	}
	return *o.DashboardLinkClicks
}

// GetDashboardLinkClicksOk returns a tuple with the DashboardLinkClicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetDashboardLinkClicksOk() (*string, bool) {
	if o == nil || IsNil(o.DashboardLinkClicks) {
		return nil, false
	}
	return o.DashboardLinkClicks, true
}

// HasDashboardLinkClicks returns a boolean if a field has been set.
func (o *LanguagePackData) HasDashboardLinkClicks() bool {
	if o != nil && !IsNil(o.DashboardLinkClicks) {
		return true
	}

	return false
}

// SetDashboardLinkClicks gets a reference to the given string and assigns it to the DashboardLinkClicks field.
func (o *LanguagePackData) SetDashboardLinkClicks(v string) {
	o.DashboardLinkClicks = &v
}

// GetDashboardMessagesSent returns the DashboardMessagesSent field value if set, zero value otherwise.
func (o *LanguagePackData) GetDashboardMessagesSent() string {
	if o == nil || IsNil(o.DashboardMessagesSent) {
		var ret string
		return ret
	}
	return *o.DashboardMessagesSent
}

// GetDashboardMessagesSentOk returns a tuple with the DashboardMessagesSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetDashboardMessagesSentOk() (*string, bool) {
	if o == nil || IsNil(o.DashboardMessagesSent) {
		return nil, false
	}
	return o.DashboardMessagesSent, true
}

// HasDashboardMessagesSent returns a boolean if a field has been set.
func (o *LanguagePackData) HasDashboardMessagesSent() bool {
	if o != nil && !IsNil(o.DashboardMessagesSent) {
		return true
	}

	return false
}

// SetDashboardMessagesSent gets a reference to the given string and assigns it to the DashboardMessagesSent field.
func (o *LanguagePackData) SetDashboardMessagesSent(v string) {
	o.DashboardMessagesSent = &v
}

// GetDashboardOrphanSubs returns the DashboardOrphanSubs field value if set, zero value otherwise.
func (o *LanguagePackData) GetDashboardOrphanSubs() string {
	if o == nil || IsNil(o.DashboardOrphanSubs) {
		var ret string
		return ret
	}
	return *o.DashboardOrphanSubs
}

// GetDashboardOrphanSubsOk returns a tuple with the DashboardOrphanSubs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetDashboardOrphanSubsOk() (*string, bool) {
	if o == nil || IsNil(o.DashboardOrphanSubs) {
		return nil, false
	}
	return o.DashboardOrphanSubs, true
}

// HasDashboardOrphanSubs returns a boolean if a field has been set.
func (o *LanguagePackData) HasDashboardOrphanSubs() bool {
	if o != nil && !IsNil(o.DashboardOrphanSubs) {
		return true
	}

	return false
}

// SetDashboardOrphanSubs gets a reference to the given string and assigns it to the DashboardOrphanSubs field.
func (o *LanguagePackData) SetDashboardOrphanSubs(v string) {
	o.DashboardOrphanSubs = &v
}

// GetEmailDataInfo returns the EmailDataInfo field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailDataInfo() string {
	if o == nil || IsNil(o.EmailDataInfo) {
		var ret string
		return ret
	}
	return *o.EmailDataInfo
}

// GetEmailDataInfoOk returns a tuple with the EmailDataInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailDataInfoOk() (*string, bool) {
	if o == nil || IsNil(o.EmailDataInfo) {
		return nil, false
	}
	return o.EmailDataInfo, true
}

// HasEmailDataInfo returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailDataInfo() bool {
	if o != nil && !IsNil(o.EmailDataInfo) {
		return true
	}

	return false
}

// SetEmailDataInfo gets a reference to the given string and assigns it to the EmailDataInfo field.
func (o *LanguagePackData) SetEmailDataInfo(v string) {
	o.EmailDataInfo = &v
}

// GetEmailDataTitle returns the EmailDataTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailDataTitle() string {
	if o == nil || IsNil(o.EmailDataTitle) {
		var ret string
		return ret
	}
	return *o.EmailDataTitle
}

// GetEmailDataTitleOk returns a tuple with the EmailDataTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailDataTitleOk() (*string, bool) {
	if o == nil || IsNil(o.EmailDataTitle) {
		return nil, false
	}
	return o.EmailDataTitle, true
}

// HasEmailDataTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailDataTitle() bool {
	if o != nil && !IsNil(o.EmailDataTitle) {
		return true
	}

	return false
}

// SetEmailDataTitle gets a reference to the given string and assigns it to the EmailDataTitle field.
func (o *LanguagePackData) SetEmailDataTitle(v string) {
	o.EmailDataTitle = &v
}

// GetEmailOptinConfirmSub returns the EmailOptinConfirmSub field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailOptinConfirmSub() string {
	if o == nil || IsNil(o.EmailOptinConfirmSub) {
		var ret string
		return ret
	}
	return *o.EmailOptinConfirmSub
}

// GetEmailOptinConfirmSubOk returns a tuple with the EmailOptinConfirmSub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailOptinConfirmSubOk() (*string, bool) {
	if o == nil || IsNil(o.EmailOptinConfirmSub) {
		return nil, false
	}
	return o.EmailOptinConfirmSub, true
}

// HasEmailOptinConfirmSub returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailOptinConfirmSub() bool {
	if o != nil && !IsNil(o.EmailOptinConfirmSub) {
		return true
	}

	return false
}

// SetEmailOptinConfirmSub gets a reference to the given string and assigns it to the EmailOptinConfirmSub field.
func (o *LanguagePackData) SetEmailOptinConfirmSub(v string) {
	o.EmailOptinConfirmSub = &v
}

// GetEmailOptinConfirmSubHelp returns the EmailOptinConfirmSubHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailOptinConfirmSubHelp() string {
	if o == nil || IsNil(o.EmailOptinConfirmSubHelp) {
		var ret string
		return ret
	}
	return *o.EmailOptinConfirmSubHelp
}

// GetEmailOptinConfirmSubHelpOk returns a tuple with the EmailOptinConfirmSubHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailOptinConfirmSubHelpOk() (*string, bool) {
	if o == nil || IsNil(o.EmailOptinConfirmSubHelp) {
		return nil, false
	}
	return o.EmailOptinConfirmSubHelp, true
}

// HasEmailOptinConfirmSubHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailOptinConfirmSubHelp() bool {
	if o != nil && !IsNil(o.EmailOptinConfirmSubHelp) {
		return true
	}

	return false
}

// SetEmailOptinConfirmSubHelp gets a reference to the given string and assigns it to the EmailOptinConfirmSubHelp field.
func (o *LanguagePackData) SetEmailOptinConfirmSubHelp(v string) {
	o.EmailOptinConfirmSubHelp = &v
}

// GetEmailOptinConfirmSubInfo returns the EmailOptinConfirmSubInfo field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailOptinConfirmSubInfo() string {
	if o == nil || IsNil(o.EmailOptinConfirmSubInfo) {
		var ret string
		return ret
	}
	return *o.EmailOptinConfirmSubInfo
}

// GetEmailOptinConfirmSubInfoOk returns a tuple with the EmailOptinConfirmSubInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailOptinConfirmSubInfoOk() (*string, bool) {
	if o == nil || IsNil(o.EmailOptinConfirmSubInfo) {
		return nil, false
	}
	return o.EmailOptinConfirmSubInfo, true
}

// HasEmailOptinConfirmSubInfo returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailOptinConfirmSubInfo() bool {
	if o != nil && !IsNil(o.EmailOptinConfirmSubInfo) {
		return true
	}

	return false
}

// SetEmailOptinConfirmSubInfo gets a reference to the given string and assigns it to the EmailOptinConfirmSubInfo field.
func (o *LanguagePackData) SetEmailOptinConfirmSubInfo(v string) {
	o.EmailOptinConfirmSubInfo = &v
}

// GetEmailOptinConfirmSubTitle returns the EmailOptinConfirmSubTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailOptinConfirmSubTitle() string {
	if o == nil || IsNil(o.EmailOptinConfirmSubTitle) {
		var ret string
		return ret
	}
	return *o.EmailOptinConfirmSubTitle
}

// GetEmailOptinConfirmSubTitleOk returns a tuple with the EmailOptinConfirmSubTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailOptinConfirmSubTitleOk() (*string, bool) {
	if o == nil || IsNil(o.EmailOptinConfirmSubTitle) {
		return nil, false
	}
	return o.EmailOptinConfirmSubTitle, true
}

// HasEmailOptinConfirmSubTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailOptinConfirmSubTitle() bool {
	if o != nil && !IsNil(o.EmailOptinConfirmSubTitle) {
		return true
	}

	return false
}

// SetEmailOptinConfirmSubTitle gets a reference to the given string and assigns it to the EmailOptinConfirmSubTitle field.
func (o *LanguagePackData) SetEmailOptinConfirmSubTitle(v string) {
	o.EmailOptinConfirmSubTitle = &v
}

// GetEmailOptinConfirmSubWelcome returns the EmailOptinConfirmSubWelcome field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailOptinConfirmSubWelcome() string {
	if o == nil || IsNil(o.EmailOptinConfirmSubWelcome) {
		var ret string
		return ret
	}
	return *o.EmailOptinConfirmSubWelcome
}

// GetEmailOptinConfirmSubWelcomeOk returns a tuple with the EmailOptinConfirmSubWelcome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailOptinConfirmSubWelcomeOk() (*string, bool) {
	if o == nil || IsNil(o.EmailOptinConfirmSubWelcome) {
		return nil, false
	}
	return o.EmailOptinConfirmSubWelcome, true
}

// HasEmailOptinConfirmSubWelcome returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailOptinConfirmSubWelcome() bool {
	if o != nil && !IsNil(o.EmailOptinConfirmSubWelcome) {
		return true
	}

	return false
}

// SetEmailOptinConfirmSubWelcome gets a reference to the given string and assigns it to the EmailOptinConfirmSubWelcome field.
func (o *LanguagePackData) SetEmailOptinConfirmSubWelcome(v string) {
	o.EmailOptinConfirmSubWelcome = &v
}

// GetEmailOptinPrivateList returns the EmailOptinPrivateList field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailOptinPrivateList() string {
	if o == nil || IsNil(o.EmailOptinPrivateList) {
		var ret string
		return ret
	}
	return *o.EmailOptinPrivateList
}

// GetEmailOptinPrivateListOk returns a tuple with the EmailOptinPrivateList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailOptinPrivateListOk() (*string, bool) {
	if o == nil || IsNil(o.EmailOptinPrivateList) {
		return nil, false
	}
	return o.EmailOptinPrivateList, true
}

// HasEmailOptinPrivateList returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailOptinPrivateList() bool {
	if o != nil && !IsNil(o.EmailOptinPrivateList) {
		return true
	}

	return false
}

// SetEmailOptinPrivateList gets a reference to the given string and assigns it to the EmailOptinPrivateList field.
func (o *LanguagePackData) SetEmailOptinPrivateList(v string) {
	o.EmailOptinPrivateList = &v
}

// GetEmailStatusCampaignReason returns the EmailStatusCampaignReason field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailStatusCampaignReason() string {
	if o == nil || IsNil(o.EmailStatusCampaignReason) {
		var ret string
		return ret
	}
	return *o.EmailStatusCampaignReason
}

// GetEmailStatusCampaignReasonOk returns a tuple with the EmailStatusCampaignReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailStatusCampaignReasonOk() (*string, bool) {
	if o == nil || IsNil(o.EmailStatusCampaignReason) {
		return nil, false
	}
	return o.EmailStatusCampaignReason, true
}

// HasEmailStatusCampaignReason returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailStatusCampaignReason() bool {
	if o != nil && !IsNil(o.EmailStatusCampaignReason) {
		return true
	}

	return false
}

// SetEmailStatusCampaignReason gets a reference to the given string and assigns it to the EmailStatusCampaignReason field.
func (o *LanguagePackData) SetEmailStatusCampaignReason(v string) {
	o.EmailStatusCampaignReason = &v
}

// GetEmailStatusCampaignSent returns the EmailStatusCampaignSent field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailStatusCampaignSent() string {
	if o == nil || IsNil(o.EmailStatusCampaignSent) {
		var ret string
		return ret
	}
	return *o.EmailStatusCampaignSent
}

// GetEmailStatusCampaignSentOk returns a tuple with the EmailStatusCampaignSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailStatusCampaignSentOk() (*string, bool) {
	if o == nil || IsNil(o.EmailStatusCampaignSent) {
		return nil, false
	}
	return o.EmailStatusCampaignSent, true
}

// HasEmailStatusCampaignSent returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailStatusCampaignSent() bool {
	if o != nil && !IsNil(o.EmailStatusCampaignSent) {
		return true
	}

	return false
}

// SetEmailStatusCampaignSent gets a reference to the given string and assigns it to the EmailStatusCampaignSent field.
func (o *LanguagePackData) SetEmailStatusCampaignSent(v string) {
	o.EmailStatusCampaignSent = &v
}

// GetEmailStatusCampaignUpdateTitle returns the EmailStatusCampaignUpdateTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailStatusCampaignUpdateTitle() string {
	if o == nil || IsNil(o.EmailStatusCampaignUpdateTitle) {
		var ret string
		return ret
	}
	return *o.EmailStatusCampaignUpdateTitle
}

// GetEmailStatusCampaignUpdateTitleOk returns a tuple with the EmailStatusCampaignUpdateTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailStatusCampaignUpdateTitleOk() (*string, bool) {
	if o == nil || IsNil(o.EmailStatusCampaignUpdateTitle) {
		return nil, false
	}
	return o.EmailStatusCampaignUpdateTitle, true
}

// HasEmailStatusCampaignUpdateTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailStatusCampaignUpdateTitle() bool {
	if o != nil && !IsNil(o.EmailStatusCampaignUpdateTitle) {
		return true
	}

	return false
}

// SetEmailStatusCampaignUpdateTitle gets a reference to the given string and assigns it to the EmailStatusCampaignUpdateTitle field.
func (o *LanguagePackData) SetEmailStatusCampaignUpdateTitle(v string) {
	o.EmailStatusCampaignUpdateTitle = &v
}

// GetEmailStatusImportFile returns the EmailStatusImportFile field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailStatusImportFile() string {
	if o == nil || IsNil(o.EmailStatusImportFile) {
		var ret string
		return ret
	}
	return *o.EmailStatusImportFile
}

// GetEmailStatusImportFileOk returns a tuple with the EmailStatusImportFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailStatusImportFileOk() (*string, bool) {
	if o == nil || IsNil(o.EmailStatusImportFile) {
		return nil, false
	}
	return o.EmailStatusImportFile, true
}

// HasEmailStatusImportFile returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailStatusImportFile() bool {
	if o != nil && !IsNil(o.EmailStatusImportFile) {
		return true
	}

	return false
}

// SetEmailStatusImportFile gets a reference to the given string and assigns it to the EmailStatusImportFile field.
func (o *LanguagePackData) SetEmailStatusImportFile(v string) {
	o.EmailStatusImportFile = &v
}

// GetEmailStatusImportRecords returns the EmailStatusImportRecords field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailStatusImportRecords() string {
	if o == nil || IsNil(o.EmailStatusImportRecords) {
		var ret string
		return ret
	}
	return *o.EmailStatusImportRecords
}

// GetEmailStatusImportRecordsOk returns a tuple with the EmailStatusImportRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailStatusImportRecordsOk() (*string, bool) {
	if o == nil || IsNil(o.EmailStatusImportRecords) {
		return nil, false
	}
	return o.EmailStatusImportRecords, true
}

// HasEmailStatusImportRecords returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailStatusImportRecords() bool {
	if o != nil && !IsNil(o.EmailStatusImportRecords) {
		return true
	}

	return false
}

// SetEmailStatusImportRecords gets a reference to the given string and assigns it to the EmailStatusImportRecords field.
func (o *LanguagePackData) SetEmailStatusImportRecords(v string) {
	o.EmailStatusImportRecords = &v
}

// GetEmailStatusImportTitle returns the EmailStatusImportTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailStatusImportTitle() string {
	if o == nil || IsNil(o.EmailStatusImportTitle) {
		var ret string
		return ret
	}
	return *o.EmailStatusImportTitle
}

// GetEmailStatusImportTitleOk returns a tuple with the EmailStatusImportTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailStatusImportTitleOk() (*string, bool) {
	if o == nil || IsNil(o.EmailStatusImportTitle) {
		return nil, false
	}
	return o.EmailStatusImportTitle, true
}

// HasEmailStatusImportTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailStatusImportTitle() bool {
	if o != nil && !IsNil(o.EmailStatusImportTitle) {
		return true
	}

	return false
}

// SetEmailStatusImportTitle gets a reference to the given string and assigns it to the EmailStatusImportTitle field.
func (o *LanguagePackData) SetEmailStatusImportTitle(v string) {
	o.EmailStatusImportTitle = &v
}

// GetEmailStatusStatus returns the EmailStatusStatus field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailStatusStatus() string {
	if o == nil || IsNil(o.EmailStatusStatus) {
		var ret string
		return ret
	}
	return *o.EmailStatusStatus
}

// GetEmailStatusStatusOk returns a tuple with the EmailStatusStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailStatusStatusOk() (*string, bool) {
	if o == nil || IsNil(o.EmailStatusStatus) {
		return nil, false
	}
	return o.EmailStatusStatus, true
}

// HasEmailStatusStatus returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailStatusStatus() bool {
	if o != nil && !IsNil(o.EmailStatusStatus) {
		return true
	}

	return false
}

// SetEmailStatusStatus gets a reference to the given string and assigns it to the EmailStatusStatus field.
func (o *LanguagePackData) SetEmailStatusStatus(v string) {
	o.EmailStatusStatus = &v
}

// GetEmailUnsub returns the EmailUnsub field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailUnsub() string {
	if o == nil || IsNil(o.EmailUnsub) {
		var ret string
		return ret
	}
	return *o.EmailUnsub
}

// GetEmailUnsubOk returns a tuple with the EmailUnsub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailUnsubOk() (*string, bool) {
	if o == nil || IsNil(o.EmailUnsub) {
		return nil, false
	}
	return o.EmailUnsub, true
}

// HasEmailUnsub returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailUnsub() bool {
	if o != nil && !IsNil(o.EmailUnsub) {
		return true
	}

	return false
}

// SetEmailUnsub gets a reference to the given string and assigns it to the EmailUnsub field.
func (o *LanguagePackData) SetEmailUnsub(v string) {
	o.EmailUnsub = &v
}

// GetEmailUnsubHelp returns the EmailUnsubHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailUnsubHelp() string {
	if o == nil || IsNil(o.EmailUnsubHelp) {
		var ret string
		return ret
	}
	return *o.EmailUnsubHelp
}

// GetEmailUnsubHelpOk returns a tuple with the EmailUnsubHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailUnsubHelpOk() (*string, bool) {
	if o == nil || IsNil(o.EmailUnsubHelp) {
		return nil, false
	}
	return o.EmailUnsubHelp, true
}

// HasEmailUnsubHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailUnsubHelp() bool {
	if o != nil && !IsNil(o.EmailUnsubHelp) {
		return true
	}

	return false
}

// SetEmailUnsubHelp gets a reference to the given string and assigns it to the EmailUnsubHelp field.
func (o *LanguagePackData) SetEmailUnsubHelp(v string) {
	o.EmailUnsubHelp = &v
}

// GetEmailViewInBrowser returns the EmailViewInBrowser field value if set, zero value otherwise.
func (o *LanguagePackData) GetEmailViewInBrowser() string {
	if o == nil || IsNil(o.EmailViewInBrowser) {
		var ret string
		return ret
	}
	return *o.EmailViewInBrowser
}

// GetEmailViewInBrowserOk returns a tuple with the EmailViewInBrowser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetEmailViewInBrowserOk() (*string, bool) {
	if o == nil || IsNil(o.EmailViewInBrowser) {
		return nil, false
	}
	return o.EmailViewInBrowser, true
}

// HasEmailViewInBrowser returns a boolean if a field has been set.
func (o *LanguagePackData) HasEmailViewInBrowser() bool {
	if o != nil && !IsNil(o.EmailViewInBrowser) {
		return true
	}

	return false
}

// SetEmailViewInBrowser gets a reference to the given string and assigns it to the EmailViewInBrowser field.
func (o *LanguagePackData) SetEmailViewInBrowser(v string) {
	o.EmailViewInBrowser = &v
}

// GetFormsFormHTML returns the FormsFormHTML field value if set, zero value otherwise.
func (o *LanguagePackData) GetFormsFormHTML() string {
	if o == nil || IsNil(o.FormsFormHTML) {
		var ret string
		return ret
	}
	return *o.FormsFormHTML
}

// GetFormsFormHTMLOk returns a tuple with the FormsFormHTML field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetFormsFormHTMLOk() (*string, bool) {
	if o == nil || IsNil(o.FormsFormHTML) {
		return nil, false
	}
	return o.FormsFormHTML, true
}

// HasFormsFormHTML returns a boolean if a field has been set.
func (o *LanguagePackData) HasFormsFormHTML() bool {
	if o != nil && !IsNil(o.FormsFormHTML) {
		return true
	}

	return false
}

// SetFormsFormHTML gets a reference to the given string and assigns it to the FormsFormHTML field.
func (o *LanguagePackData) SetFormsFormHTML(v string) {
	o.FormsFormHTML = &v
}

// GetFormsFormHTMLHelp returns the FormsFormHTMLHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetFormsFormHTMLHelp() string {
	if o == nil || IsNil(o.FormsFormHTMLHelp) {
		var ret string
		return ret
	}
	return *o.FormsFormHTMLHelp
}

// GetFormsFormHTMLHelpOk returns a tuple with the FormsFormHTMLHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetFormsFormHTMLHelpOk() (*string, bool) {
	if o == nil || IsNil(o.FormsFormHTMLHelp) {
		return nil, false
	}
	return o.FormsFormHTMLHelp, true
}

// HasFormsFormHTMLHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasFormsFormHTMLHelp() bool {
	if o != nil && !IsNil(o.FormsFormHTMLHelp) {
		return true
	}

	return false
}

// SetFormsFormHTMLHelp gets a reference to the given string and assigns it to the FormsFormHTMLHelp field.
func (o *LanguagePackData) SetFormsFormHTMLHelp(v string) {
	o.FormsFormHTMLHelp = &v
}

// GetFormsNoPublicLists returns the FormsNoPublicLists field value if set, zero value otherwise.
func (o *LanguagePackData) GetFormsNoPublicLists() string {
	if o == nil || IsNil(o.FormsNoPublicLists) {
		var ret string
		return ret
	}
	return *o.FormsNoPublicLists
}

// GetFormsNoPublicListsOk returns a tuple with the FormsNoPublicLists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetFormsNoPublicListsOk() (*string, bool) {
	if o == nil || IsNil(o.FormsNoPublicLists) {
		return nil, false
	}
	return o.FormsNoPublicLists, true
}

// HasFormsNoPublicLists returns a boolean if a field has been set.
func (o *LanguagePackData) HasFormsNoPublicLists() bool {
	if o != nil && !IsNil(o.FormsNoPublicLists) {
		return true
	}

	return false
}

// SetFormsNoPublicLists gets a reference to the given string and assigns it to the FormsNoPublicLists field.
func (o *LanguagePackData) SetFormsNoPublicLists(v string) {
	o.FormsNoPublicLists = &v
}

// GetFormsPublicLists returns the FormsPublicLists field value if set, zero value otherwise.
func (o *LanguagePackData) GetFormsPublicLists() string {
	if o == nil || IsNil(o.FormsPublicLists) {
		var ret string
		return ret
	}
	return *o.FormsPublicLists
}

// GetFormsPublicListsOk returns a tuple with the FormsPublicLists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetFormsPublicListsOk() (*string, bool) {
	if o == nil || IsNil(o.FormsPublicLists) {
		return nil, false
	}
	return o.FormsPublicLists, true
}

// HasFormsPublicLists returns a boolean if a field has been set.
func (o *LanguagePackData) HasFormsPublicLists() bool {
	if o != nil && !IsNil(o.FormsPublicLists) {
		return true
	}

	return false
}

// SetFormsPublicLists gets a reference to the given string and assigns it to the FormsPublicLists field.
func (o *LanguagePackData) SetFormsPublicLists(v string) {
	o.FormsPublicLists = &v
}

// GetFormsPublicSubPage returns the FormsPublicSubPage field value if set, zero value otherwise.
func (o *LanguagePackData) GetFormsPublicSubPage() string {
	if o == nil || IsNil(o.FormsPublicSubPage) {
		var ret string
		return ret
	}
	return *o.FormsPublicSubPage
}

// GetFormsPublicSubPageOk returns a tuple with the FormsPublicSubPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetFormsPublicSubPageOk() (*string, bool) {
	if o == nil || IsNil(o.FormsPublicSubPage) {
		return nil, false
	}
	return o.FormsPublicSubPage, true
}

// HasFormsPublicSubPage returns a boolean if a field has been set.
func (o *LanguagePackData) HasFormsPublicSubPage() bool {
	if o != nil && !IsNil(o.FormsPublicSubPage) {
		return true
	}

	return false
}

// SetFormsPublicSubPage gets a reference to the given string and assigns it to the FormsPublicSubPage field.
func (o *LanguagePackData) SetFormsPublicSubPage(v string) {
	o.FormsPublicSubPage = &v
}

// GetFormsSelectHelp returns the FormsSelectHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetFormsSelectHelp() string {
	if o == nil || IsNil(o.FormsSelectHelp) {
		var ret string
		return ret
	}
	return *o.FormsSelectHelp
}

// GetFormsSelectHelpOk returns a tuple with the FormsSelectHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetFormsSelectHelpOk() (*string, bool) {
	if o == nil || IsNil(o.FormsSelectHelp) {
		return nil, false
	}
	return o.FormsSelectHelp, true
}

// HasFormsSelectHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasFormsSelectHelp() bool {
	if o != nil && !IsNil(o.FormsSelectHelp) {
		return true
	}

	return false
}

// SetFormsSelectHelp gets a reference to the given string and assigns it to the FormsSelectHelp field.
func (o *LanguagePackData) SetFormsSelectHelp(v string) {
	o.FormsSelectHelp = &v
}

// GetFormsTitle returns the FormsTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetFormsTitle() string {
	if o == nil || IsNil(o.FormsTitle) {
		var ret string
		return ret
	}
	return *o.FormsTitle
}

// GetFormsTitleOk returns a tuple with the FormsTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetFormsTitleOk() (*string, bool) {
	if o == nil || IsNil(o.FormsTitle) {
		return nil, false
	}
	return o.FormsTitle, true
}

// HasFormsTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasFormsTitle() bool {
	if o != nil && !IsNil(o.FormsTitle) {
		return true
	}

	return false
}

// SetFormsTitle gets a reference to the given string and assigns it to the FormsTitle field.
func (o *LanguagePackData) SetFormsTitle(v string) {
	o.FormsTitle = &v
}

// GetGlobalsButtonsAdd returns the GlobalsButtonsAdd field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsAdd() string {
	if o == nil || IsNil(o.GlobalsButtonsAdd) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsAdd
}

// GetGlobalsButtonsAddOk returns a tuple with the GlobalsButtonsAdd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsAddOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsAdd) {
		return nil, false
	}
	return o.GlobalsButtonsAdd, true
}

// HasGlobalsButtonsAdd returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsAdd() bool {
	if o != nil && !IsNil(o.GlobalsButtonsAdd) {
		return true
	}

	return false
}

// SetGlobalsButtonsAdd gets a reference to the given string and assigns it to the GlobalsButtonsAdd field.
func (o *LanguagePackData) SetGlobalsButtonsAdd(v string) {
	o.GlobalsButtonsAdd = &v
}

// GetGlobalsButtonsAddNew returns the GlobalsButtonsAddNew field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsAddNew() string {
	if o == nil || IsNil(o.GlobalsButtonsAddNew) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsAddNew
}

// GetGlobalsButtonsAddNewOk returns a tuple with the GlobalsButtonsAddNew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsAddNewOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsAddNew) {
		return nil, false
	}
	return o.GlobalsButtonsAddNew, true
}

// HasGlobalsButtonsAddNew returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsAddNew() bool {
	if o != nil && !IsNil(o.GlobalsButtonsAddNew) {
		return true
	}

	return false
}

// SetGlobalsButtonsAddNew gets a reference to the given string and assigns it to the GlobalsButtonsAddNew field.
func (o *LanguagePackData) SetGlobalsButtonsAddNew(v string) {
	o.GlobalsButtonsAddNew = &v
}

// GetGlobalsButtonsBack returns the GlobalsButtonsBack field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsBack() string {
	if o == nil || IsNil(o.GlobalsButtonsBack) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsBack
}

// GetGlobalsButtonsBackOk returns a tuple with the GlobalsButtonsBack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsBackOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsBack) {
		return nil, false
	}
	return o.GlobalsButtonsBack, true
}

// HasGlobalsButtonsBack returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsBack() bool {
	if o != nil && !IsNil(o.GlobalsButtonsBack) {
		return true
	}

	return false
}

// SetGlobalsButtonsBack gets a reference to the given string and assigns it to the GlobalsButtonsBack field.
func (o *LanguagePackData) SetGlobalsButtonsBack(v string) {
	o.GlobalsButtonsBack = &v
}

// GetGlobalsButtonsCancel returns the GlobalsButtonsCancel field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsCancel() string {
	if o == nil || IsNil(o.GlobalsButtonsCancel) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsCancel
}

// GetGlobalsButtonsCancelOk returns a tuple with the GlobalsButtonsCancel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsCancelOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsCancel) {
		return nil, false
	}
	return o.GlobalsButtonsCancel, true
}

// HasGlobalsButtonsCancel returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsCancel() bool {
	if o != nil && !IsNil(o.GlobalsButtonsCancel) {
		return true
	}

	return false
}

// SetGlobalsButtonsCancel gets a reference to the given string and assigns it to the GlobalsButtonsCancel field.
func (o *LanguagePackData) SetGlobalsButtonsCancel(v string) {
	o.GlobalsButtonsCancel = &v
}

// GetGlobalsButtonsClone returns the GlobalsButtonsClone field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsClone() string {
	if o == nil || IsNil(o.GlobalsButtonsClone) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsClone
}

// GetGlobalsButtonsCloneOk returns a tuple with the GlobalsButtonsClone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsCloneOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsClone) {
		return nil, false
	}
	return o.GlobalsButtonsClone, true
}

// HasGlobalsButtonsClone returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsClone() bool {
	if o != nil && !IsNil(o.GlobalsButtonsClone) {
		return true
	}

	return false
}

// SetGlobalsButtonsClone gets a reference to the given string and assigns it to the GlobalsButtonsClone field.
func (o *LanguagePackData) SetGlobalsButtonsClone(v string) {
	o.GlobalsButtonsClone = &v
}

// GetGlobalsButtonsClose returns the GlobalsButtonsClose field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsClose() string {
	if o == nil || IsNil(o.GlobalsButtonsClose) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsClose
}

// GetGlobalsButtonsCloseOk returns a tuple with the GlobalsButtonsClose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsCloseOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsClose) {
		return nil, false
	}
	return o.GlobalsButtonsClose, true
}

// HasGlobalsButtonsClose returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsClose() bool {
	if o != nil && !IsNil(o.GlobalsButtonsClose) {
		return true
	}

	return false
}

// SetGlobalsButtonsClose gets a reference to the given string and assigns it to the GlobalsButtonsClose field.
func (o *LanguagePackData) SetGlobalsButtonsClose(v string) {
	o.GlobalsButtonsClose = &v
}

// GetGlobalsButtonsContinue returns the GlobalsButtonsContinue field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsContinue() string {
	if o == nil || IsNil(o.GlobalsButtonsContinue) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsContinue
}

// GetGlobalsButtonsContinueOk returns a tuple with the GlobalsButtonsContinue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsContinueOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsContinue) {
		return nil, false
	}
	return o.GlobalsButtonsContinue, true
}

// HasGlobalsButtonsContinue returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsContinue() bool {
	if o != nil && !IsNil(o.GlobalsButtonsContinue) {
		return true
	}

	return false
}

// SetGlobalsButtonsContinue gets a reference to the given string and assigns it to the GlobalsButtonsContinue field.
func (o *LanguagePackData) SetGlobalsButtonsContinue(v string) {
	o.GlobalsButtonsContinue = &v
}

// GetGlobalsButtonsDelete returns the GlobalsButtonsDelete field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsDelete() string {
	if o == nil || IsNil(o.GlobalsButtonsDelete) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsDelete
}

// GetGlobalsButtonsDeleteOk returns a tuple with the GlobalsButtonsDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsDeleteOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsDelete) {
		return nil, false
	}
	return o.GlobalsButtonsDelete, true
}

// HasGlobalsButtonsDelete returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsDelete() bool {
	if o != nil && !IsNil(o.GlobalsButtonsDelete) {
		return true
	}

	return false
}

// SetGlobalsButtonsDelete gets a reference to the given string and assigns it to the GlobalsButtonsDelete field.
func (o *LanguagePackData) SetGlobalsButtonsDelete(v string) {
	o.GlobalsButtonsDelete = &v
}

// GetGlobalsButtonsDeleteAll returns the GlobalsButtonsDeleteAll field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsDeleteAll() string {
	if o == nil || IsNil(o.GlobalsButtonsDeleteAll) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsDeleteAll
}

// GetGlobalsButtonsDeleteAllOk returns a tuple with the GlobalsButtonsDeleteAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsDeleteAllOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsDeleteAll) {
		return nil, false
	}
	return o.GlobalsButtonsDeleteAll, true
}

// HasGlobalsButtonsDeleteAll returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsDeleteAll() bool {
	if o != nil && !IsNil(o.GlobalsButtonsDeleteAll) {
		return true
	}

	return false
}

// SetGlobalsButtonsDeleteAll gets a reference to the given string and assigns it to the GlobalsButtonsDeleteAll field.
func (o *LanguagePackData) SetGlobalsButtonsDeleteAll(v string) {
	o.GlobalsButtonsDeleteAll = &v
}

// GetGlobalsButtonsEdit returns the GlobalsButtonsEdit field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsEdit() string {
	if o == nil || IsNil(o.GlobalsButtonsEdit) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsEdit
}

// GetGlobalsButtonsEditOk returns a tuple with the GlobalsButtonsEdit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsEditOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsEdit) {
		return nil, false
	}
	return o.GlobalsButtonsEdit, true
}

// HasGlobalsButtonsEdit returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsEdit() bool {
	if o != nil && !IsNil(o.GlobalsButtonsEdit) {
		return true
	}

	return false
}

// SetGlobalsButtonsEdit gets a reference to the given string and assigns it to the GlobalsButtonsEdit field.
func (o *LanguagePackData) SetGlobalsButtonsEdit(v string) {
	o.GlobalsButtonsEdit = &v
}

// GetGlobalsButtonsEnabled returns the GlobalsButtonsEnabled field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsEnabled() string {
	if o == nil || IsNil(o.GlobalsButtonsEnabled) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsEnabled
}

// GetGlobalsButtonsEnabledOk returns a tuple with the GlobalsButtonsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsEnabled) {
		return nil, false
	}
	return o.GlobalsButtonsEnabled, true
}

// HasGlobalsButtonsEnabled returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsEnabled() bool {
	if o != nil && !IsNil(o.GlobalsButtonsEnabled) {
		return true
	}

	return false
}

// SetGlobalsButtonsEnabled gets a reference to the given string and assigns it to the GlobalsButtonsEnabled field.
func (o *LanguagePackData) SetGlobalsButtonsEnabled(v string) {
	o.GlobalsButtonsEnabled = &v
}

// GetGlobalsButtonsInsert returns the GlobalsButtonsInsert field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsInsert() string {
	if o == nil || IsNil(o.GlobalsButtonsInsert) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsInsert
}

// GetGlobalsButtonsInsertOk returns a tuple with the GlobalsButtonsInsert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsInsertOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsInsert) {
		return nil, false
	}
	return o.GlobalsButtonsInsert, true
}

// HasGlobalsButtonsInsert returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsInsert() bool {
	if o != nil && !IsNil(o.GlobalsButtonsInsert) {
		return true
	}

	return false
}

// SetGlobalsButtonsInsert gets a reference to the given string and assigns it to the GlobalsButtonsInsert field.
func (o *LanguagePackData) SetGlobalsButtonsInsert(v string) {
	o.GlobalsButtonsInsert = &v
}

// GetGlobalsButtonsLearnMore returns the GlobalsButtonsLearnMore field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsLearnMore() string {
	if o == nil || IsNil(o.GlobalsButtonsLearnMore) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsLearnMore
}

// GetGlobalsButtonsLearnMoreOk returns a tuple with the GlobalsButtonsLearnMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsLearnMoreOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsLearnMore) {
		return nil, false
	}
	return o.GlobalsButtonsLearnMore, true
}

// HasGlobalsButtonsLearnMore returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsLearnMore() bool {
	if o != nil && !IsNil(o.GlobalsButtonsLearnMore) {
		return true
	}

	return false
}

// SetGlobalsButtonsLearnMore gets a reference to the given string and assigns it to the GlobalsButtonsLearnMore field.
func (o *LanguagePackData) SetGlobalsButtonsLearnMore(v string) {
	o.GlobalsButtonsLearnMore = &v
}

// GetGlobalsButtonsMore returns the GlobalsButtonsMore field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsMore() string {
	if o == nil || IsNil(o.GlobalsButtonsMore) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsMore
}

// GetGlobalsButtonsMoreOk returns a tuple with the GlobalsButtonsMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsMoreOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsMore) {
		return nil, false
	}
	return o.GlobalsButtonsMore, true
}

// HasGlobalsButtonsMore returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsMore() bool {
	if o != nil && !IsNil(o.GlobalsButtonsMore) {
		return true
	}

	return false
}

// SetGlobalsButtonsMore gets a reference to the given string and assigns it to the GlobalsButtonsMore field.
func (o *LanguagePackData) SetGlobalsButtonsMore(v string) {
	o.GlobalsButtonsMore = &v
}

// GetGlobalsButtonsNew returns the GlobalsButtonsNew field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsNew() string {
	if o == nil || IsNil(o.GlobalsButtonsNew) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsNew
}

// GetGlobalsButtonsNewOk returns a tuple with the GlobalsButtonsNew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsNewOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsNew) {
		return nil, false
	}
	return o.GlobalsButtonsNew, true
}

// HasGlobalsButtonsNew returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsNew() bool {
	if o != nil && !IsNil(o.GlobalsButtonsNew) {
		return true
	}

	return false
}

// SetGlobalsButtonsNew gets a reference to the given string and assigns it to the GlobalsButtonsNew field.
func (o *LanguagePackData) SetGlobalsButtonsNew(v string) {
	o.GlobalsButtonsNew = &v
}

// GetGlobalsButtonsOk returns the GlobalsButtonsOk field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsOk() string {
	if o == nil || IsNil(o.GlobalsButtonsOk) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsOk
}

// GetGlobalsButtonsOkOk returns a tuple with the GlobalsButtonsOk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsOkOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsOk) {
		return nil, false
	}
	return o.GlobalsButtonsOk, true
}

// HasGlobalsButtonsOk returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsOk() bool {
	if o != nil && !IsNil(o.GlobalsButtonsOk) {
		return true
	}

	return false
}

// SetGlobalsButtonsOk gets a reference to the given string and assigns it to the GlobalsButtonsOk field.
func (o *LanguagePackData) SetGlobalsButtonsOk(v string) {
	o.GlobalsButtonsOk = &v
}

// GetGlobalsButtonsRemove returns the GlobalsButtonsRemove field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsRemove() string {
	if o == nil || IsNil(o.GlobalsButtonsRemove) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsRemove
}

// GetGlobalsButtonsRemoveOk returns a tuple with the GlobalsButtonsRemove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsRemoveOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsRemove) {
		return nil, false
	}
	return o.GlobalsButtonsRemove, true
}

// HasGlobalsButtonsRemove returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsRemove() bool {
	if o != nil && !IsNil(o.GlobalsButtonsRemove) {
		return true
	}

	return false
}

// SetGlobalsButtonsRemove gets a reference to the given string and assigns it to the GlobalsButtonsRemove field.
func (o *LanguagePackData) SetGlobalsButtonsRemove(v string) {
	o.GlobalsButtonsRemove = &v
}

// GetGlobalsButtonsSave returns the GlobalsButtonsSave field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsSave() string {
	if o == nil || IsNil(o.GlobalsButtonsSave) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsSave
}

// GetGlobalsButtonsSaveOk returns a tuple with the GlobalsButtonsSave field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsSaveOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsSave) {
		return nil, false
	}
	return o.GlobalsButtonsSave, true
}

// HasGlobalsButtonsSave returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsSave() bool {
	if o != nil && !IsNil(o.GlobalsButtonsSave) {
		return true
	}

	return false
}

// SetGlobalsButtonsSave gets a reference to the given string and assigns it to the GlobalsButtonsSave field.
func (o *LanguagePackData) SetGlobalsButtonsSave(v string) {
	o.GlobalsButtonsSave = &v
}

// GetGlobalsButtonsSaveChanges returns the GlobalsButtonsSaveChanges field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsButtonsSaveChanges() string {
	if o == nil || IsNil(o.GlobalsButtonsSaveChanges) {
		var ret string
		return ret
	}
	return *o.GlobalsButtonsSaveChanges
}

// GetGlobalsButtonsSaveChangesOk returns a tuple with the GlobalsButtonsSaveChanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsButtonsSaveChangesOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsButtonsSaveChanges) {
		return nil, false
	}
	return o.GlobalsButtonsSaveChanges, true
}

// HasGlobalsButtonsSaveChanges returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsButtonsSaveChanges() bool {
	if o != nil && !IsNil(o.GlobalsButtonsSaveChanges) {
		return true
	}

	return false
}

// SetGlobalsButtonsSaveChanges gets a reference to the given string and assigns it to the GlobalsButtonsSaveChanges field.
func (o *LanguagePackData) SetGlobalsButtonsSaveChanges(v string) {
	o.GlobalsButtonsSaveChanges = &v
}

// GetGlobalsDays0 returns the GlobalsDays0 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsDays0() string {
	if o == nil || IsNil(o.GlobalsDays0) {
		var ret string
		return ret
	}
	return *o.GlobalsDays0
}

// GetGlobalsDays0Ok returns a tuple with the GlobalsDays0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsDays0Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsDays0) {
		return nil, false
	}
	return o.GlobalsDays0, true
}

// HasGlobalsDays0 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsDays0() bool {
	if o != nil && !IsNil(o.GlobalsDays0) {
		return true
	}

	return false
}

// SetGlobalsDays0 gets a reference to the given string and assigns it to the GlobalsDays0 field.
func (o *LanguagePackData) SetGlobalsDays0(v string) {
	o.GlobalsDays0 = &v
}

// GetGlobalsDays1 returns the GlobalsDays1 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsDays1() string {
	if o == nil || IsNil(o.GlobalsDays1) {
		var ret string
		return ret
	}
	return *o.GlobalsDays1
}

// GetGlobalsDays1Ok returns a tuple with the GlobalsDays1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsDays1Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsDays1) {
		return nil, false
	}
	return o.GlobalsDays1, true
}

// HasGlobalsDays1 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsDays1() bool {
	if o != nil && !IsNil(o.GlobalsDays1) {
		return true
	}

	return false
}

// SetGlobalsDays1 gets a reference to the given string and assigns it to the GlobalsDays1 field.
func (o *LanguagePackData) SetGlobalsDays1(v string) {
	o.GlobalsDays1 = &v
}

// GetGlobalsDays2 returns the GlobalsDays2 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsDays2() string {
	if o == nil || IsNil(o.GlobalsDays2) {
		var ret string
		return ret
	}
	return *o.GlobalsDays2
}

// GetGlobalsDays2Ok returns a tuple with the GlobalsDays2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsDays2Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsDays2) {
		return nil, false
	}
	return o.GlobalsDays2, true
}

// HasGlobalsDays2 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsDays2() bool {
	if o != nil && !IsNil(o.GlobalsDays2) {
		return true
	}

	return false
}

// SetGlobalsDays2 gets a reference to the given string and assigns it to the GlobalsDays2 field.
func (o *LanguagePackData) SetGlobalsDays2(v string) {
	o.GlobalsDays2 = &v
}

// GetGlobalsDays3 returns the GlobalsDays3 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsDays3() string {
	if o == nil || IsNil(o.GlobalsDays3) {
		var ret string
		return ret
	}
	return *o.GlobalsDays3
}

// GetGlobalsDays3Ok returns a tuple with the GlobalsDays3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsDays3Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsDays3) {
		return nil, false
	}
	return o.GlobalsDays3, true
}

// HasGlobalsDays3 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsDays3() bool {
	if o != nil && !IsNil(o.GlobalsDays3) {
		return true
	}

	return false
}

// SetGlobalsDays3 gets a reference to the given string and assigns it to the GlobalsDays3 field.
func (o *LanguagePackData) SetGlobalsDays3(v string) {
	o.GlobalsDays3 = &v
}

// GetGlobalsDays4 returns the GlobalsDays4 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsDays4() string {
	if o == nil || IsNil(o.GlobalsDays4) {
		var ret string
		return ret
	}
	return *o.GlobalsDays4
}

// GetGlobalsDays4Ok returns a tuple with the GlobalsDays4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsDays4Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsDays4) {
		return nil, false
	}
	return o.GlobalsDays4, true
}

// HasGlobalsDays4 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsDays4() bool {
	if o != nil && !IsNil(o.GlobalsDays4) {
		return true
	}

	return false
}

// SetGlobalsDays4 gets a reference to the given string and assigns it to the GlobalsDays4 field.
func (o *LanguagePackData) SetGlobalsDays4(v string) {
	o.GlobalsDays4 = &v
}

// GetGlobalsDays5 returns the GlobalsDays5 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsDays5() string {
	if o == nil || IsNil(o.GlobalsDays5) {
		var ret string
		return ret
	}
	return *o.GlobalsDays5
}

// GetGlobalsDays5Ok returns a tuple with the GlobalsDays5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsDays5Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsDays5) {
		return nil, false
	}
	return o.GlobalsDays5, true
}

// HasGlobalsDays5 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsDays5() bool {
	if o != nil && !IsNil(o.GlobalsDays5) {
		return true
	}

	return false
}

// SetGlobalsDays5 gets a reference to the given string and assigns it to the GlobalsDays5 field.
func (o *LanguagePackData) SetGlobalsDays5(v string) {
	o.GlobalsDays5 = &v
}

// GetGlobalsDays6 returns the GlobalsDays6 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsDays6() string {
	if o == nil || IsNil(o.GlobalsDays6) {
		var ret string
		return ret
	}
	return *o.GlobalsDays6
}

// GetGlobalsDays6Ok returns a tuple with the GlobalsDays6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsDays6Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsDays6) {
		return nil, false
	}
	return o.GlobalsDays6, true
}

// HasGlobalsDays6 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsDays6() bool {
	if o != nil && !IsNil(o.GlobalsDays6) {
		return true
	}

	return false
}

// SetGlobalsDays6 gets a reference to the given string and assigns it to the GlobalsDays6 field.
func (o *LanguagePackData) SetGlobalsDays6(v string) {
	o.GlobalsDays6 = &v
}

// GetGlobalsDays7 returns the GlobalsDays7 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsDays7() string {
	if o == nil || IsNil(o.GlobalsDays7) {
		var ret string
		return ret
	}
	return *o.GlobalsDays7
}

// GetGlobalsDays7Ok returns a tuple with the GlobalsDays7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsDays7Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsDays7) {
		return nil, false
	}
	return o.GlobalsDays7, true
}

// HasGlobalsDays7 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsDays7() bool {
	if o != nil && !IsNil(o.GlobalsDays7) {
		return true
	}

	return false
}

// SetGlobalsDays7 gets a reference to the given string and assigns it to the GlobalsDays7 field.
func (o *LanguagePackData) SetGlobalsDays7(v string) {
	o.GlobalsDays7 = &v
}

// GetGlobalsFieldsCreatedAt returns the GlobalsFieldsCreatedAt field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsFieldsCreatedAt() string {
	if o == nil || IsNil(o.GlobalsFieldsCreatedAt) {
		var ret string
		return ret
	}
	return *o.GlobalsFieldsCreatedAt
}

// GetGlobalsFieldsCreatedAtOk returns a tuple with the GlobalsFieldsCreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsFieldsCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsFieldsCreatedAt) {
		return nil, false
	}
	return o.GlobalsFieldsCreatedAt, true
}

// HasGlobalsFieldsCreatedAt returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsFieldsCreatedAt() bool {
	if o != nil && !IsNil(o.GlobalsFieldsCreatedAt) {
		return true
	}

	return false
}

// SetGlobalsFieldsCreatedAt gets a reference to the given string and assigns it to the GlobalsFieldsCreatedAt field.
func (o *LanguagePackData) SetGlobalsFieldsCreatedAt(v string) {
	o.GlobalsFieldsCreatedAt = &v
}

// GetGlobalsFieldsDescription returns the GlobalsFieldsDescription field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsFieldsDescription() string {
	if o == nil || IsNil(o.GlobalsFieldsDescription) {
		var ret string
		return ret
	}
	return *o.GlobalsFieldsDescription
}

// GetGlobalsFieldsDescriptionOk returns a tuple with the GlobalsFieldsDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsFieldsDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsFieldsDescription) {
		return nil, false
	}
	return o.GlobalsFieldsDescription, true
}

// HasGlobalsFieldsDescription returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsFieldsDescription() bool {
	if o != nil && !IsNil(o.GlobalsFieldsDescription) {
		return true
	}

	return false
}

// SetGlobalsFieldsDescription gets a reference to the given string and assigns it to the GlobalsFieldsDescription field.
func (o *LanguagePackData) SetGlobalsFieldsDescription(v string) {
	o.GlobalsFieldsDescription = &v
}

// GetGlobalsFieldsId returns the GlobalsFieldsId field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsFieldsId() string {
	if o == nil || IsNil(o.GlobalsFieldsId) {
		var ret string
		return ret
	}
	return *o.GlobalsFieldsId
}

// GetGlobalsFieldsIdOk returns a tuple with the GlobalsFieldsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsFieldsIdOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsFieldsId) {
		return nil, false
	}
	return o.GlobalsFieldsId, true
}

// HasGlobalsFieldsId returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsFieldsId() bool {
	if o != nil && !IsNil(o.GlobalsFieldsId) {
		return true
	}

	return false
}

// SetGlobalsFieldsId gets a reference to the given string and assigns it to the GlobalsFieldsId field.
func (o *LanguagePackData) SetGlobalsFieldsId(v string) {
	o.GlobalsFieldsId = &v
}

// GetGlobalsFieldsName returns the GlobalsFieldsName field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsFieldsName() string {
	if o == nil || IsNil(o.GlobalsFieldsName) {
		var ret string
		return ret
	}
	return *o.GlobalsFieldsName
}

// GetGlobalsFieldsNameOk returns a tuple with the GlobalsFieldsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsFieldsNameOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsFieldsName) {
		return nil, false
	}
	return o.GlobalsFieldsName, true
}

// HasGlobalsFieldsName returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsFieldsName() bool {
	if o != nil && !IsNil(o.GlobalsFieldsName) {
		return true
	}

	return false
}

// SetGlobalsFieldsName gets a reference to the given string and assigns it to the GlobalsFieldsName field.
func (o *LanguagePackData) SetGlobalsFieldsName(v string) {
	o.GlobalsFieldsName = &v
}

// GetGlobalsFieldsStatus returns the GlobalsFieldsStatus field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsFieldsStatus() string {
	if o == nil || IsNil(o.GlobalsFieldsStatus) {
		var ret string
		return ret
	}
	return *o.GlobalsFieldsStatus
}

// GetGlobalsFieldsStatusOk returns a tuple with the GlobalsFieldsStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsFieldsStatusOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsFieldsStatus) {
		return nil, false
	}
	return o.GlobalsFieldsStatus, true
}

// HasGlobalsFieldsStatus returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsFieldsStatus() bool {
	if o != nil && !IsNil(o.GlobalsFieldsStatus) {
		return true
	}

	return false
}

// SetGlobalsFieldsStatus gets a reference to the given string and assigns it to the GlobalsFieldsStatus field.
func (o *LanguagePackData) SetGlobalsFieldsStatus(v string) {
	o.GlobalsFieldsStatus = &v
}

// GetGlobalsFieldsType returns the GlobalsFieldsType field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsFieldsType() string {
	if o == nil || IsNil(o.GlobalsFieldsType) {
		var ret string
		return ret
	}
	return *o.GlobalsFieldsType
}

// GetGlobalsFieldsTypeOk returns a tuple with the GlobalsFieldsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsFieldsTypeOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsFieldsType) {
		return nil, false
	}
	return o.GlobalsFieldsType, true
}

// HasGlobalsFieldsType returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsFieldsType() bool {
	if o != nil && !IsNil(o.GlobalsFieldsType) {
		return true
	}

	return false
}

// SetGlobalsFieldsType gets a reference to the given string and assigns it to the GlobalsFieldsType field.
func (o *LanguagePackData) SetGlobalsFieldsType(v string) {
	o.GlobalsFieldsType = &v
}

// GetGlobalsFieldsUpdatedAt returns the GlobalsFieldsUpdatedAt field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsFieldsUpdatedAt() string {
	if o == nil || IsNil(o.GlobalsFieldsUpdatedAt) {
		var ret string
		return ret
	}
	return *o.GlobalsFieldsUpdatedAt
}

// GetGlobalsFieldsUpdatedAtOk returns a tuple with the GlobalsFieldsUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsFieldsUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsFieldsUpdatedAt) {
		return nil, false
	}
	return o.GlobalsFieldsUpdatedAt, true
}

// HasGlobalsFieldsUpdatedAt returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsFieldsUpdatedAt() bool {
	if o != nil && !IsNil(o.GlobalsFieldsUpdatedAt) {
		return true
	}

	return false
}

// SetGlobalsFieldsUpdatedAt gets a reference to the given string and assigns it to the GlobalsFieldsUpdatedAt field.
func (o *LanguagePackData) SetGlobalsFieldsUpdatedAt(v string) {
	o.GlobalsFieldsUpdatedAt = &v
}

// GetGlobalsFieldsUuid returns the GlobalsFieldsUuid field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsFieldsUuid() string {
	if o == nil || IsNil(o.GlobalsFieldsUuid) {
		var ret string
		return ret
	}
	return *o.GlobalsFieldsUuid
}

// GetGlobalsFieldsUuidOk returns a tuple with the GlobalsFieldsUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsFieldsUuidOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsFieldsUuid) {
		return nil, false
	}
	return o.GlobalsFieldsUuid, true
}

// HasGlobalsFieldsUuid returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsFieldsUuid() bool {
	if o != nil && !IsNil(o.GlobalsFieldsUuid) {
		return true
	}

	return false
}

// SetGlobalsFieldsUuid gets a reference to the given string and assigns it to the GlobalsFieldsUuid field.
func (o *LanguagePackData) SetGlobalsFieldsUuid(v string) {
	o.GlobalsFieldsUuid = &v
}

// GetGlobalsMessagesConfirm returns the GlobalsMessagesConfirm field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesConfirm() string {
	if o == nil || IsNil(o.GlobalsMessagesConfirm) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesConfirm
}

// GetGlobalsMessagesConfirmOk returns a tuple with the GlobalsMessagesConfirm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesConfirmOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesConfirm) {
		return nil, false
	}
	return o.GlobalsMessagesConfirm, true
}

// HasGlobalsMessagesConfirm returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesConfirm() bool {
	if o != nil && !IsNil(o.GlobalsMessagesConfirm) {
		return true
	}

	return false
}

// SetGlobalsMessagesConfirm gets a reference to the given string and assigns it to the GlobalsMessagesConfirm field.
func (o *LanguagePackData) SetGlobalsMessagesConfirm(v string) {
	o.GlobalsMessagesConfirm = &v
}

// GetGlobalsMessagesConfirmDiscard returns the GlobalsMessagesConfirmDiscard field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesConfirmDiscard() string {
	if o == nil || IsNil(o.GlobalsMessagesConfirmDiscard) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesConfirmDiscard
}

// GetGlobalsMessagesConfirmDiscardOk returns a tuple with the GlobalsMessagesConfirmDiscard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesConfirmDiscardOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesConfirmDiscard) {
		return nil, false
	}
	return o.GlobalsMessagesConfirmDiscard, true
}

// HasGlobalsMessagesConfirmDiscard returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesConfirmDiscard() bool {
	if o != nil && !IsNil(o.GlobalsMessagesConfirmDiscard) {
		return true
	}

	return false
}

// SetGlobalsMessagesConfirmDiscard gets a reference to the given string and assigns it to the GlobalsMessagesConfirmDiscard field.
func (o *LanguagePackData) SetGlobalsMessagesConfirmDiscard(v string) {
	o.GlobalsMessagesConfirmDiscard = &v
}

// GetGlobalsMessagesCreated returns the GlobalsMessagesCreated field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesCreated() string {
	if o == nil || IsNil(o.GlobalsMessagesCreated) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesCreated
}

// GetGlobalsMessagesCreatedOk returns a tuple with the GlobalsMessagesCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesCreated) {
		return nil, false
	}
	return o.GlobalsMessagesCreated, true
}

// HasGlobalsMessagesCreated returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesCreated() bool {
	if o != nil && !IsNil(o.GlobalsMessagesCreated) {
		return true
	}

	return false
}

// SetGlobalsMessagesCreated gets a reference to the given string and assigns it to the GlobalsMessagesCreated field.
func (o *LanguagePackData) SetGlobalsMessagesCreated(v string) {
	o.GlobalsMessagesCreated = &v
}

// GetGlobalsMessagesDeleted returns the GlobalsMessagesDeleted field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesDeleted() string {
	if o == nil || IsNil(o.GlobalsMessagesDeleted) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesDeleted
}

// GetGlobalsMessagesDeletedOk returns a tuple with the GlobalsMessagesDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesDeletedOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesDeleted) {
		return nil, false
	}
	return o.GlobalsMessagesDeleted, true
}

// HasGlobalsMessagesDeleted returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesDeleted() bool {
	if o != nil && !IsNil(o.GlobalsMessagesDeleted) {
		return true
	}

	return false
}

// SetGlobalsMessagesDeleted gets a reference to the given string and assigns it to the GlobalsMessagesDeleted field.
func (o *LanguagePackData) SetGlobalsMessagesDeleted(v string) {
	o.GlobalsMessagesDeleted = &v
}

// GetGlobalsMessagesDeletedCount returns the GlobalsMessagesDeletedCount field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesDeletedCount() string {
	if o == nil || IsNil(o.GlobalsMessagesDeletedCount) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesDeletedCount
}

// GetGlobalsMessagesDeletedCountOk returns a tuple with the GlobalsMessagesDeletedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesDeletedCountOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesDeletedCount) {
		return nil, false
	}
	return o.GlobalsMessagesDeletedCount, true
}

// HasGlobalsMessagesDeletedCount returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesDeletedCount() bool {
	if o != nil && !IsNil(o.GlobalsMessagesDeletedCount) {
		return true
	}

	return false
}

// SetGlobalsMessagesDeletedCount gets a reference to the given string and assigns it to the GlobalsMessagesDeletedCount field.
func (o *LanguagePackData) SetGlobalsMessagesDeletedCount(v string) {
	o.GlobalsMessagesDeletedCount = &v
}

// GetGlobalsMessagesDone returns the GlobalsMessagesDone field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesDone() string {
	if o == nil || IsNil(o.GlobalsMessagesDone) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesDone
}

// GetGlobalsMessagesDoneOk returns a tuple with the GlobalsMessagesDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesDoneOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesDone) {
		return nil, false
	}
	return o.GlobalsMessagesDone, true
}

// HasGlobalsMessagesDone returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesDone() bool {
	if o != nil && !IsNil(o.GlobalsMessagesDone) {
		return true
	}

	return false
}

// SetGlobalsMessagesDone gets a reference to the given string and assigns it to the GlobalsMessagesDone field.
func (o *LanguagePackData) SetGlobalsMessagesDone(v string) {
	o.GlobalsMessagesDone = &v
}

// GetGlobalsMessagesEmptyState returns the GlobalsMessagesEmptyState field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesEmptyState() string {
	if o == nil || IsNil(o.GlobalsMessagesEmptyState) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesEmptyState
}

// GetGlobalsMessagesEmptyStateOk returns a tuple with the GlobalsMessagesEmptyState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesEmptyStateOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesEmptyState) {
		return nil, false
	}
	return o.GlobalsMessagesEmptyState, true
}

// HasGlobalsMessagesEmptyState returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesEmptyState() bool {
	if o != nil && !IsNil(o.GlobalsMessagesEmptyState) {
		return true
	}

	return false
}

// SetGlobalsMessagesEmptyState gets a reference to the given string and assigns it to the GlobalsMessagesEmptyState field.
func (o *LanguagePackData) SetGlobalsMessagesEmptyState(v string) {
	o.GlobalsMessagesEmptyState = &v
}

// GetGlobalsMessagesErrorCreating returns the GlobalsMessagesErrorCreating field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesErrorCreating() string {
	if o == nil || IsNil(o.GlobalsMessagesErrorCreating) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesErrorCreating
}

// GetGlobalsMessagesErrorCreatingOk returns a tuple with the GlobalsMessagesErrorCreating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesErrorCreatingOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesErrorCreating) {
		return nil, false
	}
	return o.GlobalsMessagesErrorCreating, true
}

// HasGlobalsMessagesErrorCreating returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesErrorCreating() bool {
	if o != nil && !IsNil(o.GlobalsMessagesErrorCreating) {
		return true
	}

	return false
}

// SetGlobalsMessagesErrorCreating gets a reference to the given string and assigns it to the GlobalsMessagesErrorCreating field.
func (o *LanguagePackData) SetGlobalsMessagesErrorCreating(v string) {
	o.GlobalsMessagesErrorCreating = &v
}

// GetGlobalsMessagesErrorDeleting returns the GlobalsMessagesErrorDeleting field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesErrorDeleting() string {
	if o == nil || IsNil(o.GlobalsMessagesErrorDeleting) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesErrorDeleting
}

// GetGlobalsMessagesErrorDeletingOk returns a tuple with the GlobalsMessagesErrorDeleting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesErrorDeletingOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesErrorDeleting) {
		return nil, false
	}
	return o.GlobalsMessagesErrorDeleting, true
}

// HasGlobalsMessagesErrorDeleting returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesErrorDeleting() bool {
	if o != nil && !IsNil(o.GlobalsMessagesErrorDeleting) {
		return true
	}

	return false
}

// SetGlobalsMessagesErrorDeleting gets a reference to the given string and assigns it to the GlobalsMessagesErrorDeleting field.
func (o *LanguagePackData) SetGlobalsMessagesErrorDeleting(v string) {
	o.GlobalsMessagesErrorDeleting = &v
}

// GetGlobalsMessagesErrorFetching returns the GlobalsMessagesErrorFetching field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesErrorFetching() string {
	if o == nil || IsNil(o.GlobalsMessagesErrorFetching) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesErrorFetching
}

// GetGlobalsMessagesErrorFetchingOk returns a tuple with the GlobalsMessagesErrorFetching field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesErrorFetchingOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesErrorFetching) {
		return nil, false
	}
	return o.GlobalsMessagesErrorFetching, true
}

// HasGlobalsMessagesErrorFetching returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesErrorFetching() bool {
	if o != nil && !IsNil(o.GlobalsMessagesErrorFetching) {
		return true
	}

	return false
}

// SetGlobalsMessagesErrorFetching gets a reference to the given string and assigns it to the GlobalsMessagesErrorFetching field.
func (o *LanguagePackData) SetGlobalsMessagesErrorFetching(v string) {
	o.GlobalsMessagesErrorFetching = &v
}

// GetGlobalsMessagesErrorInvalidIDs returns the GlobalsMessagesErrorInvalidIDs field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesErrorInvalidIDs() string {
	if o == nil || IsNil(o.GlobalsMessagesErrorInvalidIDs) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesErrorInvalidIDs
}

// GetGlobalsMessagesErrorInvalidIDsOk returns a tuple with the GlobalsMessagesErrorInvalidIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesErrorInvalidIDsOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesErrorInvalidIDs) {
		return nil, false
	}
	return o.GlobalsMessagesErrorInvalidIDs, true
}

// HasGlobalsMessagesErrorInvalidIDs returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesErrorInvalidIDs() bool {
	if o != nil && !IsNil(o.GlobalsMessagesErrorInvalidIDs) {
		return true
	}

	return false
}

// SetGlobalsMessagesErrorInvalidIDs gets a reference to the given string and assigns it to the GlobalsMessagesErrorInvalidIDs field.
func (o *LanguagePackData) SetGlobalsMessagesErrorInvalidIDs(v string) {
	o.GlobalsMessagesErrorInvalidIDs = &v
}

// GetGlobalsMessagesErrorUUID returns the GlobalsMessagesErrorUUID field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesErrorUUID() string {
	if o == nil || IsNil(o.GlobalsMessagesErrorUUID) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesErrorUUID
}

// GetGlobalsMessagesErrorUUIDOk returns a tuple with the GlobalsMessagesErrorUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesErrorUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesErrorUUID) {
		return nil, false
	}
	return o.GlobalsMessagesErrorUUID, true
}

// HasGlobalsMessagesErrorUUID returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesErrorUUID() bool {
	if o != nil && !IsNil(o.GlobalsMessagesErrorUUID) {
		return true
	}

	return false
}

// SetGlobalsMessagesErrorUUID gets a reference to the given string and assigns it to the GlobalsMessagesErrorUUID field.
func (o *LanguagePackData) SetGlobalsMessagesErrorUUID(v string) {
	o.GlobalsMessagesErrorUUID = &v
}

// GetGlobalsMessagesErrorUpdating returns the GlobalsMessagesErrorUpdating field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesErrorUpdating() string {
	if o == nil || IsNil(o.GlobalsMessagesErrorUpdating) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesErrorUpdating
}

// GetGlobalsMessagesErrorUpdatingOk returns a tuple with the GlobalsMessagesErrorUpdating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesErrorUpdatingOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesErrorUpdating) {
		return nil, false
	}
	return o.GlobalsMessagesErrorUpdating, true
}

// HasGlobalsMessagesErrorUpdating returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesErrorUpdating() bool {
	if o != nil && !IsNil(o.GlobalsMessagesErrorUpdating) {
		return true
	}

	return false
}

// SetGlobalsMessagesErrorUpdating gets a reference to the given string and assigns it to the GlobalsMessagesErrorUpdating field.
func (o *LanguagePackData) SetGlobalsMessagesErrorUpdating(v string) {
	o.GlobalsMessagesErrorUpdating = &v
}

// GetGlobalsMessagesInternalError returns the GlobalsMessagesInternalError field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesInternalError() string {
	if o == nil || IsNil(o.GlobalsMessagesInternalError) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesInternalError
}

// GetGlobalsMessagesInternalErrorOk returns a tuple with the GlobalsMessagesInternalError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesInternalErrorOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesInternalError) {
		return nil, false
	}
	return o.GlobalsMessagesInternalError, true
}

// HasGlobalsMessagesInternalError returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesInternalError() bool {
	if o != nil && !IsNil(o.GlobalsMessagesInternalError) {
		return true
	}

	return false
}

// SetGlobalsMessagesInternalError gets a reference to the given string and assigns it to the GlobalsMessagesInternalError field.
func (o *LanguagePackData) SetGlobalsMessagesInternalError(v string) {
	o.GlobalsMessagesInternalError = &v
}

// GetGlobalsMessagesInvalidData returns the GlobalsMessagesInvalidData field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesInvalidData() string {
	if o == nil || IsNil(o.GlobalsMessagesInvalidData) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesInvalidData
}

// GetGlobalsMessagesInvalidDataOk returns a tuple with the GlobalsMessagesInvalidData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesInvalidDataOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesInvalidData) {
		return nil, false
	}
	return o.GlobalsMessagesInvalidData, true
}

// HasGlobalsMessagesInvalidData returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesInvalidData() bool {
	if o != nil && !IsNil(o.GlobalsMessagesInvalidData) {
		return true
	}

	return false
}

// SetGlobalsMessagesInvalidData gets a reference to the given string and assigns it to the GlobalsMessagesInvalidData field.
func (o *LanguagePackData) SetGlobalsMessagesInvalidData(v string) {
	o.GlobalsMessagesInvalidData = &v
}

// GetGlobalsMessagesInvalidID returns the GlobalsMessagesInvalidID field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesInvalidID() string {
	if o == nil || IsNil(o.GlobalsMessagesInvalidID) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesInvalidID
}

// GetGlobalsMessagesInvalidIDOk returns a tuple with the GlobalsMessagesInvalidID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesInvalidIDOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesInvalidID) {
		return nil, false
	}
	return o.GlobalsMessagesInvalidID, true
}

// HasGlobalsMessagesInvalidID returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesInvalidID() bool {
	if o != nil && !IsNil(o.GlobalsMessagesInvalidID) {
		return true
	}

	return false
}

// SetGlobalsMessagesInvalidID gets a reference to the given string and assigns it to the GlobalsMessagesInvalidID field.
func (o *LanguagePackData) SetGlobalsMessagesInvalidID(v string) {
	o.GlobalsMessagesInvalidID = &v
}

// GetGlobalsMessagesInvalidUUID returns the GlobalsMessagesInvalidUUID field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesInvalidUUID() string {
	if o == nil || IsNil(o.GlobalsMessagesInvalidUUID) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesInvalidUUID
}

// GetGlobalsMessagesInvalidUUIDOk returns a tuple with the GlobalsMessagesInvalidUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesInvalidUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesInvalidUUID) {
		return nil, false
	}
	return o.GlobalsMessagesInvalidUUID, true
}

// HasGlobalsMessagesInvalidUUID returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesInvalidUUID() bool {
	if o != nil && !IsNil(o.GlobalsMessagesInvalidUUID) {
		return true
	}

	return false
}

// SetGlobalsMessagesInvalidUUID gets a reference to the given string and assigns it to the GlobalsMessagesInvalidUUID field.
func (o *LanguagePackData) SetGlobalsMessagesInvalidUUID(v string) {
	o.GlobalsMessagesInvalidUUID = &v
}

// GetGlobalsMessagesMissingFields returns the GlobalsMessagesMissingFields field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesMissingFields() string {
	if o == nil || IsNil(o.GlobalsMessagesMissingFields) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesMissingFields
}

// GetGlobalsMessagesMissingFieldsOk returns a tuple with the GlobalsMessagesMissingFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesMissingFieldsOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesMissingFields) {
		return nil, false
	}
	return o.GlobalsMessagesMissingFields, true
}

// HasGlobalsMessagesMissingFields returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesMissingFields() bool {
	if o != nil && !IsNil(o.GlobalsMessagesMissingFields) {
		return true
	}

	return false
}

// SetGlobalsMessagesMissingFields gets a reference to the given string and assigns it to the GlobalsMessagesMissingFields field.
func (o *LanguagePackData) SetGlobalsMessagesMissingFields(v string) {
	o.GlobalsMessagesMissingFields = &v
}

// GetGlobalsMessagesNotFound returns the GlobalsMessagesNotFound field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesNotFound() string {
	if o == nil || IsNil(o.GlobalsMessagesNotFound) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesNotFound
}

// GetGlobalsMessagesNotFoundOk returns a tuple with the GlobalsMessagesNotFound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesNotFoundOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesNotFound) {
		return nil, false
	}
	return o.GlobalsMessagesNotFound, true
}

// HasGlobalsMessagesNotFound returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesNotFound() bool {
	if o != nil && !IsNil(o.GlobalsMessagesNotFound) {
		return true
	}

	return false
}

// SetGlobalsMessagesNotFound gets a reference to the given string and assigns it to the GlobalsMessagesNotFound field.
func (o *LanguagePackData) SetGlobalsMessagesNotFound(v string) {
	o.GlobalsMessagesNotFound = &v
}

// GetGlobalsMessagesPasswordChange returns the GlobalsMessagesPasswordChange field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesPasswordChange() string {
	if o == nil || IsNil(o.GlobalsMessagesPasswordChange) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesPasswordChange
}

// GetGlobalsMessagesPasswordChangeOk returns a tuple with the GlobalsMessagesPasswordChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesPasswordChangeOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesPasswordChange) {
		return nil, false
	}
	return o.GlobalsMessagesPasswordChange, true
}

// HasGlobalsMessagesPasswordChange returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesPasswordChange() bool {
	if o != nil && !IsNil(o.GlobalsMessagesPasswordChange) {
		return true
	}

	return false
}

// SetGlobalsMessagesPasswordChange gets a reference to the given string and assigns it to the GlobalsMessagesPasswordChange field.
func (o *LanguagePackData) SetGlobalsMessagesPasswordChange(v string) {
	o.GlobalsMessagesPasswordChange = &v
}

// GetGlobalsMessagesUpdated returns the GlobalsMessagesUpdated field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMessagesUpdated() string {
	if o == nil || IsNil(o.GlobalsMessagesUpdated) {
		var ret string
		return ret
	}
	return *o.GlobalsMessagesUpdated
}

// GetGlobalsMessagesUpdatedOk returns a tuple with the GlobalsMessagesUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMessagesUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMessagesUpdated) {
		return nil, false
	}
	return o.GlobalsMessagesUpdated, true
}

// HasGlobalsMessagesUpdated returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMessagesUpdated() bool {
	if o != nil && !IsNil(o.GlobalsMessagesUpdated) {
		return true
	}

	return false
}

// SetGlobalsMessagesUpdated gets a reference to the given string and assigns it to the GlobalsMessagesUpdated field.
func (o *LanguagePackData) SetGlobalsMessagesUpdated(v string) {
	o.GlobalsMessagesUpdated = &v
}

// GetGlobalsMonths1 returns the GlobalsMonths1 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMonths1() string {
	if o == nil || IsNil(o.GlobalsMonths1) {
		var ret string
		return ret
	}
	return *o.GlobalsMonths1
}

// GetGlobalsMonths1Ok returns a tuple with the GlobalsMonths1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMonths1Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMonths1) {
		return nil, false
	}
	return o.GlobalsMonths1, true
}

// HasGlobalsMonths1 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMonths1() bool {
	if o != nil && !IsNil(o.GlobalsMonths1) {
		return true
	}

	return false
}

// SetGlobalsMonths1 gets a reference to the given string and assigns it to the GlobalsMonths1 field.
func (o *LanguagePackData) SetGlobalsMonths1(v string) {
	o.GlobalsMonths1 = &v
}

// GetGlobalsMonths10 returns the GlobalsMonths10 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMonths10() string {
	if o == nil || IsNil(o.GlobalsMonths10) {
		var ret string
		return ret
	}
	return *o.GlobalsMonths10
}

// GetGlobalsMonths10Ok returns a tuple with the GlobalsMonths10 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMonths10Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMonths10) {
		return nil, false
	}
	return o.GlobalsMonths10, true
}

// HasGlobalsMonths10 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMonths10() bool {
	if o != nil && !IsNil(o.GlobalsMonths10) {
		return true
	}

	return false
}

// SetGlobalsMonths10 gets a reference to the given string and assigns it to the GlobalsMonths10 field.
func (o *LanguagePackData) SetGlobalsMonths10(v string) {
	o.GlobalsMonths10 = &v
}

// GetGlobalsMonths11 returns the GlobalsMonths11 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMonths11() string {
	if o == nil || IsNil(o.GlobalsMonths11) {
		var ret string
		return ret
	}
	return *o.GlobalsMonths11
}

// GetGlobalsMonths11Ok returns a tuple with the GlobalsMonths11 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMonths11Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMonths11) {
		return nil, false
	}
	return o.GlobalsMonths11, true
}

// HasGlobalsMonths11 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMonths11() bool {
	if o != nil && !IsNil(o.GlobalsMonths11) {
		return true
	}

	return false
}

// SetGlobalsMonths11 gets a reference to the given string and assigns it to the GlobalsMonths11 field.
func (o *LanguagePackData) SetGlobalsMonths11(v string) {
	o.GlobalsMonths11 = &v
}

// GetGlobalsMonths12 returns the GlobalsMonths12 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMonths12() string {
	if o == nil || IsNil(o.GlobalsMonths12) {
		var ret string
		return ret
	}
	return *o.GlobalsMonths12
}

// GetGlobalsMonths12Ok returns a tuple with the GlobalsMonths12 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMonths12Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMonths12) {
		return nil, false
	}
	return o.GlobalsMonths12, true
}

// HasGlobalsMonths12 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMonths12() bool {
	if o != nil && !IsNil(o.GlobalsMonths12) {
		return true
	}

	return false
}

// SetGlobalsMonths12 gets a reference to the given string and assigns it to the GlobalsMonths12 field.
func (o *LanguagePackData) SetGlobalsMonths12(v string) {
	o.GlobalsMonths12 = &v
}

// GetGlobalsMonths2 returns the GlobalsMonths2 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMonths2() string {
	if o == nil || IsNil(o.GlobalsMonths2) {
		var ret string
		return ret
	}
	return *o.GlobalsMonths2
}

// GetGlobalsMonths2Ok returns a tuple with the GlobalsMonths2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMonths2Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMonths2) {
		return nil, false
	}
	return o.GlobalsMonths2, true
}

// HasGlobalsMonths2 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMonths2() bool {
	if o != nil && !IsNil(o.GlobalsMonths2) {
		return true
	}

	return false
}

// SetGlobalsMonths2 gets a reference to the given string and assigns it to the GlobalsMonths2 field.
func (o *LanguagePackData) SetGlobalsMonths2(v string) {
	o.GlobalsMonths2 = &v
}

// GetGlobalsMonths3 returns the GlobalsMonths3 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMonths3() string {
	if o == nil || IsNil(o.GlobalsMonths3) {
		var ret string
		return ret
	}
	return *o.GlobalsMonths3
}

// GetGlobalsMonths3Ok returns a tuple with the GlobalsMonths3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMonths3Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMonths3) {
		return nil, false
	}
	return o.GlobalsMonths3, true
}

// HasGlobalsMonths3 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMonths3() bool {
	if o != nil && !IsNil(o.GlobalsMonths3) {
		return true
	}

	return false
}

// SetGlobalsMonths3 gets a reference to the given string and assigns it to the GlobalsMonths3 field.
func (o *LanguagePackData) SetGlobalsMonths3(v string) {
	o.GlobalsMonths3 = &v
}

// GetGlobalsMonths4 returns the GlobalsMonths4 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMonths4() string {
	if o == nil || IsNil(o.GlobalsMonths4) {
		var ret string
		return ret
	}
	return *o.GlobalsMonths4
}

// GetGlobalsMonths4Ok returns a tuple with the GlobalsMonths4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMonths4Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMonths4) {
		return nil, false
	}
	return o.GlobalsMonths4, true
}

// HasGlobalsMonths4 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMonths4() bool {
	if o != nil && !IsNil(o.GlobalsMonths4) {
		return true
	}

	return false
}

// SetGlobalsMonths4 gets a reference to the given string and assigns it to the GlobalsMonths4 field.
func (o *LanguagePackData) SetGlobalsMonths4(v string) {
	o.GlobalsMonths4 = &v
}

// GetGlobalsMonths5 returns the GlobalsMonths5 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMonths5() string {
	if o == nil || IsNil(o.GlobalsMonths5) {
		var ret string
		return ret
	}
	return *o.GlobalsMonths5
}

// GetGlobalsMonths5Ok returns a tuple with the GlobalsMonths5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMonths5Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMonths5) {
		return nil, false
	}
	return o.GlobalsMonths5, true
}

// HasGlobalsMonths5 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMonths5() bool {
	if o != nil && !IsNil(o.GlobalsMonths5) {
		return true
	}

	return false
}

// SetGlobalsMonths5 gets a reference to the given string and assigns it to the GlobalsMonths5 field.
func (o *LanguagePackData) SetGlobalsMonths5(v string) {
	o.GlobalsMonths5 = &v
}

// GetGlobalsMonths6 returns the GlobalsMonths6 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMonths6() string {
	if o == nil || IsNil(o.GlobalsMonths6) {
		var ret string
		return ret
	}
	return *o.GlobalsMonths6
}

// GetGlobalsMonths6Ok returns a tuple with the GlobalsMonths6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMonths6Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMonths6) {
		return nil, false
	}
	return o.GlobalsMonths6, true
}

// HasGlobalsMonths6 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMonths6() bool {
	if o != nil && !IsNil(o.GlobalsMonths6) {
		return true
	}

	return false
}

// SetGlobalsMonths6 gets a reference to the given string and assigns it to the GlobalsMonths6 field.
func (o *LanguagePackData) SetGlobalsMonths6(v string) {
	o.GlobalsMonths6 = &v
}

// GetGlobalsMonths7 returns the GlobalsMonths7 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMonths7() string {
	if o == nil || IsNil(o.GlobalsMonths7) {
		var ret string
		return ret
	}
	return *o.GlobalsMonths7
}

// GetGlobalsMonths7Ok returns a tuple with the GlobalsMonths7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMonths7Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMonths7) {
		return nil, false
	}
	return o.GlobalsMonths7, true
}

// HasGlobalsMonths7 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMonths7() bool {
	if o != nil && !IsNil(o.GlobalsMonths7) {
		return true
	}

	return false
}

// SetGlobalsMonths7 gets a reference to the given string and assigns it to the GlobalsMonths7 field.
func (o *LanguagePackData) SetGlobalsMonths7(v string) {
	o.GlobalsMonths7 = &v
}

// GetGlobalsMonths8 returns the GlobalsMonths8 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMonths8() string {
	if o == nil || IsNil(o.GlobalsMonths8) {
		var ret string
		return ret
	}
	return *o.GlobalsMonths8
}

// GetGlobalsMonths8Ok returns a tuple with the GlobalsMonths8 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMonths8Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMonths8) {
		return nil, false
	}
	return o.GlobalsMonths8, true
}

// HasGlobalsMonths8 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMonths8() bool {
	if o != nil && !IsNil(o.GlobalsMonths8) {
		return true
	}

	return false
}

// SetGlobalsMonths8 gets a reference to the given string and assigns it to the GlobalsMonths8 field.
func (o *LanguagePackData) SetGlobalsMonths8(v string) {
	o.GlobalsMonths8 = &v
}

// GetGlobalsMonths9 returns the GlobalsMonths9 field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsMonths9() string {
	if o == nil || IsNil(o.GlobalsMonths9) {
		var ret string
		return ret
	}
	return *o.GlobalsMonths9
}

// GetGlobalsMonths9Ok returns a tuple with the GlobalsMonths9 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsMonths9Ok() (*string, bool) {
	if o == nil || IsNil(o.GlobalsMonths9) {
		return nil, false
	}
	return o.GlobalsMonths9, true
}

// HasGlobalsMonths9 returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsMonths9() bool {
	if o != nil && !IsNil(o.GlobalsMonths9) {
		return true
	}

	return false
}

// SetGlobalsMonths9 gets a reference to the given string and assigns it to the GlobalsMonths9 field.
func (o *LanguagePackData) SetGlobalsMonths9(v string) {
	o.GlobalsMonths9 = &v
}

// GetGlobalsStatesOff returns the GlobalsStatesOff field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsStatesOff() string {
	if o == nil || IsNil(o.GlobalsStatesOff) {
		var ret string
		return ret
	}
	return *o.GlobalsStatesOff
}

// GetGlobalsStatesOffOk returns a tuple with the GlobalsStatesOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsStatesOffOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsStatesOff) {
		return nil, false
	}
	return o.GlobalsStatesOff, true
}

// HasGlobalsStatesOff returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsStatesOff() bool {
	if o != nil && !IsNil(o.GlobalsStatesOff) {
		return true
	}

	return false
}

// SetGlobalsStatesOff gets a reference to the given string and assigns it to the GlobalsStatesOff field.
func (o *LanguagePackData) SetGlobalsStatesOff(v string) {
	o.GlobalsStatesOff = &v
}

// GetGlobalsTermsAll returns the GlobalsTermsAll field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsAll() string {
	if o == nil || IsNil(o.GlobalsTermsAll) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsAll
}

// GetGlobalsTermsAllOk returns a tuple with the GlobalsTermsAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsAllOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsAll) {
		return nil, false
	}
	return o.GlobalsTermsAll, true
}

// HasGlobalsTermsAll returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsAll() bool {
	if o != nil && !IsNil(o.GlobalsTermsAll) {
		return true
	}

	return false
}

// SetGlobalsTermsAll gets a reference to the given string and assigns it to the GlobalsTermsAll field.
func (o *LanguagePackData) SetGlobalsTermsAll(v string) {
	o.GlobalsTermsAll = &v
}

// GetGlobalsTermsAnalytics returns the GlobalsTermsAnalytics field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsAnalytics() string {
	if o == nil || IsNil(o.GlobalsTermsAnalytics) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsAnalytics
}

// GetGlobalsTermsAnalyticsOk returns a tuple with the GlobalsTermsAnalytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsAnalyticsOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsAnalytics) {
		return nil, false
	}
	return o.GlobalsTermsAnalytics, true
}

// HasGlobalsTermsAnalytics returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsAnalytics() bool {
	if o != nil && !IsNil(o.GlobalsTermsAnalytics) {
		return true
	}

	return false
}

// SetGlobalsTermsAnalytics gets a reference to the given string and assigns it to the GlobalsTermsAnalytics field.
func (o *LanguagePackData) SetGlobalsTermsAnalytics(v string) {
	o.GlobalsTermsAnalytics = &v
}

// GetGlobalsTermsBounce returns the GlobalsTermsBounce field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsBounce() string {
	if o == nil || IsNil(o.GlobalsTermsBounce) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsBounce
}

// GetGlobalsTermsBounceOk returns a tuple with the GlobalsTermsBounce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsBounceOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsBounce) {
		return nil, false
	}
	return o.GlobalsTermsBounce, true
}

// HasGlobalsTermsBounce returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsBounce() bool {
	if o != nil && !IsNil(o.GlobalsTermsBounce) {
		return true
	}

	return false
}

// SetGlobalsTermsBounce gets a reference to the given string and assigns it to the GlobalsTermsBounce field.
func (o *LanguagePackData) SetGlobalsTermsBounce(v string) {
	o.GlobalsTermsBounce = &v
}

// GetGlobalsTermsBounces returns the GlobalsTermsBounces field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsBounces() string {
	if o == nil || IsNil(o.GlobalsTermsBounces) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsBounces
}

// GetGlobalsTermsBouncesOk returns a tuple with the GlobalsTermsBounces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsBouncesOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsBounces) {
		return nil, false
	}
	return o.GlobalsTermsBounces, true
}

// HasGlobalsTermsBounces returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsBounces() bool {
	if o != nil && !IsNil(o.GlobalsTermsBounces) {
		return true
	}

	return false
}

// SetGlobalsTermsBounces gets a reference to the given string and assigns it to the GlobalsTermsBounces field.
func (o *LanguagePackData) SetGlobalsTermsBounces(v string) {
	o.GlobalsTermsBounces = &v
}

// GetGlobalsTermsCampaign returns the GlobalsTermsCampaign field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsCampaign() string {
	if o == nil || IsNil(o.GlobalsTermsCampaign) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsCampaign
}

// GetGlobalsTermsCampaignOk returns a tuple with the GlobalsTermsCampaign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsCampaignOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsCampaign) {
		return nil, false
	}
	return o.GlobalsTermsCampaign, true
}

// HasGlobalsTermsCampaign returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsCampaign() bool {
	if o != nil && !IsNil(o.GlobalsTermsCampaign) {
		return true
	}

	return false
}

// SetGlobalsTermsCampaign gets a reference to the given string and assigns it to the GlobalsTermsCampaign field.
func (o *LanguagePackData) SetGlobalsTermsCampaign(v string) {
	o.GlobalsTermsCampaign = &v
}

// GetGlobalsTermsCampaigns returns the GlobalsTermsCampaigns field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsCampaigns() string {
	if o == nil || IsNil(o.GlobalsTermsCampaigns) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsCampaigns
}

// GetGlobalsTermsCampaignsOk returns a tuple with the GlobalsTermsCampaigns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsCampaignsOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsCampaigns) {
		return nil, false
	}
	return o.GlobalsTermsCampaigns, true
}

// HasGlobalsTermsCampaigns returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsCampaigns() bool {
	if o != nil && !IsNil(o.GlobalsTermsCampaigns) {
		return true
	}

	return false
}

// SetGlobalsTermsCampaigns gets a reference to the given string and assigns it to the GlobalsTermsCampaigns field.
func (o *LanguagePackData) SetGlobalsTermsCampaigns(v string) {
	o.GlobalsTermsCampaigns = &v
}

// GetGlobalsTermsDashboard returns the GlobalsTermsDashboard field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsDashboard() string {
	if o == nil || IsNil(o.GlobalsTermsDashboard) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsDashboard
}

// GetGlobalsTermsDashboardOk returns a tuple with the GlobalsTermsDashboard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsDashboardOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsDashboard) {
		return nil, false
	}
	return o.GlobalsTermsDashboard, true
}

// HasGlobalsTermsDashboard returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsDashboard() bool {
	if o != nil && !IsNil(o.GlobalsTermsDashboard) {
		return true
	}

	return false
}

// SetGlobalsTermsDashboard gets a reference to the given string and assigns it to the GlobalsTermsDashboard field.
func (o *LanguagePackData) SetGlobalsTermsDashboard(v string) {
	o.GlobalsTermsDashboard = &v
}

// GetGlobalsTermsDay returns the GlobalsTermsDay field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsDay() string {
	if o == nil || IsNil(o.GlobalsTermsDay) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsDay
}

// GetGlobalsTermsDayOk returns a tuple with the GlobalsTermsDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsDayOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsDay) {
		return nil, false
	}
	return o.GlobalsTermsDay, true
}

// HasGlobalsTermsDay returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsDay() bool {
	if o != nil && !IsNil(o.GlobalsTermsDay) {
		return true
	}

	return false
}

// SetGlobalsTermsDay gets a reference to the given string and assigns it to the GlobalsTermsDay field.
func (o *LanguagePackData) SetGlobalsTermsDay(v string) {
	o.GlobalsTermsDay = &v
}

// GetGlobalsTermsHour returns the GlobalsTermsHour field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsHour() string {
	if o == nil || IsNil(o.GlobalsTermsHour) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsHour
}

// GetGlobalsTermsHourOk returns a tuple with the GlobalsTermsHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsHourOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsHour) {
		return nil, false
	}
	return o.GlobalsTermsHour, true
}

// HasGlobalsTermsHour returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsHour() bool {
	if o != nil && !IsNil(o.GlobalsTermsHour) {
		return true
	}

	return false
}

// SetGlobalsTermsHour gets a reference to the given string and assigns it to the GlobalsTermsHour field.
func (o *LanguagePackData) SetGlobalsTermsHour(v string) {
	o.GlobalsTermsHour = &v
}

// GetGlobalsTermsList returns the GlobalsTermsList field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsList() string {
	if o == nil || IsNil(o.GlobalsTermsList) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsList
}

// GetGlobalsTermsListOk returns a tuple with the GlobalsTermsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsListOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsList) {
		return nil, false
	}
	return o.GlobalsTermsList, true
}

// HasGlobalsTermsList returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsList() bool {
	if o != nil && !IsNil(o.GlobalsTermsList) {
		return true
	}

	return false
}

// SetGlobalsTermsList gets a reference to the given string and assigns it to the GlobalsTermsList field.
func (o *LanguagePackData) SetGlobalsTermsList(v string) {
	o.GlobalsTermsList = &v
}

// GetGlobalsTermsLists returns the GlobalsTermsLists field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsLists() string {
	if o == nil || IsNil(o.GlobalsTermsLists) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsLists
}

// GetGlobalsTermsListsOk returns a tuple with the GlobalsTermsLists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsListsOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsLists) {
		return nil, false
	}
	return o.GlobalsTermsLists, true
}

// HasGlobalsTermsLists returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsLists() bool {
	if o != nil && !IsNil(o.GlobalsTermsLists) {
		return true
	}

	return false
}

// SetGlobalsTermsLists gets a reference to the given string and assigns it to the GlobalsTermsLists field.
func (o *LanguagePackData) SetGlobalsTermsLists(v string) {
	o.GlobalsTermsLists = &v
}

// GetGlobalsTermsMedia returns the GlobalsTermsMedia field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsMedia() string {
	if o == nil || IsNil(o.GlobalsTermsMedia) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsMedia
}

// GetGlobalsTermsMediaOk returns a tuple with the GlobalsTermsMedia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsMediaOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsMedia) {
		return nil, false
	}
	return o.GlobalsTermsMedia, true
}

// HasGlobalsTermsMedia returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsMedia() bool {
	if o != nil && !IsNil(o.GlobalsTermsMedia) {
		return true
	}

	return false
}

// SetGlobalsTermsMedia gets a reference to the given string and assigns it to the GlobalsTermsMedia field.
func (o *LanguagePackData) SetGlobalsTermsMedia(v string) {
	o.GlobalsTermsMedia = &v
}

// GetGlobalsTermsMessenger returns the GlobalsTermsMessenger field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsMessenger() string {
	if o == nil || IsNil(o.GlobalsTermsMessenger) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsMessenger
}

// GetGlobalsTermsMessengerOk returns a tuple with the GlobalsTermsMessenger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsMessengerOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsMessenger) {
		return nil, false
	}
	return o.GlobalsTermsMessenger, true
}

// HasGlobalsTermsMessenger returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsMessenger() bool {
	if o != nil && !IsNil(o.GlobalsTermsMessenger) {
		return true
	}

	return false
}

// SetGlobalsTermsMessenger gets a reference to the given string and assigns it to the GlobalsTermsMessenger field.
func (o *LanguagePackData) SetGlobalsTermsMessenger(v string) {
	o.GlobalsTermsMessenger = &v
}

// GetGlobalsTermsMessengers returns the GlobalsTermsMessengers field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsMessengers() string {
	if o == nil || IsNil(o.GlobalsTermsMessengers) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsMessengers
}

// GetGlobalsTermsMessengersOk returns a tuple with the GlobalsTermsMessengers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsMessengersOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsMessengers) {
		return nil, false
	}
	return o.GlobalsTermsMessengers, true
}

// HasGlobalsTermsMessengers returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsMessengers() bool {
	if o != nil && !IsNil(o.GlobalsTermsMessengers) {
		return true
	}

	return false
}

// SetGlobalsTermsMessengers gets a reference to the given string and assigns it to the GlobalsTermsMessengers field.
func (o *LanguagePackData) SetGlobalsTermsMessengers(v string) {
	o.GlobalsTermsMessengers = &v
}

// GetGlobalsTermsMinute returns the GlobalsTermsMinute field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsMinute() string {
	if o == nil || IsNil(o.GlobalsTermsMinute) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsMinute
}

// GetGlobalsTermsMinuteOk returns a tuple with the GlobalsTermsMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsMinuteOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsMinute) {
		return nil, false
	}
	return o.GlobalsTermsMinute, true
}

// HasGlobalsTermsMinute returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsMinute() bool {
	if o != nil && !IsNil(o.GlobalsTermsMinute) {
		return true
	}

	return false
}

// SetGlobalsTermsMinute gets a reference to the given string and assigns it to the GlobalsTermsMinute field.
func (o *LanguagePackData) SetGlobalsTermsMinute(v string) {
	o.GlobalsTermsMinute = &v
}

// GetGlobalsTermsMonth returns the GlobalsTermsMonth field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsMonth() string {
	if o == nil || IsNil(o.GlobalsTermsMonth) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsMonth
}

// GetGlobalsTermsMonthOk returns a tuple with the GlobalsTermsMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsMonthOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsMonth) {
		return nil, false
	}
	return o.GlobalsTermsMonth, true
}

// HasGlobalsTermsMonth returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsMonth() bool {
	if o != nil && !IsNil(o.GlobalsTermsMonth) {
		return true
	}

	return false
}

// SetGlobalsTermsMonth gets a reference to the given string and assigns it to the GlobalsTermsMonth field.
func (o *LanguagePackData) SetGlobalsTermsMonth(v string) {
	o.GlobalsTermsMonth = &v
}

// GetGlobalsTermsSecond returns the GlobalsTermsSecond field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsSecond() string {
	if o == nil || IsNil(o.GlobalsTermsSecond) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsSecond
}

// GetGlobalsTermsSecondOk returns a tuple with the GlobalsTermsSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsSecondOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsSecond) {
		return nil, false
	}
	return o.GlobalsTermsSecond, true
}

// HasGlobalsTermsSecond returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsSecond() bool {
	if o != nil && !IsNil(o.GlobalsTermsSecond) {
		return true
	}

	return false
}

// SetGlobalsTermsSecond gets a reference to the given string and assigns it to the GlobalsTermsSecond field.
func (o *LanguagePackData) SetGlobalsTermsSecond(v string) {
	o.GlobalsTermsSecond = &v
}

// GetGlobalsTermsSettings returns the GlobalsTermsSettings field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsSettings() string {
	if o == nil || IsNil(o.GlobalsTermsSettings) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsSettings
}

// GetGlobalsTermsSettingsOk returns a tuple with the GlobalsTermsSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsSettingsOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsSettings) {
		return nil, false
	}
	return o.GlobalsTermsSettings, true
}

// HasGlobalsTermsSettings returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsSettings() bool {
	if o != nil && !IsNil(o.GlobalsTermsSettings) {
		return true
	}

	return false
}

// SetGlobalsTermsSettings gets a reference to the given string and assigns it to the GlobalsTermsSettings field.
func (o *LanguagePackData) SetGlobalsTermsSettings(v string) {
	o.GlobalsTermsSettings = &v
}

// GetGlobalsTermsSubscriber returns the GlobalsTermsSubscriber field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsSubscriber() string {
	if o == nil || IsNil(o.GlobalsTermsSubscriber) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsSubscriber
}

// GetGlobalsTermsSubscriberOk returns a tuple with the GlobalsTermsSubscriber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsSubscriberOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsSubscriber) {
		return nil, false
	}
	return o.GlobalsTermsSubscriber, true
}

// HasGlobalsTermsSubscriber returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsSubscriber() bool {
	if o != nil && !IsNil(o.GlobalsTermsSubscriber) {
		return true
	}

	return false
}

// SetGlobalsTermsSubscriber gets a reference to the given string and assigns it to the GlobalsTermsSubscriber field.
func (o *LanguagePackData) SetGlobalsTermsSubscriber(v string) {
	o.GlobalsTermsSubscriber = &v
}

// GetGlobalsTermsSubscribers returns the GlobalsTermsSubscribers field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsSubscribers() string {
	if o == nil || IsNil(o.GlobalsTermsSubscribers) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsSubscribers
}

// GetGlobalsTermsSubscribersOk returns a tuple with the GlobalsTermsSubscribers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsSubscribersOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsSubscribers) {
		return nil, false
	}
	return o.GlobalsTermsSubscribers, true
}

// HasGlobalsTermsSubscribers returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsSubscribers() bool {
	if o != nil && !IsNil(o.GlobalsTermsSubscribers) {
		return true
	}

	return false
}

// SetGlobalsTermsSubscribers gets a reference to the given string and assigns it to the GlobalsTermsSubscribers field.
func (o *LanguagePackData) SetGlobalsTermsSubscribers(v string) {
	o.GlobalsTermsSubscribers = &v
}

// GetGlobalsTermsSubscriptions returns the GlobalsTermsSubscriptions field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsSubscriptions() string {
	if o == nil || IsNil(o.GlobalsTermsSubscriptions) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsSubscriptions
}

// GetGlobalsTermsSubscriptionsOk returns a tuple with the GlobalsTermsSubscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsSubscriptionsOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsSubscriptions) {
		return nil, false
	}
	return o.GlobalsTermsSubscriptions, true
}

// HasGlobalsTermsSubscriptions returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsSubscriptions() bool {
	if o != nil && !IsNil(o.GlobalsTermsSubscriptions) {
		return true
	}

	return false
}

// SetGlobalsTermsSubscriptions gets a reference to the given string and assigns it to the GlobalsTermsSubscriptions field.
func (o *LanguagePackData) SetGlobalsTermsSubscriptions(v string) {
	o.GlobalsTermsSubscriptions = &v
}

// GetGlobalsTermsTag returns the GlobalsTermsTag field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsTag() string {
	if o == nil || IsNil(o.GlobalsTermsTag) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsTag
}

// GetGlobalsTermsTagOk returns a tuple with the GlobalsTermsTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsTagOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsTag) {
		return nil, false
	}
	return o.GlobalsTermsTag, true
}

// HasGlobalsTermsTag returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsTag() bool {
	if o != nil && !IsNil(o.GlobalsTermsTag) {
		return true
	}

	return false
}

// SetGlobalsTermsTag gets a reference to the given string and assigns it to the GlobalsTermsTag field.
func (o *LanguagePackData) SetGlobalsTermsTag(v string) {
	o.GlobalsTermsTag = &v
}

// GetGlobalsTermsTags returns the GlobalsTermsTags field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsTags() string {
	if o == nil || IsNil(o.GlobalsTermsTags) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsTags
}

// GetGlobalsTermsTagsOk returns a tuple with the GlobalsTermsTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsTagsOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsTags) {
		return nil, false
	}
	return o.GlobalsTermsTags, true
}

// HasGlobalsTermsTags returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsTags() bool {
	if o != nil && !IsNil(o.GlobalsTermsTags) {
		return true
	}

	return false
}

// SetGlobalsTermsTags gets a reference to the given string and assigns it to the GlobalsTermsTags field.
func (o *LanguagePackData) SetGlobalsTermsTags(v string) {
	o.GlobalsTermsTags = &v
}

// GetGlobalsTermsTemplate returns the GlobalsTermsTemplate field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsTemplate() string {
	if o == nil || IsNil(o.GlobalsTermsTemplate) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsTemplate
}

// GetGlobalsTermsTemplateOk returns a tuple with the GlobalsTermsTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsTemplate) {
		return nil, false
	}
	return o.GlobalsTermsTemplate, true
}

// HasGlobalsTermsTemplate returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsTemplate() bool {
	if o != nil && !IsNil(o.GlobalsTermsTemplate) {
		return true
	}

	return false
}

// SetGlobalsTermsTemplate gets a reference to the given string and assigns it to the GlobalsTermsTemplate field.
func (o *LanguagePackData) SetGlobalsTermsTemplate(v string) {
	o.GlobalsTermsTemplate = &v
}

// GetGlobalsTermsTemplates returns the GlobalsTermsTemplates field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsTemplates() string {
	if o == nil || IsNil(o.GlobalsTermsTemplates) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsTemplates
}

// GetGlobalsTermsTemplatesOk returns a tuple with the GlobalsTermsTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsTemplatesOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsTemplates) {
		return nil, false
	}
	return o.GlobalsTermsTemplates, true
}

// HasGlobalsTermsTemplates returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsTemplates() bool {
	if o != nil && !IsNil(o.GlobalsTermsTemplates) {
		return true
	}

	return false
}

// SetGlobalsTermsTemplates gets a reference to the given string and assigns it to the GlobalsTermsTemplates field.
func (o *LanguagePackData) SetGlobalsTermsTemplates(v string) {
	o.GlobalsTermsTemplates = &v
}

// GetGlobalsTermsTx returns the GlobalsTermsTx field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsTx() string {
	if o == nil || IsNil(o.GlobalsTermsTx) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsTx
}

// GetGlobalsTermsTxOk returns a tuple with the GlobalsTermsTx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsTxOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsTx) {
		return nil, false
	}
	return o.GlobalsTermsTx, true
}

// HasGlobalsTermsTx returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsTx() bool {
	if o != nil && !IsNil(o.GlobalsTermsTx) {
		return true
	}

	return false
}

// SetGlobalsTermsTx gets a reference to the given string and assigns it to the GlobalsTermsTx field.
func (o *LanguagePackData) SetGlobalsTermsTx(v string) {
	o.GlobalsTermsTx = &v
}

// GetGlobalsTermsYear returns the GlobalsTermsYear field value if set, zero value otherwise.
func (o *LanguagePackData) GetGlobalsTermsYear() string {
	if o == nil || IsNil(o.GlobalsTermsYear) {
		var ret string
		return ret
	}
	return *o.GlobalsTermsYear
}

// GetGlobalsTermsYearOk returns a tuple with the GlobalsTermsYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetGlobalsTermsYearOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalsTermsYear) {
		return nil, false
	}
	return o.GlobalsTermsYear, true
}

// HasGlobalsTermsYear returns a boolean if a field has been set.
func (o *LanguagePackData) HasGlobalsTermsYear() bool {
	if o != nil && !IsNil(o.GlobalsTermsYear) {
		return true
	}

	return false
}

// SetGlobalsTermsYear gets a reference to the given string and assigns it to the GlobalsTermsYear field.
func (o *LanguagePackData) SetGlobalsTermsYear(v string) {
	o.GlobalsTermsYear = &v
}

// GetImportAlreadyRunning returns the ImportAlreadyRunning field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportAlreadyRunning() string {
	if o == nil || IsNil(o.ImportAlreadyRunning) {
		var ret string
		return ret
	}
	return *o.ImportAlreadyRunning
}

// GetImportAlreadyRunningOk returns a tuple with the ImportAlreadyRunning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportAlreadyRunningOk() (*string, bool) {
	if o == nil || IsNil(o.ImportAlreadyRunning) {
		return nil, false
	}
	return o.ImportAlreadyRunning, true
}

// HasImportAlreadyRunning returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportAlreadyRunning() bool {
	if o != nil && !IsNil(o.ImportAlreadyRunning) {
		return true
	}

	return false
}

// SetImportAlreadyRunning gets a reference to the given string and assigns it to the ImportAlreadyRunning field.
func (o *LanguagePackData) SetImportAlreadyRunning(v string) {
	o.ImportAlreadyRunning = &v
}

// GetImportBlocklist returns the ImportBlocklist field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportBlocklist() string {
	if o == nil || IsNil(o.ImportBlocklist) {
		var ret string
		return ret
	}
	return *o.ImportBlocklist
}

// GetImportBlocklistOk returns a tuple with the ImportBlocklist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportBlocklistOk() (*string, bool) {
	if o == nil || IsNil(o.ImportBlocklist) {
		return nil, false
	}
	return o.ImportBlocklist, true
}

// HasImportBlocklist returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportBlocklist() bool {
	if o != nil && !IsNil(o.ImportBlocklist) {
		return true
	}

	return false
}

// SetImportBlocklist gets a reference to the given string and assigns it to the ImportBlocklist field.
func (o *LanguagePackData) SetImportBlocklist(v string) {
	o.ImportBlocklist = &v
}

// GetImportCsvDelim returns the ImportCsvDelim field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportCsvDelim() string {
	if o == nil || IsNil(o.ImportCsvDelim) {
		var ret string
		return ret
	}
	return *o.ImportCsvDelim
}

// GetImportCsvDelimOk returns a tuple with the ImportCsvDelim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportCsvDelimOk() (*string, bool) {
	if o == nil || IsNil(o.ImportCsvDelim) {
		return nil, false
	}
	return o.ImportCsvDelim, true
}

// HasImportCsvDelim returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportCsvDelim() bool {
	if o != nil && !IsNil(o.ImportCsvDelim) {
		return true
	}

	return false
}

// SetImportCsvDelim gets a reference to the given string and assigns it to the ImportCsvDelim field.
func (o *LanguagePackData) SetImportCsvDelim(v string) {
	o.ImportCsvDelim = &v
}

// GetImportCsvDelimHelp returns the ImportCsvDelimHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportCsvDelimHelp() string {
	if o == nil || IsNil(o.ImportCsvDelimHelp) {
		var ret string
		return ret
	}
	return *o.ImportCsvDelimHelp
}

// GetImportCsvDelimHelpOk returns a tuple with the ImportCsvDelimHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportCsvDelimHelpOk() (*string, bool) {
	if o == nil || IsNil(o.ImportCsvDelimHelp) {
		return nil, false
	}
	return o.ImportCsvDelimHelp, true
}

// HasImportCsvDelimHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportCsvDelimHelp() bool {
	if o != nil && !IsNil(o.ImportCsvDelimHelp) {
		return true
	}

	return false
}

// SetImportCsvDelimHelp gets a reference to the given string and assigns it to the ImportCsvDelimHelp field.
func (o *LanguagePackData) SetImportCsvDelimHelp(v string) {
	o.ImportCsvDelimHelp = &v
}

// GetImportCsvExample returns the ImportCsvExample field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportCsvExample() string {
	if o == nil || IsNil(o.ImportCsvExample) {
		var ret string
		return ret
	}
	return *o.ImportCsvExample
}

// GetImportCsvExampleOk returns a tuple with the ImportCsvExample field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportCsvExampleOk() (*string, bool) {
	if o == nil || IsNil(o.ImportCsvExample) {
		return nil, false
	}
	return o.ImportCsvExample, true
}

// HasImportCsvExample returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportCsvExample() bool {
	if o != nil && !IsNil(o.ImportCsvExample) {
		return true
	}

	return false
}

// SetImportCsvExample gets a reference to the given string and assigns it to the ImportCsvExample field.
func (o *LanguagePackData) SetImportCsvExample(v string) {
	o.ImportCsvExample = &v
}

// GetImportCsvFile returns the ImportCsvFile field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportCsvFile() string {
	if o == nil || IsNil(o.ImportCsvFile) {
		var ret string
		return ret
	}
	return *o.ImportCsvFile
}

// GetImportCsvFileOk returns a tuple with the ImportCsvFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportCsvFileOk() (*string, bool) {
	if o == nil || IsNil(o.ImportCsvFile) {
		return nil, false
	}
	return o.ImportCsvFile, true
}

// HasImportCsvFile returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportCsvFile() bool {
	if o != nil && !IsNil(o.ImportCsvFile) {
		return true
	}

	return false
}

// SetImportCsvFile gets a reference to the given string and assigns it to the ImportCsvFile field.
func (o *LanguagePackData) SetImportCsvFile(v string) {
	o.ImportCsvFile = &v
}

// GetImportCsvFileHelp returns the ImportCsvFileHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportCsvFileHelp() string {
	if o == nil || IsNil(o.ImportCsvFileHelp) {
		var ret string
		return ret
	}
	return *o.ImportCsvFileHelp
}

// GetImportCsvFileHelpOk returns a tuple with the ImportCsvFileHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportCsvFileHelpOk() (*string, bool) {
	if o == nil || IsNil(o.ImportCsvFileHelp) {
		return nil, false
	}
	return o.ImportCsvFileHelp, true
}

// HasImportCsvFileHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportCsvFileHelp() bool {
	if o != nil && !IsNil(o.ImportCsvFileHelp) {
		return true
	}

	return false
}

// SetImportCsvFileHelp gets a reference to the given string and assigns it to the ImportCsvFileHelp field.
func (o *LanguagePackData) SetImportCsvFileHelp(v string) {
	o.ImportCsvFileHelp = &v
}

// GetImportErrorCopyingFile returns the ImportErrorCopyingFile field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportErrorCopyingFile() string {
	if o == nil || IsNil(o.ImportErrorCopyingFile) {
		var ret string
		return ret
	}
	return *o.ImportErrorCopyingFile
}

// GetImportErrorCopyingFileOk returns a tuple with the ImportErrorCopyingFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportErrorCopyingFileOk() (*string, bool) {
	if o == nil || IsNil(o.ImportErrorCopyingFile) {
		return nil, false
	}
	return o.ImportErrorCopyingFile, true
}

// HasImportErrorCopyingFile returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportErrorCopyingFile() bool {
	if o != nil && !IsNil(o.ImportErrorCopyingFile) {
		return true
	}

	return false
}

// SetImportErrorCopyingFile gets a reference to the given string and assigns it to the ImportErrorCopyingFile field.
func (o *LanguagePackData) SetImportErrorCopyingFile(v string) {
	o.ImportErrorCopyingFile = &v
}

// GetImportErrorProcessingZIP returns the ImportErrorProcessingZIP field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportErrorProcessingZIP() string {
	if o == nil || IsNil(o.ImportErrorProcessingZIP) {
		var ret string
		return ret
	}
	return *o.ImportErrorProcessingZIP
}

// GetImportErrorProcessingZIPOk returns a tuple with the ImportErrorProcessingZIP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportErrorProcessingZIPOk() (*string, bool) {
	if o == nil || IsNil(o.ImportErrorProcessingZIP) {
		return nil, false
	}
	return o.ImportErrorProcessingZIP, true
}

// HasImportErrorProcessingZIP returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportErrorProcessingZIP() bool {
	if o != nil && !IsNil(o.ImportErrorProcessingZIP) {
		return true
	}

	return false
}

// SetImportErrorProcessingZIP gets a reference to the given string and assigns it to the ImportErrorProcessingZIP field.
func (o *LanguagePackData) SetImportErrorProcessingZIP(v string) {
	o.ImportErrorProcessingZIP = &v
}

// GetImportErrorStarting returns the ImportErrorStarting field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportErrorStarting() string {
	if o == nil || IsNil(o.ImportErrorStarting) {
		var ret string
		return ret
	}
	return *o.ImportErrorStarting
}

// GetImportErrorStartingOk returns a tuple with the ImportErrorStarting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportErrorStartingOk() (*string, bool) {
	if o == nil || IsNil(o.ImportErrorStarting) {
		return nil, false
	}
	return o.ImportErrorStarting, true
}

// HasImportErrorStarting returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportErrorStarting() bool {
	if o != nil && !IsNil(o.ImportErrorStarting) {
		return true
	}

	return false
}

// SetImportErrorStarting gets a reference to the given string and assigns it to the ImportErrorStarting field.
func (o *LanguagePackData) SetImportErrorStarting(v string) {
	o.ImportErrorStarting = &v
}

// GetImportImportDone returns the ImportImportDone field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportImportDone() string {
	if o == nil || IsNil(o.ImportImportDone) {
		var ret string
		return ret
	}
	return *o.ImportImportDone
}

// GetImportImportDoneOk returns a tuple with the ImportImportDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportImportDoneOk() (*string, bool) {
	if o == nil || IsNil(o.ImportImportDone) {
		return nil, false
	}
	return o.ImportImportDone, true
}

// HasImportImportDone returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportImportDone() bool {
	if o != nil && !IsNil(o.ImportImportDone) {
		return true
	}

	return false
}

// SetImportImportDone gets a reference to the given string and assigns it to the ImportImportDone field.
func (o *LanguagePackData) SetImportImportDone(v string) {
	o.ImportImportDone = &v
}

// GetImportImportStarted returns the ImportImportStarted field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportImportStarted() string {
	if o == nil || IsNil(o.ImportImportStarted) {
		var ret string
		return ret
	}
	return *o.ImportImportStarted
}

// GetImportImportStartedOk returns a tuple with the ImportImportStarted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportImportStartedOk() (*string, bool) {
	if o == nil || IsNil(o.ImportImportStarted) {
		return nil, false
	}
	return o.ImportImportStarted, true
}

// HasImportImportStarted returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportImportStarted() bool {
	if o != nil && !IsNil(o.ImportImportStarted) {
		return true
	}

	return false
}

// SetImportImportStarted gets a reference to the given string and assigns it to the ImportImportStarted field.
func (o *LanguagePackData) SetImportImportStarted(v string) {
	o.ImportImportStarted = &v
}

// GetImportInstructions returns the ImportInstructions field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportInstructions() string {
	if o == nil || IsNil(o.ImportInstructions) {
		var ret string
		return ret
	}
	return *o.ImportInstructions
}

// GetImportInstructionsOk returns a tuple with the ImportInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.ImportInstructions) {
		return nil, false
	}
	return o.ImportInstructions, true
}

// HasImportInstructions returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportInstructions() bool {
	if o != nil && !IsNil(o.ImportInstructions) {
		return true
	}

	return false
}

// SetImportInstructions gets a reference to the given string and assigns it to the ImportInstructions field.
func (o *LanguagePackData) SetImportInstructions(v string) {
	o.ImportInstructions = &v
}

// GetImportInstructionsHelp returns the ImportInstructionsHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportInstructionsHelp() string {
	if o == nil || IsNil(o.ImportInstructionsHelp) {
		var ret string
		return ret
	}
	return *o.ImportInstructionsHelp
}

// GetImportInstructionsHelpOk returns a tuple with the ImportInstructionsHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportInstructionsHelpOk() (*string, bool) {
	if o == nil || IsNil(o.ImportInstructionsHelp) {
		return nil, false
	}
	return o.ImportInstructionsHelp, true
}

// HasImportInstructionsHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportInstructionsHelp() bool {
	if o != nil && !IsNil(o.ImportInstructionsHelp) {
		return true
	}

	return false
}

// SetImportInstructionsHelp gets a reference to the given string and assigns it to the ImportInstructionsHelp field.
func (o *LanguagePackData) SetImportInstructionsHelp(v string) {
	o.ImportInstructionsHelp = &v
}

// GetImportInvalidDelim returns the ImportInvalidDelim field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportInvalidDelim() string {
	if o == nil || IsNil(o.ImportInvalidDelim) {
		var ret string
		return ret
	}
	return *o.ImportInvalidDelim
}

// GetImportInvalidDelimOk returns a tuple with the ImportInvalidDelim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportInvalidDelimOk() (*string, bool) {
	if o == nil || IsNil(o.ImportInvalidDelim) {
		return nil, false
	}
	return o.ImportInvalidDelim, true
}

// HasImportInvalidDelim returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportInvalidDelim() bool {
	if o != nil && !IsNil(o.ImportInvalidDelim) {
		return true
	}

	return false
}

// SetImportInvalidDelim gets a reference to the given string and assigns it to the ImportInvalidDelim field.
func (o *LanguagePackData) SetImportInvalidDelim(v string) {
	o.ImportInvalidDelim = &v
}

// GetImportInvalidFile returns the ImportInvalidFile field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportInvalidFile() string {
	if o == nil || IsNil(o.ImportInvalidFile) {
		var ret string
		return ret
	}
	return *o.ImportInvalidFile
}

// GetImportInvalidFileOk returns a tuple with the ImportInvalidFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportInvalidFileOk() (*string, bool) {
	if o == nil || IsNil(o.ImportInvalidFile) {
		return nil, false
	}
	return o.ImportInvalidFile, true
}

// HasImportInvalidFile returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportInvalidFile() bool {
	if o != nil && !IsNil(o.ImportInvalidFile) {
		return true
	}

	return false
}

// SetImportInvalidFile gets a reference to the given string and assigns it to the ImportInvalidFile field.
func (o *LanguagePackData) SetImportInvalidFile(v string) {
	o.ImportInvalidFile = &v
}

// GetImportInvalidMode returns the ImportInvalidMode field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportInvalidMode() string {
	if o == nil || IsNil(o.ImportInvalidMode) {
		var ret string
		return ret
	}
	return *o.ImportInvalidMode
}

// GetImportInvalidModeOk returns a tuple with the ImportInvalidMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportInvalidModeOk() (*string, bool) {
	if o == nil || IsNil(o.ImportInvalidMode) {
		return nil, false
	}
	return o.ImportInvalidMode, true
}

// HasImportInvalidMode returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportInvalidMode() bool {
	if o != nil && !IsNil(o.ImportInvalidMode) {
		return true
	}

	return false
}

// SetImportInvalidMode gets a reference to the given string and assigns it to the ImportInvalidMode field.
func (o *LanguagePackData) SetImportInvalidMode(v string) {
	o.ImportInvalidMode = &v
}

// GetImportInvalidParams returns the ImportInvalidParams field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportInvalidParams() string {
	if o == nil || IsNil(o.ImportInvalidParams) {
		var ret string
		return ret
	}
	return *o.ImportInvalidParams
}

// GetImportInvalidParamsOk returns a tuple with the ImportInvalidParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportInvalidParamsOk() (*string, bool) {
	if o == nil || IsNil(o.ImportInvalidParams) {
		return nil, false
	}
	return o.ImportInvalidParams, true
}

// HasImportInvalidParams returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportInvalidParams() bool {
	if o != nil && !IsNil(o.ImportInvalidParams) {
		return true
	}

	return false
}

// SetImportInvalidParams gets a reference to the given string and assigns it to the ImportInvalidParams field.
func (o *LanguagePackData) SetImportInvalidParams(v string) {
	o.ImportInvalidParams = &v
}

// GetImportInvalidSubStatus returns the ImportInvalidSubStatus field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportInvalidSubStatus() string {
	if o == nil || IsNil(o.ImportInvalidSubStatus) {
		var ret string
		return ret
	}
	return *o.ImportInvalidSubStatus
}

// GetImportInvalidSubStatusOk returns a tuple with the ImportInvalidSubStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportInvalidSubStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ImportInvalidSubStatus) {
		return nil, false
	}
	return o.ImportInvalidSubStatus, true
}

// HasImportInvalidSubStatus returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportInvalidSubStatus() bool {
	if o != nil && !IsNil(o.ImportInvalidSubStatus) {
		return true
	}

	return false
}

// SetImportInvalidSubStatus gets a reference to the given string and assigns it to the ImportInvalidSubStatus field.
func (o *LanguagePackData) SetImportInvalidSubStatus(v string) {
	o.ImportInvalidSubStatus = &v
}

// GetImportListSubHelp returns the ImportListSubHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportListSubHelp() string {
	if o == nil || IsNil(o.ImportListSubHelp) {
		var ret string
		return ret
	}
	return *o.ImportListSubHelp
}

// GetImportListSubHelpOk returns a tuple with the ImportListSubHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportListSubHelpOk() (*string, bool) {
	if o == nil || IsNil(o.ImportListSubHelp) {
		return nil, false
	}
	return o.ImportListSubHelp, true
}

// HasImportListSubHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportListSubHelp() bool {
	if o != nil && !IsNil(o.ImportListSubHelp) {
		return true
	}

	return false
}

// SetImportListSubHelp gets a reference to the given string and assigns it to the ImportListSubHelp field.
func (o *LanguagePackData) SetImportListSubHelp(v string) {
	o.ImportListSubHelp = &v
}

// GetImportMode returns the ImportMode field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportMode() string {
	if o == nil || IsNil(o.ImportMode) {
		var ret string
		return ret
	}
	return *o.ImportMode
}

// GetImportModeOk returns a tuple with the ImportMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportModeOk() (*string, bool) {
	if o == nil || IsNil(o.ImportMode) {
		return nil, false
	}
	return o.ImportMode, true
}

// HasImportMode returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportMode() bool {
	if o != nil && !IsNil(o.ImportMode) {
		return true
	}

	return false
}

// SetImportMode gets a reference to the given string and assigns it to the ImportMode field.
func (o *LanguagePackData) SetImportMode(v string) {
	o.ImportMode = &v
}

// GetImportOverwrite returns the ImportOverwrite field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportOverwrite() string {
	if o == nil || IsNil(o.ImportOverwrite) {
		var ret string
		return ret
	}
	return *o.ImportOverwrite
}

// GetImportOverwriteOk returns a tuple with the ImportOverwrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportOverwriteOk() (*string, bool) {
	if o == nil || IsNil(o.ImportOverwrite) {
		return nil, false
	}
	return o.ImportOverwrite, true
}

// HasImportOverwrite returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportOverwrite() bool {
	if o != nil && !IsNil(o.ImportOverwrite) {
		return true
	}

	return false
}

// SetImportOverwrite gets a reference to the given string and assigns it to the ImportOverwrite field.
func (o *LanguagePackData) SetImportOverwrite(v string) {
	o.ImportOverwrite = &v
}

// GetImportOverwriteHelp returns the ImportOverwriteHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportOverwriteHelp() string {
	if o == nil || IsNil(o.ImportOverwriteHelp) {
		var ret string
		return ret
	}
	return *o.ImportOverwriteHelp
}

// GetImportOverwriteHelpOk returns a tuple with the ImportOverwriteHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportOverwriteHelpOk() (*string, bool) {
	if o == nil || IsNil(o.ImportOverwriteHelp) {
		return nil, false
	}
	return o.ImportOverwriteHelp, true
}

// HasImportOverwriteHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportOverwriteHelp() bool {
	if o != nil && !IsNil(o.ImportOverwriteHelp) {
		return true
	}

	return false
}

// SetImportOverwriteHelp gets a reference to the given string and assigns it to the ImportOverwriteHelp field.
func (o *LanguagePackData) SetImportOverwriteHelp(v string) {
	o.ImportOverwriteHelp = &v
}

// GetImportRecordsCount returns the ImportRecordsCount field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportRecordsCount() string {
	if o == nil || IsNil(o.ImportRecordsCount) {
		var ret string
		return ret
	}
	return *o.ImportRecordsCount
}

// GetImportRecordsCountOk returns a tuple with the ImportRecordsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportRecordsCountOk() (*string, bool) {
	if o == nil || IsNil(o.ImportRecordsCount) {
		return nil, false
	}
	return o.ImportRecordsCount, true
}

// HasImportRecordsCount returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportRecordsCount() bool {
	if o != nil && !IsNil(o.ImportRecordsCount) {
		return true
	}

	return false
}

// SetImportRecordsCount gets a reference to the given string and assigns it to the ImportRecordsCount field.
func (o *LanguagePackData) SetImportRecordsCount(v string) {
	o.ImportRecordsCount = &v
}

// GetImportStopImport returns the ImportStopImport field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportStopImport() string {
	if o == nil || IsNil(o.ImportStopImport) {
		var ret string
		return ret
	}
	return *o.ImportStopImport
}

// GetImportStopImportOk returns a tuple with the ImportStopImport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportStopImportOk() (*string, bool) {
	if o == nil || IsNil(o.ImportStopImport) {
		return nil, false
	}
	return o.ImportStopImport, true
}

// HasImportStopImport returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportStopImport() bool {
	if o != nil && !IsNil(o.ImportStopImport) {
		return true
	}

	return false
}

// SetImportStopImport gets a reference to the given string and assigns it to the ImportStopImport field.
func (o *LanguagePackData) SetImportStopImport(v string) {
	o.ImportStopImport = &v
}

// GetImportSubscribe returns the ImportSubscribe field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportSubscribe() string {
	if o == nil || IsNil(o.ImportSubscribe) {
		var ret string
		return ret
	}
	return *o.ImportSubscribe
}

// GetImportSubscribeOk returns a tuple with the ImportSubscribe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportSubscribeOk() (*string, bool) {
	if o == nil || IsNil(o.ImportSubscribe) {
		return nil, false
	}
	return o.ImportSubscribe, true
}

// HasImportSubscribe returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportSubscribe() bool {
	if o != nil && !IsNil(o.ImportSubscribe) {
		return true
	}

	return false
}

// SetImportSubscribe gets a reference to the given string and assigns it to the ImportSubscribe field.
func (o *LanguagePackData) SetImportSubscribe(v string) {
	o.ImportSubscribe = &v
}

// GetImportTitle returns the ImportTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportTitle() string {
	if o == nil || IsNil(o.ImportTitle) {
		var ret string
		return ret
	}
	return *o.ImportTitle
}

// GetImportTitleOk returns a tuple with the ImportTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportTitleOk() (*string, bool) {
	if o == nil || IsNil(o.ImportTitle) {
		return nil, false
	}
	return o.ImportTitle, true
}

// HasImportTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportTitle() bool {
	if o != nil && !IsNil(o.ImportTitle) {
		return true
	}

	return false
}

// SetImportTitle gets a reference to the given string and assigns it to the ImportTitle field.
func (o *LanguagePackData) SetImportTitle(v string) {
	o.ImportTitle = &v
}

// GetImportUpload returns the ImportUpload field value if set, zero value otherwise.
func (o *LanguagePackData) GetImportUpload() string {
	if o == nil || IsNil(o.ImportUpload) {
		var ret string
		return ret
	}
	return *o.ImportUpload
}

// GetImportUploadOk returns a tuple with the ImportUpload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetImportUploadOk() (*string, bool) {
	if o == nil || IsNil(o.ImportUpload) {
		return nil, false
	}
	return o.ImportUpload, true
}

// HasImportUpload returns a boolean if a field has been set.
func (o *LanguagePackData) HasImportUpload() bool {
	if o != nil && !IsNil(o.ImportUpload) {
		return true
	}

	return false
}

// SetImportUpload gets a reference to the given string and assigns it to the ImportUpload field.
func (o *LanguagePackData) SetImportUpload(v string) {
	o.ImportUpload = &v
}

// GetListsConfirmDelete returns the ListsConfirmDelete field value if set, zero value otherwise.
func (o *LanguagePackData) GetListsConfirmDelete() string {
	if o == nil || IsNil(o.ListsConfirmDelete) {
		var ret string
		return ret
	}
	return *o.ListsConfirmDelete
}

// GetListsConfirmDeleteOk returns a tuple with the ListsConfirmDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetListsConfirmDeleteOk() (*string, bool) {
	if o == nil || IsNil(o.ListsConfirmDelete) {
		return nil, false
	}
	return o.ListsConfirmDelete, true
}

// HasListsConfirmDelete returns a boolean if a field has been set.
func (o *LanguagePackData) HasListsConfirmDelete() bool {
	if o != nil && !IsNil(o.ListsConfirmDelete) {
		return true
	}

	return false
}

// SetListsConfirmDelete gets a reference to the given string and assigns it to the ListsConfirmDelete field.
func (o *LanguagePackData) SetListsConfirmDelete(v string) {
	o.ListsConfirmDelete = &v
}

// GetListsConfirmSub returns the ListsConfirmSub field value if set, zero value otherwise.
func (o *LanguagePackData) GetListsConfirmSub() string {
	if o == nil || IsNil(o.ListsConfirmSub) {
		var ret string
		return ret
	}
	return *o.ListsConfirmSub
}

// GetListsConfirmSubOk returns a tuple with the ListsConfirmSub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetListsConfirmSubOk() (*string, bool) {
	if o == nil || IsNil(o.ListsConfirmSub) {
		return nil, false
	}
	return o.ListsConfirmSub, true
}

// HasListsConfirmSub returns a boolean if a field has been set.
func (o *LanguagePackData) HasListsConfirmSub() bool {
	if o != nil && !IsNil(o.ListsConfirmSub) {
		return true
	}

	return false
}

// SetListsConfirmSub gets a reference to the given string and assigns it to the ListsConfirmSub field.
func (o *LanguagePackData) SetListsConfirmSub(v string) {
	o.ListsConfirmSub = &v
}

// GetListsInvalidName returns the ListsInvalidName field value if set, zero value otherwise.
func (o *LanguagePackData) GetListsInvalidName() string {
	if o == nil || IsNil(o.ListsInvalidName) {
		var ret string
		return ret
	}
	return *o.ListsInvalidName
}

// GetListsInvalidNameOk returns a tuple with the ListsInvalidName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetListsInvalidNameOk() (*string, bool) {
	if o == nil || IsNil(o.ListsInvalidName) {
		return nil, false
	}
	return o.ListsInvalidName, true
}

// HasListsInvalidName returns a boolean if a field has been set.
func (o *LanguagePackData) HasListsInvalidName() bool {
	if o != nil && !IsNil(o.ListsInvalidName) {
		return true
	}

	return false
}

// SetListsInvalidName gets a reference to the given string and assigns it to the ListsInvalidName field.
func (o *LanguagePackData) SetListsInvalidName(v string) {
	o.ListsInvalidName = &v
}

// GetListsNewList returns the ListsNewList field value if set, zero value otherwise.
func (o *LanguagePackData) GetListsNewList() string {
	if o == nil || IsNil(o.ListsNewList) {
		var ret string
		return ret
	}
	return *o.ListsNewList
}

// GetListsNewListOk returns a tuple with the ListsNewList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetListsNewListOk() (*string, bool) {
	if o == nil || IsNil(o.ListsNewList) {
		return nil, false
	}
	return o.ListsNewList, true
}

// HasListsNewList returns a boolean if a field has been set.
func (o *LanguagePackData) HasListsNewList() bool {
	if o != nil && !IsNil(o.ListsNewList) {
		return true
	}

	return false
}

// SetListsNewList gets a reference to the given string and assigns it to the ListsNewList field.
func (o *LanguagePackData) SetListsNewList(v string) {
	o.ListsNewList = &v
}

// GetListsOptin returns the ListsOptin field value if set, zero value otherwise.
func (o *LanguagePackData) GetListsOptin() string {
	if o == nil || IsNil(o.ListsOptin) {
		var ret string
		return ret
	}
	return *o.ListsOptin
}

// GetListsOptinOk returns a tuple with the ListsOptin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetListsOptinOk() (*string, bool) {
	if o == nil || IsNil(o.ListsOptin) {
		return nil, false
	}
	return o.ListsOptin, true
}

// HasListsOptin returns a boolean if a field has been set.
func (o *LanguagePackData) HasListsOptin() bool {
	if o != nil && !IsNil(o.ListsOptin) {
		return true
	}

	return false
}

// SetListsOptin gets a reference to the given string and assigns it to the ListsOptin field.
func (o *LanguagePackData) SetListsOptin(v string) {
	o.ListsOptin = &v
}

// GetListsOptinHelp returns the ListsOptinHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetListsOptinHelp() string {
	if o == nil || IsNil(o.ListsOptinHelp) {
		var ret string
		return ret
	}
	return *o.ListsOptinHelp
}

// GetListsOptinHelpOk returns a tuple with the ListsOptinHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetListsOptinHelpOk() (*string, bool) {
	if o == nil || IsNil(o.ListsOptinHelp) {
		return nil, false
	}
	return o.ListsOptinHelp, true
}

// HasListsOptinHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasListsOptinHelp() bool {
	if o != nil && !IsNil(o.ListsOptinHelp) {
		return true
	}

	return false
}

// SetListsOptinHelp gets a reference to the given string and assigns it to the ListsOptinHelp field.
func (o *LanguagePackData) SetListsOptinHelp(v string) {
	o.ListsOptinHelp = &v
}

// GetListsOptinTo returns the ListsOptinTo field value if set, zero value otherwise.
func (o *LanguagePackData) GetListsOptinTo() string {
	if o == nil || IsNil(o.ListsOptinTo) {
		var ret string
		return ret
	}
	return *o.ListsOptinTo
}

// GetListsOptinToOk returns a tuple with the ListsOptinTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetListsOptinToOk() (*string, bool) {
	if o == nil || IsNil(o.ListsOptinTo) {
		return nil, false
	}
	return o.ListsOptinTo, true
}

// HasListsOptinTo returns a boolean if a field has been set.
func (o *LanguagePackData) HasListsOptinTo() bool {
	if o != nil && !IsNil(o.ListsOptinTo) {
		return true
	}

	return false
}

// SetListsOptinTo gets a reference to the given string and assigns it to the ListsOptinTo field.
func (o *LanguagePackData) SetListsOptinTo(v string) {
	o.ListsOptinTo = &v
}

// GetListsOptinsDouble returns the ListsOptinsDouble field value if set, zero value otherwise.
func (o *LanguagePackData) GetListsOptinsDouble() string {
	if o == nil || IsNil(o.ListsOptinsDouble) {
		var ret string
		return ret
	}
	return *o.ListsOptinsDouble
}

// GetListsOptinsDoubleOk returns a tuple with the ListsOptinsDouble field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetListsOptinsDoubleOk() (*string, bool) {
	if o == nil || IsNil(o.ListsOptinsDouble) {
		return nil, false
	}
	return o.ListsOptinsDouble, true
}

// HasListsOptinsDouble returns a boolean if a field has been set.
func (o *LanguagePackData) HasListsOptinsDouble() bool {
	if o != nil && !IsNil(o.ListsOptinsDouble) {
		return true
	}

	return false
}

// SetListsOptinsDouble gets a reference to the given string and assigns it to the ListsOptinsDouble field.
func (o *LanguagePackData) SetListsOptinsDouble(v string) {
	o.ListsOptinsDouble = &v
}

// GetListsOptinsSingle returns the ListsOptinsSingle field value if set, zero value otherwise.
func (o *LanguagePackData) GetListsOptinsSingle() string {
	if o == nil || IsNil(o.ListsOptinsSingle) {
		var ret string
		return ret
	}
	return *o.ListsOptinsSingle
}

// GetListsOptinsSingleOk returns a tuple with the ListsOptinsSingle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetListsOptinsSingleOk() (*string, bool) {
	if o == nil || IsNil(o.ListsOptinsSingle) {
		return nil, false
	}
	return o.ListsOptinsSingle, true
}

// HasListsOptinsSingle returns a boolean if a field has been set.
func (o *LanguagePackData) HasListsOptinsSingle() bool {
	if o != nil && !IsNil(o.ListsOptinsSingle) {
		return true
	}

	return false
}

// SetListsOptinsSingle gets a reference to the given string and assigns it to the ListsOptinsSingle field.
func (o *LanguagePackData) SetListsOptinsSingle(v string) {
	o.ListsOptinsSingle = &v
}

// GetListsSendCampaign returns the ListsSendCampaign field value if set, zero value otherwise.
func (o *LanguagePackData) GetListsSendCampaign() string {
	if o == nil || IsNil(o.ListsSendCampaign) {
		var ret string
		return ret
	}
	return *o.ListsSendCampaign
}

// GetListsSendCampaignOk returns a tuple with the ListsSendCampaign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetListsSendCampaignOk() (*string, bool) {
	if o == nil || IsNil(o.ListsSendCampaign) {
		return nil, false
	}
	return o.ListsSendCampaign, true
}

// HasListsSendCampaign returns a boolean if a field has been set.
func (o *LanguagePackData) HasListsSendCampaign() bool {
	if o != nil && !IsNil(o.ListsSendCampaign) {
		return true
	}

	return false
}

// SetListsSendCampaign gets a reference to the given string and assigns it to the ListsSendCampaign field.
func (o *LanguagePackData) SetListsSendCampaign(v string) {
	o.ListsSendCampaign = &v
}

// GetListsSendOptinCampaign returns the ListsSendOptinCampaign field value if set, zero value otherwise.
func (o *LanguagePackData) GetListsSendOptinCampaign() string {
	if o == nil || IsNil(o.ListsSendOptinCampaign) {
		var ret string
		return ret
	}
	return *o.ListsSendOptinCampaign
}

// GetListsSendOptinCampaignOk returns a tuple with the ListsSendOptinCampaign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetListsSendOptinCampaignOk() (*string, bool) {
	if o == nil || IsNil(o.ListsSendOptinCampaign) {
		return nil, false
	}
	return o.ListsSendOptinCampaign, true
}

// HasListsSendOptinCampaign returns a boolean if a field has been set.
func (o *LanguagePackData) HasListsSendOptinCampaign() bool {
	if o != nil && !IsNil(o.ListsSendOptinCampaign) {
		return true
	}

	return false
}

// SetListsSendOptinCampaign gets a reference to the given string and assigns it to the ListsSendOptinCampaign field.
func (o *LanguagePackData) SetListsSendOptinCampaign(v string) {
	o.ListsSendOptinCampaign = &v
}

// GetListsType returns the ListsType field value if set, zero value otherwise.
func (o *LanguagePackData) GetListsType() string {
	if o == nil || IsNil(o.ListsType) {
		var ret string
		return ret
	}
	return *o.ListsType
}

// GetListsTypeOk returns a tuple with the ListsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetListsTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ListsType) {
		return nil, false
	}
	return o.ListsType, true
}

// HasListsType returns a boolean if a field has been set.
func (o *LanguagePackData) HasListsType() bool {
	if o != nil && !IsNil(o.ListsType) {
		return true
	}

	return false
}

// SetListsType gets a reference to the given string and assigns it to the ListsType field.
func (o *LanguagePackData) SetListsType(v string) {
	o.ListsType = &v
}

// GetListsTypeHelp returns the ListsTypeHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetListsTypeHelp() string {
	if o == nil || IsNil(o.ListsTypeHelp) {
		var ret string
		return ret
	}
	return *o.ListsTypeHelp
}

// GetListsTypeHelpOk returns a tuple with the ListsTypeHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetListsTypeHelpOk() (*string, bool) {
	if o == nil || IsNil(o.ListsTypeHelp) {
		return nil, false
	}
	return o.ListsTypeHelp, true
}

// HasListsTypeHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasListsTypeHelp() bool {
	if o != nil && !IsNil(o.ListsTypeHelp) {
		return true
	}

	return false
}

// SetListsTypeHelp gets a reference to the given string and assigns it to the ListsTypeHelp field.
func (o *LanguagePackData) SetListsTypeHelp(v string) {
	o.ListsTypeHelp = &v
}

// GetListsTypesPrivate returns the ListsTypesPrivate field value if set, zero value otherwise.
func (o *LanguagePackData) GetListsTypesPrivate() string {
	if o == nil || IsNil(o.ListsTypesPrivate) {
		var ret string
		return ret
	}
	return *o.ListsTypesPrivate
}

// GetListsTypesPrivateOk returns a tuple with the ListsTypesPrivate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetListsTypesPrivateOk() (*string, bool) {
	if o == nil || IsNil(o.ListsTypesPrivate) {
		return nil, false
	}
	return o.ListsTypesPrivate, true
}

// HasListsTypesPrivate returns a boolean if a field has been set.
func (o *LanguagePackData) HasListsTypesPrivate() bool {
	if o != nil && !IsNil(o.ListsTypesPrivate) {
		return true
	}

	return false
}

// SetListsTypesPrivate gets a reference to the given string and assigns it to the ListsTypesPrivate field.
func (o *LanguagePackData) SetListsTypesPrivate(v string) {
	o.ListsTypesPrivate = &v
}

// GetListsTypesPublic returns the ListsTypesPublic field value if set, zero value otherwise.
func (o *LanguagePackData) GetListsTypesPublic() string {
	if o == nil || IsNil(o.ListsTypesPublic) {
		var ret string
		return ret
	}
	return *o.ListsTypesPublic
}

// GetListsTypesPublicOk returns a tuple with the ListsTypesPublic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetListsTypesPublicOk() (*string, bool) {
	if o == nil || IsNil(o.ListsTypesPublic) {
		return nil, false
	}
	return o.ListsTypesPublic, true
}

// HasListsTypesPublic returns a boolean if a field has been set.
func (o *LanguagePackData) HasListsTypesPublic() bool {
	if o != nil && !IsNil(o.ListsTypesPublic) {
		return true
	}

	return false
}

// SetListsTypesPublic gets a reference to the given string and assigns it to the ListsTypesPublic field.
func (o *LanguagePackData) SetListsTypesPublic(v string) {
	o.ListsTypesPublic = &v
}

// GetLogsTitle returns the LogsTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetLogsTitle() string {
	if o == nil || IsNil(o.LogsTitle) {
		var ret string
		return ret
	}
	return *o.LogsTitle
}

// GetLogsTitleOk returns a tuple with the LogsTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetLogsTitleOk() (*string, bool) {
	if o == nil || IsNil(o.LogsTitle) {
		return nil, false
	}
	return o.LogsTitle, true
}

// HasLogsTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasLogsTitle() bool {
	if o != nil && !IsNil(o.LogsTitle) {
		return true
	}

	return false
}

// SetLogsTitle gets a reference to the given string and assigns it to the LogsTitle field.
func (o *LanguagePackData) SetLogsTitle(v string) {
	o.LogsTitle = &v
}

// GetMaintenanceHelp returns the MaintenanceHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetMaintenanceHelp() string {
	if o == nil || IsNil(o.MaintenanceHelp) {
		var ret string
		return ret
	}
	return *o.MaintenanceHelp
}

// GetMaintenanceHelpOk returns a tuple with the MaintenanceHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMaintenanceHelpOk() (*string, bool) {
	if o == nil || IsNil(o.MaintenanceHelp) {
		return nil, false
	}
	return o.MaintenanceHelp, true
}

// HasMaintenanceHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasMaintenanceHelp() bool {
	if o != nil && !IsNil(o.MaintenanceHelp) {
		return true
	}

	return false
}

// SetMaintenanceHelp gets a reference to the given string and assigns it to the MaintenanceHelp field.
func (o *LanguagePackData) SetMaintenanceHelp(v string) {
	o.MaintenanceHelp = &v
}

// GetMaintenanceMaintenanceUnconfirmedOptins returns the MaintenanceMaintenanceUnconfirmedOptins field value if set, zero value otherwise.
func (o *LanguagePackData) GetMaintenanceMaintenanceUnconfirmedOptins() string {
	if o == nil || IsNil(o.MaintenanceMaintenanceUnconfirmedOptins) {
		var ret string
		return ret
	}
	return *o.MaintenanceMaintenanceUnconfirmedOptins
}

// GetMaintenanceMaintenanceUnconfirmedOptinsOk returns a tuple with the MaintenanceMaintenanceUnconfirmedOptins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMaintenanceMaintenanceUnconfirmedOptinsOk() (*string, bool) {
	if o == nil || IsNil(o.MaintenanceMaintenanceUnconfirmedOptins) {
		return nil, false
	}
	return o.MaintenanceMaintenanceUnconfirmedOptins, true
}

// HasMaintenanceMaintenanceUnconfirmedOptins returns a boolean if a field has been set.
func (o *LanguagePackData) HasMaintenanceMaintenanceUnconfirmedOptins() bool {
	if o != nil && !IsNil(o.MaintenanceMaintenanceUnconfirmedOptins) {
		return true
	}

	return false
}

// SetMaintenanceMaintenanceUnconfirmedOptins gets a reference to the given string and assigns it to the MaintenanceMaintenanceUnconfirmedOptins field.
func (o *LanguagePackData) SetMaintenanceMaintenanceUnconfirmedOptins(v string) {
	o.MaintenanceMaintenanceUnconfirmedOptins = &v
}

// GetMaintenanceOlderThan returns the MaintenanceOlderThan field value if set, zero value otherwise.
func (o *LanguagePackData) GetMaintenanceOlderThan() string {
	if o == nil || IsNil(o.MaintenanceOlderThan) {
		var ret string
		return ret
	}
	return *o.MaintenanceOlderThan
}

// GetMaintenanceOlderThanOk returns a tuple with the MaintenanceOlderThan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMaintenanceOlderThanOk() (*string, bool) {
	if o == nil || IsNil(o.MaintenanceOlderThan) {
		return nil, false
	}
	return o.MaintenanceOlderThan, true
}

// HasMaintenanceOlderThan returns a boolean if a field has been set.
func (o *LanguagePackData) HasMaintenanceOlderThan() bool {
	if o != nil && !IsNil(o.MaintenanceOlderThan) {
		return true
	}

	return false
}

// SetMaintenanceOlderThan gets a reference to the given string and assigns it to the MaintenanceOlderThan field.
func (o *LanguagePackData) SetMaintenanceOlderThan(v string) {
	o.MaintenanceOlderThan = &v
}

// GetMaintenanceTitle returns the MaintenanceTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetMaintenanceTitle() string {
	if o == nil || IsNil(o.MaintenanceTitle) {
		var ret string
		return ret
	}
	return *o.MaintenanceTitle
}

// GetMaintenanceTitleOk returns a tuple with the MaintenanceTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMaintenanceTitleOk() (*string, bool) {
	if o == nil || IsNil(o.MaintenanceTitle) {
		return nil, false
	}
	return o.MaintenanceTitle, true
}

// HasMaintenanceTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasMaintenanceTitle() bool {
	if o != nil && !IsNil(o.MaintenanceTitle) {
		return true
	}

	return false
}

// SetMaintenanceTitle gets a reference to the given string and assigns it to the MaintenanceTitle field.
func (o *LanguagePackData) SetMaintenanceTitle(v string) {
	o.MaintenanceTitle = &v
}

// GetMaintenanceUnconfirmedSubs returns the MaintenanceUnconfirmedSubs field value if set, zero value otherwise.
func (o *LanguagePackData) GetMaintenanceUnconfirmedSubs() string {
	if o == nil || IsNil(o.MaintenanceUnconfirmedSubs) {
		var ret string
		return ret
	}
	return *o.MaintenanceUnconfirmedSubs
}

// GetMaintenanceUnconfirmedSubsOk returns a tuple with the MaintenanceUnconfirmedSubs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMaintenanceUnconfirmedSubsOk() (*string, bool) {
	if o == nil || IsNil(o.MaintenanceUnconfirmedSubs) {
		return nil, false
	}
	return o.MaintenanceUnconfirmedSubs, true
}

// HasMaintenanceUnconfirmedSubs returns a boolean if a field has been set.
func (o *LanguagePackData) HasMaintenanceUnconfirmedSubs() bool {
	if o != nil && !IsNil(o.MaintenanceUnconfirmedSubs) {
		return true
	}

	return false
}

// SetMaintenanceUnconfirmedSubs gets a reference to the given string and assigns it to the MaintenanceUnconfirmedSubs field.
func (o *LanguagePackData) SetMaintenanceUnconfirmedSubs(v string) {
	o.MaintenanceUnconfirmedSubs = &v
}

// GetMediaErrorReadingFile returns the MediaErrorReadingFile field value if set, zero value otherwise.
func (o *LanguagePackData) GetMediaErrorReadingFile() string {
	if o == nil || IsNil(o.MediaErrorReadingFile) {
		var ret string
		return ret
	}
	return *o.MediaErrorReadingFile
}

// GetMediaErrorReadingFileOk returns a tuple with the MediaErrorReadingFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMediaErrorReadingFileOk() (*string, bool) {
	if o == nil || IsNil(o.MediaErrorReadingFile) {
		return nil, false
	}
	return o.MediaErrorReadingFile, true
}

// HasMediaErrorReadingFile returns a boolean if a field has been set.
func (o *LanguagePackData) HasMediaErrorReadingFile() bool {
	if o != nil && !IsNil(o.MediaErrorReadingFile) {
		return true
	}

	return false
}

// SetMediaErrorReadingFile gets a reference to the given string and assigns it to the MediaErrorReadingFile field.
func (o *LanguagePackData) SetMediaErrorReadingFile(v string) {
	o.MediaErrorReadingFile = &v
}

// GetMediaErrorResizing returns the MediaErrorResizing field value if set, zero value otherwise.
func (o *LanguagePackData) GetMediaErrorResizing() string {
	if o == nil || IsNil(o.MediaErrorResizing) {
		var ret string
		return ret
	}
	return *o.MediaErrorResizing
}

// GetMediaErrorResizingOk returns a tuple with the MediaErrorResizing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMediaErrorResizingOk() (*string, bool) {
	if o == nil || IsNil(o.MediaErrorResizing) {
		return nil, false
	}
	return o.MediaErrorResizing, true
}

// HasMediaErrorResizing returns a boolean if a field has been set.
func (o *LanguagePackData) HasMediaErrorResizing() bool {
	if o != nil && !IsNil(o.MediaErrorResizing) {
		return true
	}

	return false
}

// SetMediaErrorResizing gets a reference to the given string and assigns it to the MediaErrorResizing field.
func (o *LanguagePackData) SetMediaErrorResizing(v string) {
	o.MediaErrorResizing = &v
}

// GetMediaErrorSavingThumbnail returns the MediaErrorSavingThumbnail field value if set, zero value otherwise.
func (o *LanguagePackData) GetMediaErrorSavingThumbnail() string {
	if o == nil || IsNil(o.MediaErrorSavingThumbnail) {
		var ret string
		return ret
	}
	return *o.MediaErrorSavingThumbnail
}

// GetMediaErrorSavingThumbnailOk returns a tuple with the MediaErrorSavingThumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMediaErrorSavingThumbnailOk() (*string, bool) {
	if o == nil || IsNil(o.MediaErrorSavingThumbnail) {
		return nil, false
	}
	return o.MediaErrorSavingThumbnail, true
}

// HasMediaErrorSavingThumbnail returns a boolean if a field has been set.
func (o *LanguagePackData) HasMediaErrorSavingThumbnail() bool {
	if o != nil && !IsNil(o.MediaErrorSavingThumbnail) {
		return true
	}

	return false
}

// SetMediaErrorSavingThumbnail gets a reference to the given string and assigns it to the MediaErrorSavingThumbnail field.
func (o *LanguagePackData) SetMediaErrorSavingThumbnail(v string) {
	o.MediaErrorSavingThumbnail = &v
}

// GetMediaErrorUploading returns the MediaErrorUploading field value if set, zero value otherwise.
func (o *LanguagePackData) GetMediaErrorUploading() string {
	if o == nil || IsNil(o.MediaErrorUploading) {
		var ret string
		return ret
	}
	return *o.MediaErrorUploading
}

// GetMediaErrorUploadingOk returns a tuple with the MediaErrorUploading field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMediaErrorUploadingOk() (*string, bool) {
	if o == nil || IsNil(o.MediaErrorUploading) {
		return nil, false
	}
	return o.MediaErrorUploading, true
}

// HasMediaErrorUploading returns a boolean if a field has been set.
func (o *LanguagePackData) HasMediaErrorUploading() bool {
	if o != nil && !IsNil(o.MediaErrorUploading) {
		return true
	}

	return false
}

// SetMediaErrorUploading gets a reference to the given string and assigns it to the MediaErrorUploading field.
func (o *LanguagePackData) SetMediaErrorUploading(v string) {
	o.MediaErrorUploading = &v
}

// GetMediaInvalidFile returns the MediaInvalidFile field value if set, zero value otherwise.
func (o *LanguagePackData) GetMediaInvalidFile() string {
	if o == nil || IsNil(o.MediaInvalidFile) {
		var ret string
		return ret
	}
	return *o.MediaInvalidFile
}

// GetMediaInvalidFileOk returns a tuple with the MediaInvalidFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMediaInvalidFileOk() (*string, bool) {
	if o == nil || IsNil(o.MediaInvalidFile) {
		return nil, false
	}
	return o.MediaInvalidFile, true
}

// HasMediaInvalidFile returns a boolean if a field has been set.
func (o *LanguagePackData) HasMediaInvalidFile() bool {
	if o != nil && !IsNil(o.MediaInvalidFile) {
		return true
	}

	return false
}

// SetMediaInvalidFile gets a reference to the given string and assigns it to the MediaInvalidFile field.
func (o *LanguagePackData) SetMediaInvalidFile(v string) {
	o.MediaInvalidFile = &v
}

// GetMediaTitle returns the MediaTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetMediaTitle() string {
	if o == nil || IsNil(o.MediaTitle) {
		var ret string
		return ret
	}
	return *o.MediaTitle
}

// GetMediaTitleOk returns a tuple with the MediaTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMediaTitleOk() (*string, bool) {
	if o == nil || IsNil(o.MediaTitle) {
		return nil, false
	}
	return o.MediaTitle, true
}

// HasMediaTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasMediaTitle() bool {
	if o != nil && !IsNil(o.MediaTitle) {
		return true
	}

	return false
}

// SetMediaTitle gets a reference to the given string and assigns it to the MediaTitle field.
func (o *LanguagePackData) SetMediaTitle(v string) {
	o.MediaTitle = &v
}

// GetMediaUnsupportedFileType returns the MediaUnsupportedFileType field value if set, zero value otherwise.
func (o *LanguagePackData) GetMediaUnsupportedFileType() string {
	if o == nil || IsNil(o.MediaUnsupportedFileType) {
		var ret string
		return ret
	}
	return *o.MediaUnsupportedFileType
}

// GetMediaUnsupportedFileTypeOk returns a tuple with the MediaUnsupportedFileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMediaUnsupportedFileTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MediaUnsupportedFileType) {
		return nil, false
	}
	return o.MediaUnsupportedFileType, true
}

// HasMediaUnsupportedFileType returns a boolean if a field has been set.
func (o *LanguagePackData) HasMediaUnsupportedFileType() bool {
	if o != nil && !IsNil(o.MediaUnsupportedFileType) {
		return true
	}

	return false
}

// SetMediaUnsupportedFileType gets a reference to the given string and assigns it to the MediaUnsupportedFileType field.
func (o *LanguagePackData) SetMediaUnsupportedFileType(v string) {
	o.MediaUnsupportedFileType = &v
}

// GetMediaUpload returns the MediaUpload field value if set, zero value otherwise.
func (o *LanguagePackData) GetMediaUpload() string {
	if o == nil || IsNil(o.MediaUpload) {
		var ret string
		return ret
	}
	return *o.MediaUpload
}

// GetMediaUploadOk returns a tuple with the MediaUpload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMediaUploadOk() (*string, bool) {
	if o == nil || IsNil(o.MediaUpload) {
		return nil, false
	}
	return o.MediaUpload, true
}

// HasMediaUpload returns a boolean if a field has been set.
func (o *LanguagePackData) HasMediaUpload() bool {
	if o != nil && !IsNil(o.MediaUpload) {
		return true
	}

	return false
}

// SetMediaUpload gets a reference to the given string and assigns it to the MediaUpload field.
func (o *LanguagePackData) SetMediaUpload(v string) {
	o.MediaUpload = &v
}

// GetMediaUploadHelp returns the MediaUploadHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetMediaUploadHelp() string {
	if o == nil || IsNil(o.MediaUploadHelp) {
		var ret string
		return ret
	}
	return *o.MediaUploadHelp
}

// GetMediaUploadHelpOk returns a tuple with the MediaUploadHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMediaUploadHelpOk() (*string, bool) {
	if o == nil || IsNil(o.MediaUploadHelp) {
		return nil, false
	}
	return o.MediaUploadHelp, true
}

// HasMediaUploadHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasMediaUploadHelp() bool {
	if o != nil && !IsNil(o.MediaUploadHelp) {
		return true
	}

	return false
}

// SetMediaUploadHelp gets a reference to the given string and assigns it to the MediaUploadHelp field.
func (o *LanguagePackData) SetMediaUploadHelp(v string) {
	o.MediaUploadHelp = &v
}

// GetMediaUploadImage returns the MediaUploadImage field value if set, zero value otherwise.
func (o *LanguagePackData) GetMediaUploadImage() string {
	if o == nil || IsNil(o.MediaUploadImage) {
		var ret string
		return ret
	}
	return *o.MediaUploadImage
}

// GetMediaUploadImageOk returns a tuple with the MediaUploadImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMediaUploadImageOk() (*string, bool) {
	if o == nil || IsNil(o.MediaUploadImage) {
		return nil, false
	}
	return o.MediaUploadImage, true
}

// HasMediaUploadImage returns a boolean if a field has been set.
func (o *LanguagePackData) HasMediaUploadImage() bool {
	if o != nil && !IsNil(o.MediaUploadImage) {
		return true
	}

	return false
}

// SetMediaUploadImage gets a reference to the given string and assigns it to the MediaUploadImage field.
func (o *LanguagePackData) SetMediaUploadImage(v string) {
	o.MediaUploadImage = &v
}

// GetMenuAllCampaigns returns the MenuAllCampaigns field value if set, zero value otherwise.
func (o *LanguagePackData) GetMenuAllCampaigns() string {
	if o == nil || IsNil(o.MenuAllCampaigns) {
		var ret string
		return ret
	}
	return *o.MenuAllCampaigns
}

// GetMenuAllCampaignsOk returns a tuple with the MenuAllCampaigns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMenuAllCampaignsOk() (*string, bool) {
	if o == nil || IsNil(o.MenuAllCampaigns) {
		return nil, false
	}
	return o.MenuAllCampaigns, true
}

// HasMenuAllCampaigns returns a boolean if a field has been set.
func (o *LanguagePackData) HasMenuAllCampaigns() bool {
	if o != nil && !IsNil(o.MenuAllCampaigns) {
		return true
	}

	return false
}

// SetMenuAllCampaigns gets a reference to the given string and assigns it to the MenuAllCampaigns field.
func (o *LanguagePackData) SetMenuAllCampaigns(v string) {
	o.MenuAllCampaigns = &v
}

// GetMenuAllLists returns the MenuAllLists field value if set, zero value otherwise.
func (o *LanguagePackData) GetMenuAllLists() string {
	if o == nil || IsNil(o.MenuAllLists) {
		var ret string
		return ret
	}
	return *o.MenuAllLists
}

// GetMenuAllListsOk returns a tuple with the MenuAllLists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMenuAllListsOk() (*string, bool) {
	if o == nil || IsNil(o.MenuAllLists) {
		return nil, false
	}
	return o.MenuAllLists, true
}

// HasMenuAllLists returns a boolean if a field has been set.
func (o *LanguagePackData) HasMenuAllLists() bool {
	if o != nil && !IsNil(o.MenuAllLists) {
		return true
	}

	return false
}

// SetMenuAllLists gets a reference to the given string and assigns it to the MenuAllLists field.
func (o *LanguagePackData) SetMenuAllLists(v string) {
	o.MenuAllLists = &v
}

// GetMenuAllSubscribers returns the MenuAllSubscribers field value if set, zero value otherwise.
func (o *LanguagePackData) GetMenuAllSubscribers() string {
	if o == nil || IsNil(o.MenuAllSubscribers) {
		var ret string
		return ret
	}
	return *o.MenuAllSubscribers
}

// GetMenuAllSubscribersOk returns a tuple with the MenuAllSubscribers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMenuAllSubscribersOk() (*string, bool) {
	if o == nil || IsNil(o.MenuAllSubscribers) {
		return nil, false
	}
	return o.MenuAllSubscribers, true
}

// HasMenuAllSubscribers returns a boolean if a field has been set.
func (o *LanguagePackData) HasMenuAllSubscribers() bool {
	if o != nil && !IsNil(o.MenuAllSubscribers) {
		return true
	}

	return false
}

// SetMenuAllSubscribers gets a reference to the given string and assigns it to the MenuAllSubscribers field.
func (o *LanguagePackData) SetMenuAllSubscribers(v string) {
	o.MenuAllSubscribers = &v
}

// GetMenuDashboard returns the MenuDashboard field value if set, zero value otherwise.
func (o *LanguagePackData) GetMenuDashboard() string {
	if o == nil || IsNil(o.MenuDashboard) {
		var ret string
		return ret
	}
	return *o.MenuDashboard
}

// GetMenuDashboardOk returns a tuple with the MenuDashboard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMenuDashboardOk() (*string, bool) {
	if o == nil || IsNil(o.MenuDashboard) {
		return nil, false
	}
	return o.MenuDashboard, true
}

// HasMenuDashboard returns a boolean if a field has been set.
func (o *LanguagePackData) HasMenuDashboard() bool {
	if o != nil && !IsNil(o.MenuDashboard) {
		return true
	}

	return false
}

// SetMenuDashboard gets a reference to the given string and assigns it to the MenuDashboard field.
func (o *LanguagePackData) SetMenuDashboard(v string) {
	o.MenuDashboard = &v
}

// GetMenuForms returns the MenuForms field value if set, zero value otherwise.
func (o *LanguagePackData) GetMenuForms() string {
	if o == nil || IsNil(o.MenuForms) {
		var ret string
		return ret
	}
	return *o.MenuForms
}

// GetMenuFormsOk returns a tuple with the MenuForms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMenuFormsOk() (*string, bool) {
	if o == nil || IsNil(o.MenuForms) {
		return nil, false
	}
	return o.MenuForms, true
}

// HasMenuForms returns a boolean if a field has been set.
func (o *LanguagePackData) HasMenuForms() bool {
	if o != nil && !IsNil(o.MenuForms) {
		return true
	}

	return false
}

// SetMenuForms gets a reference to the given string and assigns it to the MenuForms field.
func (o *LanguagePackData) SetMenuForms(v string) {
	o.MenuForms = &v
}

// GetMenuImport returns the MenuImport field value if set, zero value otherwise.
func (o *LanguagePackData) GetMenuImport() string {
	if o == nil || IsNil(o.MenuImport) {
		var ret string
		return ret
	}
	return *o.MenuImport
}

// GetMenuImportOk returns a tuple with the MenuImport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMenuImportOk() (*string, bool) {
	if o == nil || IsNil(o.MenuImport) {
		return nil, false
	}
	return o.MenuImport, true
}

// HasMenuImport returns a boolean if a field has been set.
func (o *LanguagePackData) HasMenuImport() bool {
	if o != nil && !IsNil(o.MenuImport) {
		return true
	}

	return false
}

// SetMenuImport gets a reference to the given string and assigns it to the MenuImport field.
func (o *LanguagePackData) SetMenuImport(v string) {
	o.MenuImport = &v
}

// GetMenuLogs returns the MenuLogs field value if set, zero value otherwise.
func (o *LanguagePackData) GetMenuLogs() string {
	if o == nil || IsNil(o.MenuLogs) {
		var ret string
		return ret
	}
	return *o.MenuLogs
}

// GetMenuLogsOk returns a tuple with the MenuLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMenuLogsOk() (*string, bool) {
	if o == nil || IsNil(o.MenuLogs) {
		return nil, false
	}
	return o.MenuLogs, true
}

// HasMenuLogs returns a boolean if a field has been set.
func (o *LanguagePackData) HasMenuLogs() bool {
	if o != nil && !IsNil(o.MenuLogs) {
		return true
	}

	return false
}

// SetMenuLogs gets a reference to the given string and assigns it to the MenuLogs field.
func (o *LanguagePackData) SetMenuLogs(v string) {
	o.MenuLogs = &v
}

// GetMenuMaintenance returns the MenuMaintenance field value if set, zero value otherwise.
func (o *LanguagePackData) GetMenuMaintenance() string {
	if o == nil || IsNil(o.MenuMaintenance) {
		var ret string
		return ret
	}
	return *o.MenuMaintenance
}

// GetMenuMaintenanceOk returns a tuple with the MenuMaintenance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMenuMaintenanceOk() (*string, bool) {
	if o == nil || IsNil(o.MenuMaintenance) {
		return nil, false
	}
	return o.MenuMaintenance, true
}

// HasMenuMaintenance returns a boolean if a field has been set.
func (o *LanguagePackData) HasMenuMaintenance() bool {
	if o != nil && !IsNil(o.MenuMaintenance) {
		return true
	}

	return false
}

// SetMenuMaintenance gets a reference to the given string and assigns it to the MenuMaintenance field.
func (o *LanguagePackData) SetMenuMaintenance(v string) {
	o.MenuMaintenance = &v
}

// GetMenuMedia returns the MenuMedia field value if set, zero value otherwise.
func (o *LanguagePackData) GetMenuMedia() string {
	if o == nil || IsNil(o.MenuMedia) {
		var ret string
		return ret
	}
	return *o.MenuMedia
}

// GetMenuMediaOk returns a tuple with the MenuMedia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMenuMediaOk() (*string, bool) {
	if o == nil || IsNil(o.MenuMedia) {
		return nil, false
	}
	return o.MenuMedia, true
}

// HasMenuMedia returns a boolean if a field has been set.
func (o *LanguagePackData) HasMenuMedia() bool {
	if o != nil && !IsNil(o.MenuMedia) {
		return true
	}

	return false
}

// SetMenuMedia gets a reference to the given string and assigns it to the MenuMedia field.
func (o *LanguagePackData) SetMenuMedia(v string) {
	o.MenuMedia = &v
}

// GetMenuNewCampaign returns the MenuNewCampaign field value if set, zero value otherwise.
func (o *LanguagePackData) GetMenuNewCampaign() string {
	if o == nil || IsNil(o.MenuNewCampaign) {
		var ret string
		return ret
	}
	return *o.MenuNewCampaign
}

// GetMenuNewCampaignOk returns a tuple with the MenuNewCampaign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMenuNewCampaignOk() (*string, bool) {
	if o == nil || IsNil(o.MenuNewCampaign) {
		return nil, false
	}
	return o.MenuNewCampaign, true
}

// HasMenuNewCampaign returns a boolean if a field has been set.
func (o *LanguagePackData) HasMenuNewCampaign() bool {
	if o != nil && !IsNil(o.MenuNewCampaign) {
		return true
	}

	return false
}

// SetMenuNewCampaign gets a reference to the given string and assigns it to the MenuNewCampaign field.
func (o *LanguagePackData) SetMenuNewCampaign(v string) {
	o.MenuNewCampaign = &v
}

// GetMenuSettings returns the MenuSettings field value if set, zero value otherwise.
func (o *LanguagePackData) GetMenuSettings() string {
	if o == nil || IsNil(o.MenuSettings) {
		var ret string
		return ret
	}
	return *o.MenuSettings
}

// GetMenuSettingsOk returns a tuple with the MenuSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetMenuSettingsOk() (*string, bool) {
	if o == nil || IsNil(o.MenuSettings) {
		return nil, false
	}
	return o.MenuSettings, true
}

// HasMenuSettings returns a boolean if a field has been set.
func (o *LanguagePackData) HasMenuSettings() bool {
	if o != nil && !IsNil(o.MenuSettings) {
		return true
	}

	return false
}

// SetMenuSettings gets a reference to the given string and assigns it to the MenuSettings field.
func (o *LanguagePackData) SetMenuSettings(v string) {
	o.MenuSettings = &v
}

// GetPublicArchiveEmpty returns the PublicArchiveEmpty field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicArchiveEmpty() string {
	if o == nil || IsNil(o.PublicArchiveEmpty) {
		var ret string
		return ret
	}
	return *o.PublicArchiveEmpty
}

// GetPublicArchiveEmptyOk returns a tuple with the PublicArchiveEmpty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicArchiveEmptyOk() (*string, bool) {
	if o == nil || IsNil(o.PublicArchiveEmpty) {
		return nil, false
	}
	return o.PublicArchiveEmpty, true
}

// HasPublicArchiveEmpty returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicArchiveEmpty() bool {
	if o != nil && !IsNil(o.PublicArchiveEmpty) {
		return true
	}

	return false
}

// SetPublicArchiveEmpty gets a reference to the given string and assigns it to the PublicArchiveEmpty field.
func (o *LanguagePackData) SetPublicArchiveEmpty(v string) {
	o.PublicArchiveEmpty = &v
}

// GetPublicArchiveTitle returns the PublicArchiveTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicArchiveTitle() string {
	if o == nil || IsNil(o.PublicArchiveTitle) {
		var ret string
		return ret
	}
	return *o.PublicArchiveTitle
}

// GetPublicArchiveTitleOk returns a tuple with the PublicArchiveTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicArchiveTitleOk() (*string, bool) {
	if o == nil || IsNil(o.PublicArchiveTitle) {
		return nil, false
	}
	return o.PublicArchiveTitle, true
}

// HasPublicArchiveTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicArchiveTitle() bool {
	if o != nil && !IsNil(o.PublicArchiveTitle) {
		return true
	}

	return false
}

// SetPublicArchiveTitle gets a reference to the given string and assigns it to the PublicArchiveTitle field.
func (o *LanguagePackData) SetPublicArchiveTitle(v string) {
	o.PublicArchiveTitle = &v
}

// GetPublicBlocklisted returns the PublicBlocklisted field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicBlocklisted() string {
	if o == nil || IsNil(o.PublicBlocklisted) {
		var ret string
		return ret
	}
	return *o.PublicBlocklisted
}

// GetPublicBlocklistedOk returns a tuple with the PublicBlocklisted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicBlocklistedOk() (*string, bool) {
	if o == nil || IsNil(o.PublicBlocklisted) {
		return nil, false
	}
	return o.PublicBlocklisted, true
}

// HasPublicBlocklisted returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicBlocklisted() bool {
	if o != nil && !IsNil(o.PublicBlocklisted) {
		return true
	}

	return false
}

// SetPublicBlocklisted gets a reference to the given string and assigns it to the PublicBlocklisted field.
func (o *LanguagePackData) SetPublicBlocklisted(v string) {
	o.PublicBlocklisted = &v
}

// GetPublicCampaignNotFound returns the PublicCampaignNotFound field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicCampaignNotFound() string {
	if o == nil || IsNil(o.PublicCampaignNotFound) {
		var ret string
		return ret
	}
	return *o.PublicCampaignNotFound
}

// GetPublicCampaignNotFoundOk returns a tuple with the PublicCampaignNotFound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicCampaignNotFoundOk() (*string, bool) {
	if o == nil || IsNil(o.PublicCampaignNotFound) {
		return nil, false
	}
	return o.PublicCampaignNotFound, true
}

// HasPublicCampaignNotFound returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicCampaignNotFound() bool {
	if o != nil && !IsNil(o.PublicCampaignNotFound) {
		return true
	}

	return false
}

// SetPublicCampaignNotFound gets a reference to the given string and assigns it to the PublicCampaignNotFound field.
func (o *LanguagePackData) SetPublicCampaignNotFound(v string) {
	o.PublicCampaignNotFound = &v
}

// GetPublicConfirmOptinSubTitle returns the PublicConfirmOptinSubTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicConfirmOptinSubTitle() string {
	if o == nil || IsNil(o.PublicConfirmOptinSubTitle) {
		var ret string
		return ret
	}
	return *o.PublicConfirmOptinSubTitle
}

// GetPublicConfirmOptinSubTitleOk returns a tuple with the PublicConfirmOptinSubTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicConfirmOptinSubTitleOk() (*string, bool) {
	if o == nil || IsNil(o.PublicConfirmOptinSubTitle) {
		return nil, false
	}
	return o.PublicConfirmOptinSubTitle, true
}

// HasPublicConfirmOptinSubTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicConfirmOptinSubTitle() bool {
	if o != nil && !IsNil(o.PublicConfirmOptinSubTitle) {
		return true
	}

	return false
}

// SetPublicConfirmOptinSubTitle gets a reference to the given string and assigns it to the PublicConfirmOptinSubTitle field.
func (o *LanguagePackData) SetPublicConfirmOptinSubTitle(v string) {
	o.PublicConfirmOptinSubTitle = &v
}

// GetPublicConfirmSub returns the PublicConfirmSub field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicConfirmSub() string {
	if o == nil || IsNil(o.PublicConfirmSub) {
		var ret string
		return ret
	}
	return *o.PublicConfirmSub
}

// GetPublicConfirmSubOk returns a tuple with the PublicConfirmSub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicConfirmSubOk() (*string, bool) {
	if o == nil || IsNil(o.PublicConfirmSub) {
		return nil, false
	}
	return o.PublicConfirmSub, true
}

// HasPublicConfirmSub returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicConfirmSub() bool {
	if o != nil && !IsNil(o.PublicConfirmSub) {
		return true
	}

	return false
}

// SetPublicConfirmSub gets a reference to the given string and assigns it to the PublicConfirmSub field.
func (o *LanguagePackData) SetPublicConfirmSub(v string) {
	o.PublicConfirmSub = &v
}

// GetPublicConfirmSubInfo returns the PublicConfirmSubInfo field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicConfirmSubInfo() string {
	if o == nil || IsNil(o.PublicConfirmSubInfo) {
		var ret string
		return ret
	}
	return *o.PublicConfirmSubInfo
}

// GetPublicConfirmSubInfoOk returns a tuple with the PublicConfirmSubInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicConfirmSubInfoOk() (*string, bool) {
	if o == nil || IsNil(o.PublicConfirmSubInfo) {
		return nil, false
	}
	return o.PublicConfirmSubInfo, true
}

// HasPublicConfirmSubInfo returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicConfirmSubInfo() bool {
	if o != nil && !IsNil(o.PublicConfirmSubInfo) {
		return true
	}

	return false
}

// SetPublicConfirmSubInfo gets a reference to the given string and assigns it to the PublicConfirmSubInfo field.
func (o *LanguagePackData) SetPublicConfirmSubInfo(v string) {
	o.PublicConfirmSubInfo = &v
}

// GetPublicConfirmSubTitle returns the PublicConfirmSubTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicConfirmSubTitle() string {
	if o == nil || IsNil(o.PublicConfirmSubTitle) {
		var ret string
		return ret
	}
	return *o.PublicConfirmSubTitle
}

// GetPublicConfirmSubTitleOk returns a tuple with the PublicConfirmSubTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicConfirmSubTitleOk() (*string, bool) {
	if o == nil || IsNil(o.PublicConfirmSubTitle) {
		return nil, false
	}
	return o.PublicConfirmSubTitle, true
}

// HasPublicConfirmSubTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicConfirmSubTitle() bool {
	if o != nil && !IsNil(o.PublicConfirmSubTitle) {
		return true
	}

	return false
}

// SetPublicConfirmSubTitle gets a reference to the given string and assigns it to the PublicConfirmSubTitle field.
func (o *LanguagePackData) SetPublicConfirmSubTitle(v string) {
	o.PublicConfirmSubTitle = &v
}

// GetPublicDataRemoved returns the PublicDataRemoved field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicDataRemoved() string {
	if o == nil || IsNil(o.PublicDataRemoved) {
		var ret string
		return ret
	}
	return *o.PublicDataRemoved
}

// GetPublicDataRemovedOk returns a tuple with the PublicDataRemoved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicDataRemovedOk() (*string, bool) {
	if o == nil || IsNil(o.PublicDataRemoved) {
		return nil, false
	}
	return o.PublicDataRemoved, true
}

// HasPublicDataRemoved returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicDataRemoved() bool {
	if o != nil && !IsNil(o.PublicDataRemoved) {
		return true
	}

	return false
}

// SetPublicDataRemoved gets a reference to the given string and assigns it to the PublicDataRemoved field.
func (o *LanguagePackData) SetPublicDataRemoved(v string) {
	o.PublicDataRemoved = &v
}

// GetPublicDataRemovedTitle returns the PublicDataRemovedTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicDataRemovedTitle() string {
	if o == nil || IsNil(o.PublicDataRemovedTitle) {
		var ret string
		return ret
	}
	return *o.PublicDataRemovedTitle
}

// GetPublicDataRemovedTitleOk returns a tuple with the PublicDataRemovedTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicDataRemovedTitleOk() (*string, bool) {
	if o == nil || IsNil(o.PublicDataRemovedTitle) {
		return nil, false
	}
	return o.PublicDataRemovedTitle, true
}

// HasPublicDataRemovedTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicDataRemovedTitle() bool {
	if o != nil && !IsNil(o.PublicDataRemovedTitle) {
		return true
	}

	return false
}

// SetPublicDataRemovedTitle gets a reference to the given string and assigns it to the PublicDataRemovedTitle field.
func (o *LanguagePackData) SetPublicDataRemovedTitle(v string) {
	o.PublicDataRemovedTitle = &v
}

// GetPublicDataSent returns the PublicDataSent field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicDataSent() string {
	if o == nil || IsNil(o.PublicDataSent) {
		var ret string
		return ret
	}
	return *o.PublicDataSent
}

// GetPublicDataSentOk returns a tuple with the PublicDataSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicDataSentOk() (*string, bool) {
	if o == nil || IsNil(o.PublicDataSent) {
		return nil, false
	}
	return o.PublicDataSent, true
}

// HasPublicDataSent returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicDataSent() bool {
	if o != nil && !IsNil(o.PublicDataSent) {
		return true
	}

	return false
}

// SetPublicDataSent gets a reference to the given string and assigns it to the PublicDataSent field.
func (o *LanguagePackData) SetPublicDataSent(v string) {
	o.PublicDataSent = &v
}

// GetPublicDataSentTitle returns the PublicDataSentTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicDataSentTitle() string {
	if o == nil || IsNil(o.PublicDataSentTitle) {
		var ret string
		return ret
	}
	return *o.PublicDataSentTitle
}

// GetPublicDataSentTitleOk returns a tuple with the PublicDataSentTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicDataSentTitleOk() (*string, bool) {
	if o == nil || IsNil(o.PublicDataSentTitle) {
		return nil, false
	}
	return o.PublicDataSentTitle, true
}

// HasPublicDataSentTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicDataSentTitle() bool {
	if o != nil && !IsNil(o.PublicDataSentTitle) {
		return true
	}

	return false
}

// SetPublicDataSentTitle gets a reference to the given string and assigns it to the PublicDataSentTitle field.
func (o *LanguagePackData) SetPublicDataSentTitle(v string) {
	o.PublicDataSentTitle = &v
}

// GetPublicErrorFetchingCampaign returns the PublicErrorFetchingCampaign field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicErrorFetchingCampaign() string {
	if o == nil || IsNil(o.PublicErrorFetchingCampaign) {
		var ret string
		return ret
	}
	return *o.PublicErrorFetchingCampaign
}

// GetPublicErrorFetchingCampaignOk returns a tuple with the PublicErrorFetchingCampaign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicErrorFetchingCampaignOk() (*string, bool) {
	if o == nil || IsNil(o.PublicErrorFetchingCampaign) {
		return nil, false
	}
	return o.PublicErrorFetchingCampaign, true
}

// HasPublicErrorFetchingCampaign returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicErrorFetchingCampaign() bool {
	if o != nil && !IsNil(o.PublicErrorFetchingCampaign) {
		return true
	}

	return false
}

// SetPublicErrorFetchingCampaign gets a reference to the given string and assigns it to the PublicErrorFetchingCampaign field.
func (o *LanguagePackData) SetPublicErrorFetchingCampaign(v string) {
	o.PublicErrorFetchingCampaign = &v
}

// GetPublicErrorFetchingEmail returns the PublicErrorFetchingEmail field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicErrorFetchingEmail() string {
	if o == nil || IsNil(o.PublicErrorFetchingEmail) {
		var ret string
		return ret
	}
	return *o.PublicErrorFetchingEmail
}

// GetPublicErrorFetchingEmailOk returns a tuple with the PublicErrorFetchingEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicErrorFetchingEmailOk() (*string, bool) {
	if o == nil || IsNil(o.PublicErrorFetchingEmail) {
		return nil, false
	}
	return o.PublicErrorFetchingEmail, true
}

// HasPublicErrorFetchingEmail returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicErrorFetchingEmail() bool {
	if o != nil && !IsNil(o.PublicErrorFetchingEmail) {
		return true
	}

	return false
}

// SetPublicErrorFetchingEmail gets a reference to the given string and assigns it to the PublicErrorFetchingEmail field.
func (o *LanguagePackData) SetPublicErrorFetchingEmail(v string) {
	o.PublicErrorFetchingEmail = &v
}

// GetPublicErrorFetchingLists returns the PublicErrorFetchingLists field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicErrorFetchingLists() string {
	if o == nil || IsNil(o.PublicErrorFetchingLists) {
		var ret string
		return ret
	}
	return *o.PublicErrorFetchingLists
}

// GetPublicErrorFetchingListsOk returns a tuple with the PublicErrorFetchingLists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicErrorFetchingListsOk() (*string, bool) {
	if o == nil || IsNil(o.PublicErrorFetchingLists) {
		return nil, false
	}
	return o.PublicErrorFetchingLists, true
}

// HasPublicErrorFetchingLists returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicErrorFetchingLists() bool {
	if o != nil && !IsNil(o.PublicErrorFetchingLists) {
		return true
	}

	return false
}

// SetPublicErrorFetchingLists gets a reference to the given string and assigns it to the PublicErrorFetchingLists field.
func (o *LanguagePackData) SetPublicErrorFetchingLists(v string) {
	o.PublicErrorFetchingLists = &v
}

// GetPublicErrorProcessingRequest returns the PublicErrorProcessingRequest field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicErrorProcessingRequest() string {
	if o == nil || IsNil(o.PublicErrorProcessingRequest) {
		var ret string
		return ret
	}
	return *o.PublicErrorProcessingRequest
}

// GetPublicErrorProcessingRequestOk returns a tuple with the PublicErrorProcessingRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicErrorProcessingRequestOk() (*string, bool) {
	if o == nil || IsNil(o.PublicErrorProcessingRequest) {
		return nil, false
	}
	return o.PublicErrorProcessingRequest, true
}

// HasPublicErrorProcessingRequest returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicErrorProcessingRequest() bool {
	if o != nil && !IsNil(o.PublicErrorProcessingRequest) {
		return true
	}

	return false
}

// SetPublicErrorProcessingRequest gets a reference to the given string and assigns it to the PublicErrorProcessingRequest field.
func (o *LanguagePackData) SetPublicErrorProcessingRequest(v string) {
	o.PublicErrorProcessingRequest = &v
}

// GetPublicErrorTitle returns the PublicErrorTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicErrorTitle() string {
	if o == nil || IsNil(o.PublicErrorTitle) {
		var ret string
		return ret
	}
	return *o.PublicErrorTitle
}

// GetPublicErrorTitleOk returns a tuple with the PublicErrorTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicErrorTitleOk() (*string, bool) {
	if o == nil || IsNil(o.PublicErrorTitle) {
		return nil, false
	}
	return o.PublicErrorTitle, true
}

// HasPublicErrorTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicErrorTitle() bool {
	if o != nil && !IsNil(o.PublicErrorTitle) {
		return true
	}

	return false
}

// SetPublicErrorTitle gets a reference to the given string and assigns it to the PublicErrorTitle field.
func (o *LanguagePackData) SetPublicErrorTitle(v string) {
	o.PublicErrorTitle = &v
}

// GetPublicInvalidFeature returns the PublicInvalidFeature field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicInvalidFeature() string {
	if o == nil || IsNil(o.PublicInvalidFeature) {
		var ret string
		return ret
	}
	return *o.PublicInvalidFeature
}

// GetPublicInvalidFeatureOk returns a tuple with the PublicInvalidFeature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicInvalidFeatureOk() (*string, bool) {
	if o == nil || IsNil(o.PublicInvalidFeature) {
		return nil, false
	}
	return o.PublicInvalidFeature, true
}

// HasPublicInvalidFeature returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicInvalidFeature() bool {
	if o != nil && !IsNil(o.PublicInvalidFeature) {
		return true
	}

	return false
}

// SetPublicInvalidFeature gets a reference to the given string and assigns it to the PublicInvalidFeature field.
func (o *LanguagePackData) SetPublicInvalidFeature(v string) {
	o.PublicInvalidFeature = &v
}

// GetPublicInvalidLink returns the PublicInvalidLink field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicInvalidLink() string {
	if o == nil || IsNil(o.PublicInvalidLink) {
		var ret string
		return ret
	}
	return *o.PublicInvalidLink
}

// GetPublicInvalidLinkOk returns a tuple with the PublicInvalidLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicInvalidLinkOk() (*string, bool) {
	if o == nil || IsNil(o.PublicInvalidLink) {
		return nil, false
	}
	return o.PublicInvalidLink, true
}

// HasPublicInvalidLink returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicInvalidLink() bool {
	if o != nil && !IsNil(o.PublicInvalidLink) {
		return true
	}

	return false
}

// SetPublicInvalidLink gets a reference to the given string and assigns it to the PublicInvalidLink field.
func (o *LanguagePackData) SetPublicInvalidLink(v string) {
	o.PublicInvalidLink = &v
}

// GetPublicManagePrefs returns the PublicManagePrefs field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicManagePrefs() string {
	if o == nil || IsNil(o.PublicManagePrefs) {
		var ret string
		return ret
	}
	return *o.PublicManagePrefs
}

// GetPublicManagePrefsOk returns a tuple with the PublicManagePrefs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicManagePrefsOk() (*string, bool) {
	if o == nil || IsNil(o.PublicManagePrefs) {
		return nil, false
	}
	return o.PublicManagePrefs, true
}

// HasPublicManagePrefs returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicManagePrefs() bool {
	if o != nil && !IsNil(o.PublicManagePrefs) {
		return true
	}

	return false
}

// SetPublicManagePrefs gets a reference to the given string and assigns it to the PublicManagePrefs field.
func (o *LanguagePackData) SetPublicManagePrefs(v string) {
	o.PublicManagePrefs = &v
}

// GetPublicManagePrefsUnsub returns the PublicManagePrefsUnsub field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicManagePrefsUnsub() string {
	if o == nil || IsNil(o.PublicManagePrefsUnsub) {
		var ret string
		return ret
	}
	return *o.PublicManagePrefsUnsub
}

// GetPublicManagePrefsUnsubOk returns a tuple with the PublicManagePrefsUnsub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicManagePrefsUnsubOk() (*string, bool) {
	if o == nil || IsNil(o.PublicManagePrefsUnsub) {
		return nil, false
	}
	return o.PublicManagePrefsUnsub, true
}

// HasPublicManagePrefsUnsub returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicManagePrefsUnsub() bool {
	if o != nil && !IsNil(o.PublicManagePrefsUnsub) {
		return true
	}

	return false
}

// SetPublicManagePrefsUnsub gets a reference to the given string and assigns it to the PublicManagePrefsUnsub field.
func (o *LanguagePackData) SetPublicManagePrefsUnsub(v string) {
	o.PublicManagePrefsUnsub = &v
}

// GetPublicNoListsAvailable returns the PublicNoListsAvailable field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicNoListsAvailable() string {
	if o == nil || IsNil(o.PublicNoListsAvailable) {
		var ret string
		return ret
	}
	return *o.PublicNoListsAvailable
}

// GetPublicNoListsAvailableOk returns a tuple with the PublicNoListsAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicNoListsAvailableOk() (*string, bool) {
	if o == nil || IsNil(o.PublicNoListsAvailable) {
		return nil, false
	}
	return o.PublicNoListsAvailable, true
}

// HasPublicNoListsAvailable returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicNoListsAvailable() bool {
	if o != nil && !IsNil(o.PublicNoListsAvailable) {
		return true
	}

	return false
}

// SetPublicNoListsAvailable gets a reference to the given string and assigns it to the PublicNoListsAvailable field.
func (o *LanguagePackData) SetPublicNoListsAvailable(v string) {
	o.PublicNoListsAvailable = &v
}

// GetPublicNoListsSelected returns the PublicNoListsSelected field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicNoListsSelected() string {
	if o == nil || IsNil(o.PublicNoListsSelected) {
		var ret string
		return ret
	}
	return *o.PublicNoListsSelected
}

// GetPublicNoListsSelectedOk returns a tuple with the PublicNoListsSelected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicNoListsSelectedOk() (*string, bool) {
	if o == nil || IsNil(o.PublicNoListsSelected) {
		return nil, false
	}
	return o.PublicNoListsSelected, true
}

// HasPublicNoListsSelected returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicNoListsSelected() bool {
	if o != nil && !IsNil(o.PublicNoListsSelected) {
		return true
	}

	return false
}

// SetPublicNoListsSelected gets a reference to the given string and assigns it to the PublicNoListsSelected field.
func (o *LanguagePackData) SetPublicNoListsSelected(v string) {
	o.PublicNoListsSelected = &v
}

// GetPublicNoSubInfo returns the PublicNoSubInfo field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicNoSubInfo() string {
	if o == nil || IsNil(o.PublicNoSubInfo) {
		var ret string
		return ret
	}
	return *o.PublicNoSubInfo
}

// GetPublicNoSubInfoOk returns a tuple with the PublicNoSubInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicNoSubInfoOk() (*string, bool) {
	if o == nil || IsNil(o.PublicNoSubInfo) {
		return nil, false
	}
	return o.PublicNoSubInfo, true
}

// HasPublicNoSubInfo returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicNoSubInfo() bool {
	if o != nil && !IsNil(o.PublicNoSubInfo) {
		return true
	}

	return false
}

// SetPublicNoSubInfo gets a reference to the given string and assigns it to the PublicNoSubInfo field.
func (o *LanguagePackData) SetPublicNoSubInfo(v string) {
	o.PublicNoSubInfo = &v
}

// GetPublicNoSubTitle returns the PublicNoSubTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicNoSubTitle() string {
	if o == nil || IsNil(o.PublicNoSubTitle) {
		var ret string
		return ret
	}
	return *o.PublicNoSubTitle
}

// GetPublicNoSubTitleOk returns a tuple with the PublicNoSubTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicNoSubTitleOk() (*string, bool) {
	if o == nil || IsNil(o.PublicNoSubTitle) {
		return nil, false
	}
	return o.PublicNoSubTitle, true
}

// HasPublicNoSubTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicNoSubTitle() bool {
	if o != nil && !IsNil(o.PublicNoSubTitle) {
		return true
	}

	return false
}

// SetPublicNoSubTitle gets a reference to the given string and assigns it to the PublicNoSubTitle field.
func (o *LanguagePackData) SetPublicNoSubTitle(v string) {
	o.PublicNoSubTitle = &v
}

// GetPublicNotFoundTitle returns the PublicNotFoundTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicNotFoundTitle() string {
	if o == nil || IsNil(o.PublicNotFoundTitle) {
		var ret string
		return ret
	}
	return *o.PublicNotFoundTitle
}

// GetPublicNotFoundTitleOk returns a tuple with the PublicNotFoundTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicNotFoundTitleOk() (*string, bool) {
	if o == nil || IsNil(o.PublicNotFoundTitle) {
		return nil, false
	}
	return o.PublicNotFoundTitle, true
}

// HasPublicNotFoundTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicNotFoundTitle() bool {
	if o != nil && !IsNil(o.PublicNotFoundTitle) {
		return true
	}

	return false
}

// SetPublicNotFoundTitle gets a reference to the given string and assigns it to the PublicNotFoundTitle field.
func (o *LanguagePackData) SetPublicNotFoundTitle(v string) {
	o.PublicNotFoundTitle = &v
}

// GetPublicPrefsSaved returns the PublicPrefsSaved field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicPrefsSaved() string {
	if o == nil || IsNil(o.PublicPrefsSaved) {
		var ret string
		return ret
	}
	return *o.PublicPrefsSaved
}

// GetPublicPrefsSavedOk returns a tuple with the PublicPrefsSaved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicPrefsSavedOk() (*string, bool) {
	if o == nil || IsNil(o.PublicPrefsSaved) {
		return nil, false
	}
	return o.PublicPrefsSaved, true
}

// HasPublicPrefsSaved returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicPrefsSaved() bool {
	if o != nil && !IsNil(o.PublicPrefsSaved) {
		return true
	}

	return false
}

// SetPublicPrefsSaved gets a reference to the given string and assigns it to the PublicPrefsSaved field.
func (o *LanguagePackData) SetPublicPrefsSaved(v string) {
	o.PublicPrefsSaved = &v
}

// GetPublicPrivacyConfirmWipe returns the PublicPrivacyConfirmWipe field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicPrivacyConfirmWipe() string {
	if o == nil || IsNil(o.PublicPrivacyConfirmWipe) {
		var ret string
		return ret
	}
	return *o.PublicPrivacyConfirmWipe
}

// GetPublicPrivacyConfirmWipeOk returns a tuple with the PublicPrivacyConfirmWipe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicPrivacyConfirmWipeOk() (*string, bool) {
	if o == nil || IsNil(o.PublicPrivacyConfirmWipe) {
		return nil, false
	}
	return o.PublicPrivacyConfirmWipe, true
}

// HasPublicPrivacyConfirmWipe returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicPrivacyConfirmWipe() bool {
	if o != nil && !IsNil(o.PublicPrivacyConfirmWipe) {
		return true
	}

	return false
}

// SetPublicPrivacyConfirmWipe gets a reference to the given string and assigns it to the PublicPrivacyConfirmWipe field.
func (o *LanguagePackData) SetPublicPrivacyConfirmWipe(v string) {
	o.PublicPrivacyConfirmWipe = &v
}

// GetPublicPrivacyExport returns the PublicPrivacyExport field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicPrivacyExport() string {
	if o == nil || IsNil(o.PublicPrivacyExport) {
		var ret string
		return ret
	}
	return *o.PublicPrivacyExport
}

// GetPublicPrivacyExportOk returns a tuple with the PublicPrivacyExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicPrivacyExportOk() (*string, bool) {
	if o == nil || IsNil(o.PublicPrivacyExport) {
		return nil, false
	}
	return o.PublicPrivacyExport, true
}

// HasPublicPrivacyExport returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicPrivacyExport() bool {
	if o != nil && !IsNil(o.PublicPrivacyExport) {
		return true
	}

	return false
}

// SetPublicPrivacyExport gets a reference to the given string and assigns it to the PublicPrivacyExport field.
func (o *LanguagePackData) SetPublicPrivacyExport(v string) {
	o.PublicPrivacyExport = &v
}

// GetPublicPrivacyExportHelp returns the PublicPrivacyExportHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicPrivacyExportHelp() string {
	if o == nil || IsNil(o.PublicPrivacyExportHelp) {
		var ret string
		return ret
	}
	return *o.PublicPrivacyExportHelp
}

// GetPublicPrivacyExportHelpOk returns a tuple with the PublicPrivacyExportHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicPrivacyExportHelpOk() (*string, bool) {
	if o == nil || IsNil(o.PublicPrivacyExportHelp) {
		return nil, false
	}
	return o.PublicPrivacyExportHelp, true
}

// HasPublicPrivacyExportHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicPrivacyExportHelp() bool {
	if o != nil && !IsNil(o.PublicPrivacyExportHelp) {
		return true
	}

	return false
}

// SetPublicPrivacyExportHelp gets a reference to the given string and assigns it to the PublicPrivacyExportHelp field.
func (o *LanguagePackData) SetPublicPrivacyExportHelp(v string) {
	o.PublicPrivacyExportHelp = &v
}

// GetPublicPrivacyTitle returns the PublicPrivacyTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicPrivacyTitle() string {
	if o == nil || IsNil(o.PublicPrivacyTitle) {
		var ret string
		return ret
	}
	return *o.PublicPrivacyTitle
}

// GetPublicPrivacyTitleOk returns a tuple with the PublicPrivacyTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicPrivacyTitleOk() (*string, bool) {
	if o == nil || IsNil(o.PublicPrivacyTitle) {
		return nil, false
	}
	return o.PublicPrivacyTitle, true
}

// HasPublicPrivacyTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicPrivacyTitle() bool {
	if o != nil && !IsNil(o.PublicPrivacyTitle) {
		return true
	}

	return false
}

// SetPublicPrivacyTitle gets a reference to the given string and assigns it to the PublicPrivacyTitle field.
func (o *LanguagePackData) SetPublicPrivacyTitle(v string) {
	o.PublicPrivacyTitle = &v
}

// GetPublicPrivacyWipe returns the PublicPrivacyWipe field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicPrivacyWipe() string {
	if o == nil || IsNil(o.PublicPrivacyWipe) {
		var ret string
		return ret
	}
	return *o.PublicPrivacyWipe
}

// GetPublicPrivacyWipeOk returns a tuple with the PublicPrivacyWipe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicPrivacyWipeOk() (*string, bool) {
	if o == nil || IsNil(o.PublicPrivacyWipe) {
		return nil, false
	}
	return o.PublicPrivacyWipe, true
}

// HasPublicPrivacyWipe returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicPrivacyWipe() bool {
	if o != nil && !IsNil(o.PublicPrivacyWipe) {
		return true
	}

	return false
}

// SetPublicPrivacyWipe gets a reference to the given string and assigns it to the PublicPrivacyWipe field.
func (o *LanguagePackData) SetPublicPrivacyWipe(v string) {
	o.PublicPrivacyWipe = &v
}

// GetPublicPrivacyWipeHelp returns the PublicPrivacyWipeHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicPrivacyWipeHelp() string {
	if o == nil || IsNil(o.PublicPrivacyWipeHelp) {
		var ret string
		return ret
	}
	return *o.PublicPrivacyWipeHelp
}

// GetPublicPrivacyWipeHelpOk returns a tuple with the PublicPrivacyWipeHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicPrivacyWipeHelpOk() (*string, bool) {
	if o == nil || IsNil(o.PublicPrivacyWipeHelp) {
		return nil, false
	}
	return o.PublicPrivacyWipeHelp, true
}

// HasPublicPrivacyWipeHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicPrivacyWipeHelp() bool {
	if o != nil && !IsNil(o.PublicPrivacyWipeHelp) {
		return true
	}

	return false
}

// SetPublicPrivacyWipeHelp gets a reference to the given string and assigns it to the PublicPrivacyWipeHelp field.
func (o *LanguagePackData) SetPublicPrivacyWipeHelp(v string) {
	o.PublicPrivacyWipeHelp = &v
}

// GetPublicSub returns the PublicSub field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicSub() string {
	if o == nil || IsNil(o.PublicSub) {
		var ret string
		return ret
	}
	return *o.PublicSub
}

// GetPublicSubOk returns a tuple with the PublicSub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicSubOk() (*string, bool) {
	if o == nil || IsNil(o.PublicSub) {
		return nil, false
	}
	return o.PublicSub, true
}

// HasPublicSub returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicSub() bool {
	if o != nil && !IsNil(o.PublicSub) {
		return true
	}

	return false
}

// SetPublicSub gets a reference to the given string and assigns it to the PublicSub field.
func (o *LanguagePackData) SetPublicSub(v string) {
	o.PublicSub = &v
}

// GetPublicSubConfirmed returns the PublicSubConfirmed field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicSubConfirmed() string {
	if o == nil || IsNil(o.PublicSubConfirmed) {
		var ret string
		return ret
	}
	return *o.PublicSubConfirmed
}

// GetPublicSubConfirmedOk returns a tuple with the PublicSubConfirmed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicSubConfirmedOk() (*string, bool) {
	if o == nil || IsNil(o.PublicSubConfirmed) {
		return nil, false
	}
	return o.PublicSubConfirmed, true
}

// HasPublicSubConfirmed returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicSubConfirmed() bool {
	if o != nil && !IsNil(o.PublicSubConfirmed) {
		return true
	}

	return false
}

// SetPublicSubConfirmed gets a reference to the given string and assigns it to the PublicSubConfirmed field.
func (o *LanguagePackData) SetPublicSubConfirmed(v string) {
	o.PublicSubConfirmed = &v
}

// GetPublicSubConfirmedTitle returns the PublicSubConfirmedTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicSubConfirmedTitle() string {
	if o == nil || IsNil(o.PublicSubConfirmedTitle) {
		var ret string
		return ret
	}
	return *o.PublicSubConfirmedTitle
}

// GetPublicSubConfirmedTitleOk returns a tuple with the PublicSubConfirmedTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicSubConfirmedTitleOk() (*string, bool) {
	if o == nil || IsNil(o.PublicSubConfirmedTitle) {
		return nil, false
	}
	return o.PublicSubConfirmedTitle, true
}

// HasPublicSubConfirmedTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicSubConfirmedTitle() bool {
	if o != nil && !IsNil(o.PublicSubConfirmedTitle) {
		return true
	}

	return false
}

// SetPublicSubConfirmedTitle gets a reference to the given string and assigns it to the PublicSubConfirmedTitle field.
func (o *LanguagePackData) SetPublicSubConfirmedTitle(v string) {
	o.PublicSubConfirmedTitle = &v
}

// GetPublicSubName returns the PublicSubName field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicSubName() string {
	if o == nil || IsNil(o.PublicSubName) {
		var ret string
		return ret
	}
	return *o.PublicSubName
}

// GetPublicSubNameOk returns a tuple with the PublicSubName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicSubNameOk() (*string, bool) {
	if o == nil || IsNil(o.PublicSubName) {
		return nil, false
	}
	return o.PublicSubName, true
}

// HasPublicSubName returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicSubName() bool {
	if o != nil && !IsNil(o.PublicSubName) {
		return true
	}

	return false
}

// SetPublicSubName gets a reference to the given string and assigns it to the PublicSubName field.
func (o *LanguagePackData) SetPublicSubName(v string) {
	o.PublicSubName = &v
}

// GetPublicSubNotFound returns the PublicSubNotFound field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicSubNotFound() string {
	if o == nil || IsNil(o.PublicSubNotFound) {
		var ret string
		return ret
	}
	return *o.PublicSubNotFound
}

// GetPublicSubNotFoundOk returns a tuple with the PublicSubNotFound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicSubNotFoundOk() (*string, bool) {
	if o == nil || IsNil(o.PublicSubNotFound) {
		return nil, false
	}
	return o.PublicSubNotFound, true
}

// HasPublicSubNotFound returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicSubNotFound() bool {
	if o != nil && !IsNil(o.PublicSubNotFound) {
		return true
	}

	return false
}

// SetPublicSubNotFound gets a reference to the given string and assigns it to the PublicSubNotFound field.
func (o *LanguagePackData) SetPublicSubNotFound(v string) {
	o.PublicSubNotFound = &v
}

// GetPublicSubOptinPending returns the PublicSubOptinPending field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicSubOptinPending() string {
	if o == nil || IsNil(o.PublicSubOptinPending) {
		var ret string
		return ret
	}
	return *o.PublicSubOptinPending
}

// GetPublicSubOptinPendingOk returns a tuple with the PublicSubOptinPending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicSubOptinPendingOk() (*string, bool) {
	if o == nil || IsNil(o.PublicSubOptinPending) {
		return nil, false
	}
	return o.PublicSubOptinPending, true
}

// HasPublicSubOptinPending returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicSubOptinPending() bool {
	if o != nil && !IsNil(o.PublicSubOptinPending) {
		return true
	}

	return false
}

// SetPublicSubOptinPending gets a reference to the given string and assigns it to the PublicSubOptinPending field.
func (o *LanguagePackData) SetPublicSubOptinPending(v string) {
	o.PublicSubOptinPending = &v
}

// GetPublicSubPrivateList returns the PublicSubPrivateList field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicSubPrivateList() string {
	if o == nil || IsNil(o.PublicSubPrivateList) {
		var ret string
		return ret
	}
	return *o.PublicSubPrivateList
}

// GetPublicSubPrivateListOk returns a tuple with the PublicSubPrivateList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicSubPrivateListOk() (*string, bool) {
	if o == nil || IsNil(o.PublicSubPrivateList) {
		return nil, false
	}
	return o.PublicSubPrivateList, true
}

// HasPublicSubPrivateList returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicSubPrivateList() bool {
	if o != nil && !IsNil(o.PublicSubPrivateList) {
		return true
	}

	return false
}

// SetPublicSubPrivateList gets a reference to the given string and assigns it to the PublicSubPrivateList field.
func (o *LanguagePackData) SetPublicSubPrivateList(v string) {
	o.PublicSubPrivateList = &v
}

// GetPublicSubTitle returns the PublicSubTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicSubTitle() string {
	if o == nil || IsNil(o.PublicSubTitle) {
		var ret string
		return ret
	}
	return *o.PublicSubTitle
}

// GetPublicSubTitleOk returns a tuple with the PublicSubTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicSubTitleOk() (*string, bool) {
	if o == nil || IsNil(o.PublicSubTitle) {
		return nil, false
	}
	return o.PublicSubTitle, true
}

// HasPublicSubTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicSubTitle() bool {
	if o != nil && !IsNil(o.PublicSubTitle) {
		return true
	}

	return false
}

// SetPublicSubTitle gets a reference to the given string and assigns it to the PublicSubTitle field.
func (o *LanguagePackData) SetPublicSubTitle(v string) {
	o.PublicSubTitle = &v
}

// GetPublicUnsub returns the PublicUnsub field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicUnsub() string {
	if o == nil || IsNil(o.PublicUnsub) {
		var ret string
		return ret
	}
	return *o.PublicUnsub
}

// GetPublicUnsubOk returns a tuple with the PublicUnsub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicUnsubOk() (*string, bool) {
	if o == nil || IsNil(o.PublicUnsub) {
		return nil, false
	}
	return o.PublicUnsub, true
}

// HasPublicUnsub returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicUnsub() bool {
	if o != nil && !IsNil(o.PublicUnsub) {
		return true
	}

	return false
}

// SetPublicUnsub gets a reference to the given string and assigns it to the PublicUnsub field.
func (o *LanguagePackData) SetPublicUnsub(v string) {
	o.PublicUnsub = &v
}

// GetPublicUnsubFull returns the PublicUnsubFull field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicUnsubFull() string {
	if o == nil || IsNil(o.PublicUnsubFull) {
		var ret string
		return ret
	}
	return *o.PublicUnsubFull
}

// GetPublicUnsubFullOk returns a tuple with the PublicUnsubFull field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicUnsubFullOk() (*string, bool) {
	if o == nil || IsNil(o.PublicUnsubFull) {
		return nil, false
	}
	return o.PublicUnsubFull, true
}

// HasPublicUnsubFull returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicUnsubFull() bool {
	if o != nil && !IsNil(o.PublicUnsubFull) {
		return true
	}

	return false
}

// SetPublicUnsubFull gets a reference to the given string and assigns it to the PublicUnsubFull field.
func (o *LanguagePackData) SetPublicUnsubFull(v string) {
	o.PublicUnsubFull = &v
}

// GetPublicUnsubHelp returns the PublicUnsubHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicUnsubHelp() string {
	if o == nil || IsNil(o.PublicUnsubHelp) {
		var ret string
		return ret
	}
	return *o.PublicUnsubHelp
}

// GetPublicUnsubHelpOk returns a tuple with the PublicUnsubHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicUnsubHelpOk() (*string, bool) {
	if o == nil || IsNil(o.PublicUnsubHelp) {
		return nil, false
	}
	return o.PublicUnsubHelp, true
}

// HasPublicUnsubHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicUnsubHelp() bool {
	if o != nil && !IsNil(o.PublicUnsubHelp) {
		return true
	}

	return false
}

// SetPublicUnsubHelp gets a reference to the given string and assigns it to the PublicUnsubHelp field.
func (o *LanguagePackData) SetPublicUnsubHelp(v string) {
	o.PublicUnsubHelp = &v
}

// GetPublicUnsubTitle returns the PublicUnsubTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicUnsubTitle() string {
	if o == nil || IsNil(o.PublicUnsubTitle) {
		var ret string
		return ret
	}
	return *o.PublicUnsubTitle
}

// GetPublicUnsubTitleOk returns a tuple with the PublicUnsubTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicUnsubTitleOk() (*string, bool) {
	if o == nil || IsNil(o.PublicUnsubTitle) {
		return nil, false
	}
	return o.PublicUnsubTitle, true
}

// HasPublicUnsubTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicUnsubTitle() bool {
	if o != nil && !IsNil(o.PublicUnsubTitle) {
		return true
	}

	return false
}

// SetPublicUnsubTitle gets a reference to the given string and assigns it to the PublicUnsubTitle field.
func (o *LanguagePackData) SetPublicUnsubTitle(v string) {
	o.PublicUnsubTitle = &v
}

// GetPublicUnsubbedInfo returns the PublicUnsubbedInfo field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicUnsubbedInfo() string {
	if o == nil || IsNil(o.PublicUnsubbedInfo) {
		var ret string
		return ret
	}
	return *o.PublicUnsubbedInfo
}

// GetPublicUnsubbedInfoOk returns a tuple with the PublicUnsubbedInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicUnsubbedInfoOk() (*string, bool) {
	if o == nil || IsNil(o.PublicUnsubbedInfo) {
		return nil, false
	}
	return o.PublicUnsubbedInfo, true
}

// HasPublicUnsubbedInfo returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicUnsubbedInfo() bool {
	if o != nil && !IsNil(o.PublicUnsubbedInfo) {
		return true
	}

	return false
}

// SetPublicUnsubbedInfo gets a reference to the given string and assigns it to the PublicUnsubbedInfo field.
func (o *LanguagePackData) SetPublicUnsubbedInfo(v string) {
	o.PublicUnsubbedInfo = &v
}

// GetPublicUnsubbedTitle returns the PublicUnsubbedTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicUnsubbedTitle() string {
	if o == nil || IsNil(o.PublicUnsubbedTitle) {
		var ret string
		return ret
	}
	return *o.PublicUnsubbedTitle
}

// GetPublicUnsubbedTitleOk returns a tuple with the PublicUnsubbedTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicUnsubbedTitleOk() (*string, bool) {
	if o == nil || IsNil(o.PublicUnsubbedTitle) {
		return nil, false
	}
	return o.PublicUnsubbedTitle, true
}

// HasPublicUnsubbedTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicUnsubbedTitle() bool {
	if o != nil && !IsNil(o.PublicUnsubbedTitle) {
		return true
	}

	return false
}

// SetPublicUnsubbedTitle gets a reference to the given string and assigns it to the PublicUnsubbedTitle field.
func (o *LanguagePackData) SetPublicUnsubbedTitle(v string) {
	o.PublicUnsubbedTitle = &v
}

// GetPublicUnsubscribeTitle returns the PublicUnsubscribeTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetPublicUnsubscribeTitle() string {
	if o == nil || IsNil(o.PublicUnsubscribeTitle) {
		var ret string
		return ret
	}
	return *o.PublicUnsubscribeTitle
}

// GetPublicUnsubscribeTitleOk returns a tuple with the PublicUnsubscribeTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetPublicUnsubscribeTitleOk() (*string, bool) {
	if o == nil || IsNil(o.PublicUnsubscribeTitle) {
		return nil, false
	}
	return o.PublicUnsubscribeTitle, true
}

// HasPublicUnsubscribeTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasPublicUnsubscribeTitle() bool {
	if o != nil && !IsNil(o.PublicUnsubscribeTitle) {
		return true
	}

	return false
}

// SetPublicUnsubscribeTitle gets a reference to the given string and assigns it to the PublicUnsubscribeTitle field.
func (o *LanguagePackData) SetPublicUnsubscribeTitle(v string) {
	o.PublicUnsubscribeTitle = &v
}

// GetSettingsAppearanceAdminHelp returns the SettingsAppearanceAdminHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsAppearanceAdminHelp() string {
	if o == nil || IsNil(o.SettingsAppearanceAdminHelp) {
		var ret string
		return ret
	}
	return *o.SettingsAppearanceAdminHelp
}

// GetSettingsAppearanceAdminHelpOk returns a tuple with the SettingsAppearanceAdminHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsAppearanceAdminHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsAppearanceAdminHelp) {
		return nil, false
	}
	return o.SettingsAppearanceAdminHelp, true
}

// HasSettingsAppearanceAdminHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsAppearanceAdminHelp() bool {
	if o != nil && !IsNil(o.SettingsAppearanceAdminHelp) {
		return true
	}

	return false
}

// SetSettingsAppearanceAdminHelp gets a reference to the given string and assigns it to the SettingsAppearanceAdminHelp field.
func (o *LanguagePackData) SetSettingsAppearanceAdminHelp(v string) {
	o.SettingsAppearanceAdminHelp = &v
}

// GetSettingsAppearanceAdminName returns the SettingsAppearanceAdminName field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsAppearanceAdminName() string {
	if o == nil || IsNil(o.SettingsAppearanceAdminName) {
		var ret string
		return ret
	}
	return *o.SettingsAppearanceAdminName
}

// GetSettingsAppearanceAdminNameOk returns a tuple with the SettingsAppearanceAdminName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsAppearanceAdminNameOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsAppearanceAdminName) {
		return nil, false
	}
	return o.SettingsAppearanceAdminName, true
}

// HasSettingsAppearanceAdminName returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsAppearanceAdminName() bool {
	if o != nil && !IsNil(o.SettingsAppearanceAdminName) {
		return true
	}

	return false
}

// SetSettingsAppearanceAdminName gets a reference to the given string and assigns it to the SettingsAppearanceAdminName field.
func (o *LanguagePackData) SetSettingsAppearanceAdminName(v string) {
	o.SettingsAppearanceAdminName = &v
}

// GetSettingsAppearanceCustomCSS returns the SettingsAppearanceCustomCSS field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsAppearanceCustomCSS() string {
	if o == nil || IsNil(o.SettingsAppearanceCustomCSS) {
		var ret string
		return ret
	}
	return *o.SettingsAppearanceCustomCSS
}

// GetSettingsAppearanceCustomCSSOk returns a tuple with the SettingsAppearanceCustomCSS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsAppearanceCustomCSSOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsAppearanceCustomCSS) {
		return nil, false
	}
	return o.SettingsAppearanceCustomCSS, true
}

// HasSettingsAppearanceCustomCSS returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsAppearanceCustomCSS() bool {
	if o != nil && !IsNil(o.SettingsAppearanceCustomCSS) {
		return true
	}

	return false
}

// SetSettingsAppearanceCustomCSS gets a reference to the given string and assigns it to the SettingsAppearanceCustomCSS field.
func (o *LanguagePackData) SetSettingsAppearanceCustomCSS(v string) {
	o.SettingsAppearanceCustomCSS = &v
}

// GetSettingsAppearanceCustomJS returns the SettingsAppearanceCustomJS field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsAppearanceCustomJS() string {
	if o == nil || IsNil(o.SettingsAppearanceCustomJS) {
		var ret string
		return ret
	}
	return *o.SettingsAppearanceCustomJS
}

// GetSettingsAppearanceCustomJSOk returns a tuple with the SettingsAppearanceCustomJS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsAppearanceCustomJSOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsAppearanceCustomJS) {
		return nil, false
	}
	return o.SettingsAppearanceCustomJS, true
}

// HasSettingsAppearanceCustomJS returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsAppearanceCustomJS() bool {
	if o != nil && !IsNil(o.SettingsAppearanceCustomJS) {
		return true
	}

	return false
}

// SetSettingsAppearanceCustomJS gets a reference to the given string and assigns it to the SettingsAppearanceCustomJS field.
func (o *LanguagePackData) SetSettingsAppearanceCustomJS(v string) {
	o.SettingsAppearanceCustomJS = &v
}

// GetSettingsAppearanceName returns the SettingsAppearanceName field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsAppearanceName() string {
	if o == nil || IsNil(o.SettingsAppearanceName) {
		var ret string
		return ret
	}
	return *o.SettingsAppearanceName
}

// GetSettingsAppearanceNameOk returns a tuple with the SettingsAppearanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsAppearanceNameOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsAppearanceName) {
		return nil, false
	}
	return o.SettingsAppearanceName, true
}

// HasSettingsAppearanceName returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsAppearanceName() bool {
	if o != nil && !IsNil(o.SettingsAppearanceName) {
		return true
	}

	return false
}

// SetSettingsAppearanceName gets a reference to the given string and assigns it to the SettingsAppearanceName field.
func (o *LanguagePackData) SetSettingsAppearanceName(v string) {
	o.SettingsAppearanceName = &v
}

// GetSettingsAppearancePublicHelp returns the SettingsAppearancePublicHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsAppearancePublicHelp() string {
	if o == nil || IsNil(o.SettingsAppearancePublicHelp) {
		var ret string
		return ret
	}
	return *o.SettingsAppearancePublicHelp
}

// GetSettingsAppearancePublicHelpOk returns a tuple with the SettingsAppearancePublicHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsAppearancePublicHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsAppearancePublicHelp) {
		return nil, false
	}
	return o.SettingsAppearancePublicHelp, true
}

// HasSettingsAppearancePublicHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsAppearancePublicHelp() bool {
	if o != nil && !IsNil(o.SettingsAppearancePublicHelp) {
		return true
	}

	return false
}

// SetSettingsAppearancePublicHelp gets a reference to the given string and assigns it to the SettingsAppearancePublicHelp field.
func (o *LanguagePackData) SetSettingsAppearancePublicHelp(v string) {
	o.SettingsAppearancePublicHelp = &v
}

// GetSettingsAppearancePublicName returns the SettingsAppearancePublicName field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsAppearancePublicName() string {
	if o == nil || IsNil(o.SettingsAppearancePublicName) {
		var ret string
		return ret
	}
	return *o.SettingsAppearancePublicName
}

// GetSettingsAppearancePublicNameOk returns a tuple with the SettingsAppearancePublicName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsAppearancePublicNameOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsAppearancePublicName) {
		return nil, false
	}
	return o.SettingsAppearancePublicName, true
}

// HasSettingsAppearancePublicName returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsAppearancePublicName() bool {
	if o != nil && !IsNil(o.SettingsAppearancePublicName) {
		return true
	}

	return false
}

// SetSettingsAppearancePublicName gets a reference to the given string and assigns it to the SettingsAppearancePublicName field.
func (o *LanguagePackData) SetSettingsAppearancePublicName(v string) {
	o.SettingsAppearancePublicName = &v
}

// GetSettingsBouncesAction returns the SettingsBouncesAction field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesAction() string {
	if o == nil || IsNil(o.SettingsBouncesAction) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesAction
}

// GetSettingsBouncesActionOk returns a tuple with the SettingsBouncesAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesActionOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesAction) {
		return nil, false
	}
	return o.SettingsBouncesAction, true
}

// HasSettingsBouncesAction returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesAction() bool {
	if o != nil && !IsNil(o.SettingsBouncesAction) {
		return true
	}

	return false
}

// SetSettingsBouncesAction gets a reference to the given string and assigns it to the SettingsBouncesAction field.
func (o *LanguagePackData) SetSettingsBouncesAction(v string) {
	o.SettingsBouncesAction = &v
}

// GetSettingsBouncesBlocklist returns the SettingsBouncesBlocklist field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesBlocklist() string {
	if o == nil || IsNil(o.SettingsBouncesBlocklist) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesBlocklist
}

// GetSettingsBouncesBlocklistOk returns a tuple with the SettingsBouncesBlocklist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesBlocklistOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesBlocklist) {
		return nil, false
	}
	return o.SettingsBouncesBlocklist, true
}

// HasSettingsBouncesBlocklist returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesBlocklist() bool {
	if o != nil && !IsNil(o.SettingsBouncesBlocklist) {
		return true
	}

	return false
}

// SetSettingsBouncesBlocklist gets a reference to the given string and assigns it to the SettingsBouncesBlocklist field.
func (o *LanguagePackData) SetSettingsBouncesBlocklist(v string) {
	o.SettingsBouncesBlocklist = &v
}

// GetSettingsBouncesCount returns the SettingsBouncesCount field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesCount() string {
	if o == nil || IsNil(o.SettingsBouncesCount) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesCount
}

// GetSettingsBouncesCountOk returns a tuple with the SettingsBouncesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesCountOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesCount) {
		return nil, false
	}
	return o.SettingsBouncesCount, true
}

// HasSettingsBouncesCount returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesCount() bool {
	if o != nil && !IsNil(o.SettingsBouncesCount) {
		return true
	}

	return false
}

// SetSettingsBouncesCount gets a reference to the given string and assigns it to the SettingsBouncesCount field.
func (o *LanguagePackData) SetSettingsBouncesCount(v string) {
	o.SettingsBouncesCount = &v
}

// GetSettingsBouncesCountHelp returns the SettingsBouncesCountHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesCountHelp() string {
	if o == nil || IsNil(o.SettingsBouncesCountHelp) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesCountHelp
}

// GetSettingsBouncesCountHelpOk returns a tuple with the SettingsBouncesCountHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesCountHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesCountHelp) {
		return nil, false
	}
	return o.SettingsBouncesCountHelp, true
}

// HasSettingsBouncesCountHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesCountHelp() bool {
	if o != nil && !IsNil(o.SettingsBouncesCountHelp) {
		return true
	}

	return false
}

// SetSettingsBouncesCountHelp gets a reference to the given string and assigns it to the SettingsBouncesCountHelp field.
func (o *LanguagePackData) SetSettingsBouncesCountHelp(v string) {
	o.SettingsBouncesCountHelp = &v
}

// GetSettingsBouncesDelete returns the SettingsBouncesDelete field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesDelete() string {
	if o == nil || IsNil(o.SettingsBouncesDelete) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesDelete
}

// GetSettingsBouncesDeleteOk returns a tuple with the SettingsBouncesDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesDeleteOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesDelete) {
		return nil, false
	}
	return o.SettingsBouncesDelete, true
}

// HasSettingsBouncesDelete returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesDelete() bool {
	if o != nil && !IsNil(o.SettingsBouncesDelete) {
		return true
	}

	return false
}

// SetSettingsBouncesDelete gets a reference to the given string and assigns it to the SettingsBouncesDelete field.
func (o *LanguagePackData) SetSettingsBouncesDelete(v string) {
	o.SettingsBouncesDelete = &v
}

// GetSettingsBouncesEnable returns the SettingsBouncesEnable field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesEnable() string {
	if o == nil || IsNil(o.SettingsBouncesEnable) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesEnable
}

// GetSettingsBouncesEnableOk returns a tuple with the SettingsBouncesEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesEnableOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesEnable) {
		return nil, false
	}
	return o.SettingsBouncesEnable, true
}

// HasSettingsBouncesEnable returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesEnable() bool {
	if o != nil && !IsNil(o.SettingsBouncesEnable) {
		return true
	}

	return false
}

// SetSettingsBouncesEnable gets a reference to the given string and assigns it to the SettingsBouncesEnable field.
func (o *LanguagePackData) SetSettingsBouncesEnable(v string) {
	o.SettingsBouncesEnable = &v
}

// GetSettingsBouncesEnableMailbox returns the SettingsBouncesEnableMailbox field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesEnableMailbox() string {
	if o == nil || IsNil(o.SettingsBouncesEnableMailbox) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesEnableMailbox
}

// GetSettingsBouncesEnableMailboxOk returns a tuple with the SettingsBouncesEnableMailbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesEnableMailboxOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesEnableMailbox) {
		return nil, false
	}
	return o.SettingsBouncesEnableMailbox, true
}

// HasSettingsBouncesEnableMailbox returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesEnableMailbox() bool {
	if o != nil && !IsNil(o.SettingsBouncesEnableMailbox) {
		return true
	}

	return false
}

// SetSettingsBouncesEnableMailbox gets a reference to the given string and assigns it to the SettingsBouncesEnableMailbox field.
func (o *LanguagePackData) SetSettingsBouncesEnableMailbox(v string) {
	o.SettingsBouncesEnableMailbox = &v
}

// GetSettingsBouncesEnableSES returns the SettingsBouncesEnableSES field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesEnableSES() string {
	if o == nil || IsNil(o.SettingsBouncesEnableSES) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesEnableSES
}

// GetSettingsBouncesEnableSESOk returns a tuple with the SettingsBouncesEnableSES field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesEnableSESOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesEnableSES) {
		return nil, false
	}
	return o.SettingsBouncesEnableSES, true
}

// HasSettingsBouncesEnableSES returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesEnableSES() bool {
	if o != nil && !IsNil(o.SettingsBouncesEnableSES) {
		return true
	}

	return false
}

// SetSettingsBouncesEnableSES gets a reference to the given string and assigns it to the SettingsBouncesEnableSES field.
func (o *LanguagePackData) SetSettingsBouncesEnableSES(v string) {
	o.SettingsBouncesEnableSES = &v
}

// GetSettingsBouncesEnableSendgrid returns the SettingsBouncesEnableSendgrid field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesEnableSendgrid() string {
	if o == nil || IsNil(o.SettingsBouncesEnableSendgrid) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesEnableSendgrid
}

// GetSettingsBouncesEnableSendgridOk returns a tuple with the SettingsBouncesEnableSendgrid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesEnableSendgridOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesEnableSendgrid) {
		return nil, false
	}
	return o.SettingsBouncesEnableSendgrid, true
}

// HasSettingsBouncesEnableSendgrid returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesEnableSendgrid() bool {
	if o != nil && !IsNil(o.SettingsBouncesEnableSendgrid) {
		return true
	}

	return false
}

// SetSettingsBouncesEnableSendgrid gets a reference to the given string and assigns it to the SettingsBouncesEnableSendgrid field.
func (o *LanguagePackData) SetSettingsBouncesEnableSendgrid(v string) {
	o.SettingsBouncesEnableSendgrid = &v
}

// GetSettingsBouncesEnableWebhooks returns the SettingsBouncesEnableWebhooks field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesEnableWebhooks() string {
	if o == nil || IsNil(o.SettingsBouncesEnableWebhooks) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesEnableWebhooks
}

// GetSettingsBouncesEnableWebhooksOk returns a tuple with the SettingsBouncesEnableWebhooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesEnableWebhooksOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesEnableWebhooks) {
		return nil, false
	}
	return o.SettingsBouncesEnableWebhooks, true
}

// HasSettingsBouncesEnableWebhooks returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesEnableWebhooks() bool {
	if o != nil && !IsNil(o.SettingsBouncesEnableWebhooks) {
		return true
	}

	return false
}

// SetSettingsBouncesEnableWebhooks gets a reference to the given string and assigns it to the SettingsBouncesEnableWebhooks field.
func (o *LanguagePackData) SetSettingsBouncesEnableWebhooks(v string) {
	o.SettingsBouncesEnableWebhooks = &v
}

// GetSettingsBouncesEnabled returns the SettingsBouncesEnabled field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesEnabled() string {
	if o == nil || IsNil(o.SettingsBouncesEnabled) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesEnabled
}

// GetSettingsBouncesEnabledOk returns a tuple with the SettingsBouncesEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesEnabled) {
		return nil, false
	}
	return o.SettingsBouncesEnabled, true
}

// HasSettingsBouncesEnabled returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesEnabled() bool {
	if o != nil && !IsNil(o.SettingsBouncesEnabled) {
		return true
	}

	return false
}

// SetSettingsBouncesEnabled gets a reference to the given string and assigns it to the SettingsBouncesEnabled field.
func (o *LanguagePackData) SetSettingsBouncesEnabled(v string) {
	o.SettingsBouncesEnabled = &v
}

// GetSettingsBouncesFolder returns the SettingsBouncesFolder field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesFolder() string {
	if o == nil || IsNil(o.SettingsBouncesFolder) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesFolder
}

// GetSettingsBouncesFolderOk returns a tuple with the SettingsBouncesFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesFolderOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesFolder) {
		return nil, false
	}
	return o.SettingsBouncesFolder, true
}

// HasSettingsBouncesFolder returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesFolder() bool {
	if o != nil && !IsNil(o.SettingsBouncesFolder) {
		return true
	}

	return false
}

// SetSettingsBouncesFolder gets a reference to the given string and assigns it to the SettingsBouncesFolder field.
func (o *LanguagePackData) SetSettingsBouncesFolder(v string) {
	o.SettingsBouncesFolder = &v
}

// GetSettingsBouncesFolderHelp returns the SettingsBouncesFolderHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesFolderHelp() string {
	if o == nil || IsNil(o.SettingsBouncesFolderHelp) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesFolderHelp
}

// GetSettingsBouncesFolderHelpOk returns a tuple with the SettingsBouncesFolderHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesFolderHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesFolderHelp) {
		return nil, false
	}
	return o.SettingsBouncesFolderHelp, true
}

// HasSettingsBouncesFolderHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesFolderHelp() bool {
	if o != nil && !IsNil(o.SettingsBouncesFolderHelp) {
		return true
	}

	return false
}

// SetSettingsBouncesFolderHelp gets a reference to the given string and assigns it to the SettingsBouncesFolderHelp field.
func (o *LanguagePackData) SetSettingsBouncesFolderHelp(v string) {
	o.SettingsBouncesFolderHelp = &v
}

// GetSettingsBouncesInvalidScanInterval returns the SettingsBouncesInvalidScanInterval field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesInvalidScanInterval() string {
	if o == nil || IsNil(o.SettingsBouncesInvalidScanInterval) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesInvalidScanInterval
}

// GetSettingsBouncesInvalidScanIntervalOk returns a tuple with the SettingsBouncesInvalidScanInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesInvalidScanIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesInvalidScanInterval) {
		return nil, false
	}
	return o.SettingsBouncesInvalidScanInterval, true
}

// HasSettingsBouncesInvalidScanInterval returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesInvalidScanInterval() bool {
	if o != nil && !IsNil(o.SettingsBouncesInvalidScanInterval) {
		return true
	}

	return false
}

// SetSettingsBouncesInvalidScanInterval gets a reference to the given string and assigns it to the SettingsBouncesInvalidScanInterval field.
func (o *LanguagePackData) SetSettingsBouncesInvalidScanInterval(v string) {
	o.SettingsBouncesInvalidScanInterval = &v
}

// GetSettingsBouncesName returns the SettingsBouncesName field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesName() string {
	if o == nil || IsNil(o.SettingsBouncesName) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesName
}

// GetSettingsBouncesNameOk returns a tuple with the SettingsBouncesName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesNameOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesName) {
		return nil, false
	}
	return o.SettingsBouncesName, true
}

// HasSettingsBouncesName returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesName() bool {
	if o != nil && !IsNil(o.SettingsBouncesName) {
		return true
	}

	return false
}

// SetSettingsBouncesName gets a reference to the given string and assigns it to the SettingsBouncesName field.
func (o *LanguagePackData) SetSettingsBouncesName(v string) {
	o.SettingsBouncesName = &v
}

// GetSettingsBouncesScanInterval returns the SettingsBouncesScanInterval field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesScanInterval() string {
	if o == nil || IsNil(o.SettingsBouncesScanInterval) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesScanInterval
}

// GetSettingsBouncesScanIntervalOk returns a tuple with the SettingsBouncesScanInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesScanIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesScanInterval) {
		return nil, false
	}
	return o.SettingsBouncesScanInterval, true
}

// HasSettingsBouncesScanInterval returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesScanInterval() bool {
	if o != nil && !IsNil(o.SettingsBouncesScanInterval) {
		return true
	}

	return false
}

// SetSettingsBouncesScanInterval gets a reference to the given string and assigns it to the SettingsBouncesScanInterval field.
func (o *LanguagePackData) SetSettingsBouncesScanInterval(v string) {
	o.SettingsBouncesScanInterval = &v
}

// GetSettingsBouncesScanIntervalHelp returns the SettingsBouncesScanIntervalHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesScanIntervalHelp() string {
	if o == nil || IsNil(o.SettingsBouncesScanIntervalHelp) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesScanIntervalHelp
}

// GetSettingsBouncesScanIntervalHelpOk returns a tuple with the SettingsBouncesScanIntervalHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesScanIntervalHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesScanIntervalHelp) {
		return nil, false
	}
	return o.SettingsBouncesScanIntervalHelp, true
}

// HasSettingsBouncesScanIntervalHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesScanIntervalHelp() bool {
	if o != nil && !IsNil(o.SettingsBouncesScanIntervalHelp) {
		return true
	}

	return false
}

// SetSettingsBouncesScanIntervalHelp gets a reference to the given string and assigns it to the SettingsBouncesScanIntervalHelp field.
func (o *LanguagePackData) SetSettingsBouncesScanIntervalHelp(v string) {
	o.SettingsBouncesScanIntervalHelp = &v
}

// GetSettingsBouncesSendgridKey returns the SettingsBouncesSendgridKey field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesSendgridKey() string {
	if o == nil || IsNil(o.SettingsBouncesSendgridKey) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesSendgridKey
}

// GetSettingsBouncesSendgridKeyOk returns a tuple with the SettingsBouncesSendgridKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesSendgridKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesSendgridKey) {
		return nil, false
	}
	return o.SettingsBouncesSendgridKey, true
}

// HasSettingsBouncesSendgridKey returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesSendgridKey() bool {
	if o != nil && !IsNil(o.SettingsBouncesSendgridKey) {
		return true
	}

	return false
}

// SetSettingsBouncesSendgridKey gets a reference to the given string and assigns it to the SettingsBouncesSendgridKey field.
func (o *LanguagePackData) SetSettingsBouncesSendgridKey(v string) {
	o.SettingsBouncesSendgridKey = &v
}

// GetSettingsBouncesType returns the SettingsBouncesType field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesType() string {
	if o == nil || IsNil(o.SettingsBouncesType) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesType
}

// GetSettingsBouncesTypeOk returns a tuple with the SettingsBouncesType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesType) {
		return nil, false
	}
	return o.SettingsBouncesType, true
}

// HasSettingsBouncesType returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesType() bool {
	if o != nil && !IsNil(o.SettingsBouncesType) {
		return true
	}

	return false
}

// SetSettingsBouncesType gets a reference to the given string and assigns it to the SettingsBouncesType field.
func (o *LanguagePackData) SetSettingsBouncesType(v string) {
	o.SettingsBouncesType = &v
}

// GetSettingsBouncesUsername returns the SettingsBouncesUsername field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsBouncesUsername() string {
	if o == nil || IsNil(o.SettingsBouncesUsername) {
		var ret string
		return ret
	}
	return *o.SettingsBouncesUsername
}

// GetSettingsBouncesUsernameOk returns a tuple with the SettingsBouncesUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsBouncesUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsBouncesUsername) {
		return nil, false
	}
	return o.SettingsBouncesUsername, true
}

// HasSettingsBouncesUsername returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsBouncesUsername() bool {
	if o != nil && !IsNil(o.SettingsBouncesUsername) {
		return true
	}

	return false
}

// SetSettingsBouncesUsername gets a reference to the given string and assigns it to the SettingsBouncesUsername field.
func (o *LanguagePackData) SetSettingsBouncesUsername(v string) {
	o.SettingsBouncesUsername = &v
}

// GetSettingsConfirmRestart returns the SettingsConfirmRestart field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsConfirmRestart() string {
	if o == nil || IsNil(o.SettingsConfirmRestart) {
		var ret string
		return ret
	}
	return *o.SettingsConfirmRestart
}

// GetSettingsConfirmRestartOk returns a tuple with the SettingsConfirmRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsConfirmRestartOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsConfirmRestart) {
		return nil, false
	}
	return o.SettingsConfirmRestart, true
}

// HasSettingsConfirmRestart returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsConfirmRestart() bool {
	if o != nil && !IsNil(o.SettingsConfirmRestart) {
		return true
	}

	return false
}

// SetSettingsConfirmRestart gets a reference to the given string and assigns it to the SettingsConfirmRestart field.
func (o *LanguagePackData) SetSettingsConfirmRestart(v string) {
	o.SettingsConfirmRestart = &v
}

// GetSettingsDuplicateMessengerName returns the SettingsDuplicateMessengerName field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsDuplicateMessengerName() string {
	if o == nil || IsNil(o.SettingsDuplicateMessengerName) {
		var ret string
		return ret
	}
	return *o.SettingsDuplicateMessengerName
}

// GetSettingsDuplicateMessengerNameOk returns a tuple with the SettingsDuplicateMessengerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsDuplicateMessengerNameOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsDuplicateMessengerName) {
		return nil, false
	}
	return o.SettingsDuplicateMessengerName, true
}

// HasSettingsDuplicateMessengerName returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsDuplicateMessengerName() bool {
	if o != nil && !IsNil(o.SettingsDuplicateMessengerName) {
		return true
	}

	return false
}

// SetSettingsDuplicateMessengerName gets a reference to the given string and assigns it to the SettingsDuplicateMessengerName field.
func (o *LanguagePackData) SetSettingsDuplicateMessengerName(v string) {
	o.SettingsDuplicateMessengerName = &v
}

// GetSettingsErrorEncoding returns the SettingsErrorEncoding field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsErrorEncoding() string {
	if o == nil || IsNil(o.SettingsErrorEncoding) {
		var ret string
		return ret
	}
	return *o.SettingsErrorEncoding
}

// GetSettingsErrorEncodingOk returns a tuple with the SettingsErrorEncoding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsErrorEncodingOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsErrorEncoding) {
		return nil, false
	}
	return o.SettingsErrorEncoding, true
}

// HasSettingsErrorEncoding returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsErrorEncoding() bool {
	if o != nil && !IsNil(o.SettingsErrorEncoding) {
		return true
	}

	return false
}

// SetSettingsErrorEncoding gets a reference to the given string and assigns it to the SettingsErrorEncoding field.
func (o *LanguagePackData) SetSettingsErrorEncoding(v string) {
	o.SettingsErrorEncoding = &v
}

// GetSettingsErrorNoSMTP returns the SettingsErrorNoSMTP field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsErrorNoSMTP() string {
	if o == nil || IsNil(o.SettingsErrorNoSMTP) {
		var ret string
		return ret
	}
	return *o.SettingsErrorNoSMTP
}

// GetSettingsErrorNoSMTPOk returns a tuple with the SettingsErrorNoSMTP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsErrorNoSMTPOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsErrorNoSMTP) {
		return nil, false
	}
	return o.SettingsErrorNoSMTP, true
}

// HasSettingsErrorNoSMTP returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsErrorNoSMTP() bool {
	if o != nil && !IsNil(o.SettingsErrorNoSMTP) {
		return true
	}

	return false
}

// SetSettingsErrorNoSMTP gets a reference to the given string and assigns it to the SettingsErrorNoSMTP field.
func (o *LanguagePackData) SetSettingsErrorNoSMTP(v string) {
	o.SettingsErrorNoSMTP = &v
}

// GetSettingsGeneralAdminNotifEmails returns the SettingsGeneralAdminNotifEmails field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralAdminNotifEmails() string {
	if o == nil || IsNil(o.SettingsGeneralAdminNotifEmails) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralAdminNotifEmails
}

// GetSettingsGeneralAdminNotifEmailsOk returns a tuple with the SettingsGeneralAdminNotifEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralAdminNotifEmailsOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralAdminNotifEmails) {
		return nil, false
	}
	return o.SettingsGeneralAdminNotifEmails, true
}

// HasSettingsGeneralAdminNotifEmails returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralAdminNotifEmails() bool {
	if o != nil && !IsNil(o.SettingsGeneralAdminNotifEmails) {
		return true
	}

	return false
}

// SetSettingsGeneralAdminNotifEmails gets a reference to the given string and assigns it to the SettingsGeneralAdminNotifEmails field.
func (o *LanguagePackData) SetSettingsGeneralAdminNotifEmails(v string) {
	o.SettingsGeneralAdminNotifEmails = &v
}

// GetSettingsGeneralAdminNotifEmailsHelp returns the SettingsGeneralAdminNotifEmailsHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralAdminNotifEmailsHelp() string {
	if o == nil || IsNil(o.SettingsGeneralAdminNotifEmailsHelp) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralAdminNotifEmailsHelp
}

// GetSettingsGeneralAdminNotifEmailsHelpOk returns a tuple with the SettingsGeneralAdminNotifEmailsHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralAdminNotifEmailsHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralAdminNotifEmailsHelp) {
		return nil, false
	}
	return o.SettingsGeneralAdminNotifEmailsHelp, true
}

// HasSettingsGeneralAdminNotifEmailsHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralAdminNotifEmailsHelp() bool {
	if o != nil && !IsNil(o.SettingsGeneralAdminNotifEmailsHelp) {
		return true
	}

	return false
}

// SetSettingsGeneralAdminNotifEmailsHelp gets a reference to the given string and assigns it to the SettingsGeneralAdminNotifEmailsHelp field.
func (o *LanguagePackData) SetSettingsGeneralAdminNotifEmailsHelp(v string) {
	o.SettingsGeneralAdminNotifEmailsHelp = &v
}

// GetSettingsGeneralCheckUpdates returns the SettingsGeneralCheckUpdates field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralCheckUpdates() string {
	if o == nil || IsNil(o.SettingsGeneralCheckUpdates) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralCheckUpdates
}

// GetSettingsGeneralCheckUpdatesOk returns a tuple with the SettingsGeneralCheckUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralCheckUpdatesOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralCheckUpdates) {
		return nil, false
	}
	return o.SettingsGeneralCheckUpdates, true
}

// HasSettingsGeneralCheckUpdates returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralCheckUpdates() bool {
	if o != nil && !IsNil(o.SettingsGeneralCheckUpdates) {
		return true
	}

	return false
}

// SetSettingsGeneralCheckUpdates gets a reference to the given string and assigns it to the SettingsGeneralCheckUpdates field.
func (o *LanguagePackData) SetSettingsGeneralCheckUpdates(v string) {
	o.SettingsGeneralCheckUpdates = &v
}

// GetSettingsGeneralCheckUpdatesHelp returns the SettingsGeneralCheckUpdatesHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralCheckUpdatesHelp() string {
	if o == nil || IsNil(o.SettingsGeneralCheckUpdatesHelp) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralCheckUpdatesHelp
}

// GetSettingsGeneralCheckUpdatesHelpOk returns a tuple with the SettingsGeneralCheckUpdatesHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralCheckUpdatesHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralCheckUpdatesHelp) {
		return nil, false
	}
	return o.SettingsGeneralCheckUpdatesHelp, true
}

// HasSettingsGeneralCheckUpdatesHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralCheckUpdatesHelp() bool {
	if o != nil && !IsNil(o.SettingsGeneralCheckUpdatesHelp) {
		return true
	}

	return false
}

// SetSettingsGeneralCheckUpdatesHelp gets a reference to the given string and assigns it to the SettingsGeneralCheckUpdatesHelp field.
func (o *LanguagePackData) SetSettingsGeneralCheckUpdatesHelp(v string) {
	o.SettingsGeneralCheckUpdatesHelp = &v
}

// GetSettingsGeneralEnablePublicArchive returns the SettingsGeneralEnablePublicArchive field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralEnablePublicArchive() string {
	if o == nil || IsNil(o.SettingsGeneralEnablePublicArchive) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralEnablePublicArchive
}

// GetSettingsGeneralEnablePublicArchiveOk returns a tuple with the SettingsGeneralEnablePublicArchive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralEnablePublicArchiveOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralEnablePublicArchive) {
		return nil, false
	}
	return o.SettingsGeneralEnablePublicArchive, true
}

// HasSettingsGeneralEnablePublicArchive returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralEnablePublicArchive() bool {
	if o != nil && !IsNil(o.SettingsGeneralEnablePublicArchive) {
		return true
	}

	return false
}

// SetSettingsGeneralEnablePublicArchive gets a reference to the given string and assigns it to the SettingsGeneralEnablePublicArchive field.
func (o *LanguagePackData) SetSettingsGeneralEnablePublicArchive(v string) {
	o.SettingsGeneralEnablePublicArchive = &v
}

// GetSettingsGeneralEnablePublicArchiveHelp returns the SettingsGeneralEnablePublicArchiveHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralEnablePublicArchiveHelp() string {
	if o == nil || IsNil(o.SettingsGeneralEnablePublicArchiveHelp) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralEnablePublicArchiveHelp
}

// GetSettingsGeneralEnablePublicArchiveHelpOk returns a tuple with the SettingsGeneralEnablePublicArchiveHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralEnablePublicArchiveHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralEnablePublicArchiveHelp) {
		return nil, false
	}
	return o.SettingsGeneralEnablePublicArchiveHelp, true
}

// HasSettingsGeneralEnablePublicArchiveHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralEnablePublicArchiveHelp() bool {
	if o != nil && !IsNil(o.SettingsGeneralEnablePublicArchiveHelp) {
		return true
	}

	return false
}

// SetSettingsGeneralEnablePublicArchiveHelp gets a reference to the given string and assigns it to the SettingsGeneralEnablePublicArchiveHelp field.
func (o *LanguagePackData) SetSettingsGeneralEnablePublicArchiveHelp(v string) {
	o.SettingsGeneralEnablePublicArchiveHelp = &v
}

// GetSettingsGeneralEnablePublicSubPage returns the SettingsGeneralEnablePublicSubPage field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralEnablePublicSubPage() string {
	if o == nil || IsNil(o.SettingsGeneralEnablePublicSubPage) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralEnablePublicSubPage
}

// GetSettingsGeneralEnablePublicSubPageOk returns a tuple with the SettingsGeneralEnablePublicSubPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralEnablePublicSubPageOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralEnablePublicSubPage) {
		return nil, false
	}
	return o.SettingsGeneralEnablePublicSubPage, true
}

// HasSettingsGeneralEnablePublicSubPage returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralEnablePublicSubPage() bool {
	if o != nil && !IsNil(o.SettingsGeneralEnablePublicSubPage) {
		return true
	}

	return false
}

// SetSettingsGeneralEnablePublicSubPage gets a reference to the given string and assigns it to the SettingsGeneralEnablePublicSubPage field.
func (o *LanguagePackData) SetSettingsGeneralEnablePublicSubPage(v string) {
	o.SettingsGeneralEnablePublicSubPage = &v
}

// GetSettingsGeneralEnablePublicSubPageHelp returns the SettingsGeneralEnablePublicSubPageHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralEnablePublicSubPageHelp() string {
	if o == nil || IsNil(o.SettingsGeneralEnablePublicSubPageHelp) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralEnablePublicSubPageHelp
}

// GetSettingsGeneralEnablePublicSubPageHelpOk returns a tuple with the SettingsGeneralEnablePublicSubPageHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralEnablePublicSubPageHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralEnablePublicSubPageHelp) {
		return nil, false
	}
	return o.SettingsGeneralEnablePublicSubPageHelp, true
}

// HasSettingsGeneralEnablePublicSubPageHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralEnablePublicSubPageHelp() bool {
	if o != nil && !IsNil(o.SettingsGeneralEnablePublicSubPageHelp) {
		return true
	}

	return false
}

// SetSettingsGeneralEnablePublicSubPageHelp gets a reference to the given string and assigns it to the SettingsGeneralEnablePublicSubPageHelp field.
func (o *LanguagePackData) SetSettingsGeneralEnablePublicSubPageHelp(v string) {
	o.SettingsGeneralEnablePublicSubPageHelp = &v
}

// GetSettingsGeneralFaviconURL returns the SettingsGeneralFaviconURL field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralFaviconURL() string {
	if o == nil || IsNil(o.SettingsGeneralFaviconURL) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralFaviconURL
}

// GetSettingsGeneralFaviconURLOk returns a tuple with the SettingsGeneralFaviconURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralFaviconURLOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralFaviconURL) {
		return nil, false
	}
	return o.SettingsGeneralFaviconURL, true
}

// HasSettingsGeneralFaviconURL returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralFaviconURL() bool {
	if o != nil && !IsNil(o.SettingsGeneralFaviconURL) {
		return true
	}

	return false
}

// SetSettingsGeneralFaviconURL gets a reference to the given string and assigns it to the SettingsGeneralFaviconURL field.
func (o *LanguagePackData) SetSettingsGeneralFaviconURL(v string) {
	o.SettingsGeneralFaviconURL = &v
}

// GetSettingsGeneralFaviconURLHelp returns the SettingsGeneralFaviconURLHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralFaviconURLHelp() string {
	if o == nil || IsNil(o.SettingsGeneralFaviconURLHelp) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralFaviconURLHelp
}

// GetSettingsGeneralFaviconURLHelpOk returns a tuple with the SettingsGeneralFaviconURLHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralFaviconURLHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralFaviconURLHelp) {
		return nil, false
	}
	return o.SettingsGeneralFaviconURLHelp, true
}

// HasSettingsGeneralFaviconURLHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralFaviconURLHelp() bool {
	if o != nil && !IsNil(o.SettingsGeneralFaviconURLHelp) {
		return true
	}

	return false
}

// SetSettingsGeneralFaviconURLHelp gets a reference to the given string and assigns it to the SettingsGeneralFaviconURLHelp field.
func (o *LanguagePackData) SetSettingsGeneralFaviconURLHelp(v string) {
	o.SettingsGeneralFaviconURLHelp = &v
}

// GetSettingsGeneralFromEmail returns the SettingsGeneralFromEmail field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralFromEmail() string {
	if o == nil || IsNil(o.SettingsGeneralFromEmail) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralFromEmail
}

// GetSettingsGeneralFromEmailOk returns a tuple with the SettingsGeneralFromEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralFromEmailOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralFromEmail) {
		return nil, false
	}
	return o.SettingsGeneralFromEmail, true
}

// HasSettingsGeneralFromEmail returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralFromEmail() bool {
	if o != nil && !IsNil(o.SettingsGeneralFromEmail) {
		return true
	}

	return false
}

// SetSettingsGeneralFromEmail gets a reference to the given string and assigns it to the SettingsGeneralFromEmail field.
func (o *LanguagePackData) SetSettingsGeneralFromEmail(v string) {
	o.SettingsGeneralFromEmail = &v
}

// GetSettingsGeneralFromEmailHelp returns the SettingsGeneralFromEmailHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralFromEmailHelp() string {
	if o == nil || IsNil(o.SettingsGeneralFromEmailHelp) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralFromEmailHelp
}

// GetSettingsGeneralFromEmailHelpOk returns a tuple with the SettingsGeneralFromEmailHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralFromEmailHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralFromEmailHelp) {
		return nil, false
	}
	return o.SettingsGeneralFromEmailHelp, true
}

// HasSettingsGeneralFromEmailHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralFromEmailHelp() bool {
	if o != nil && !IsNil(o.SettingsGeneralFromEmailHelp) {
		return true
	}

	return false
}

// SetSettingsGeneralFromEmailHelp gets a reference to the given string and assigns it to the SettingsGeneralFromEmailHelp field.
func (o *LanguagePackData) SetSettingsGeneralFromEmailHelp(v string) {
	o.SettingsGeneralFromEmailHelp = &v
}

// GetSettingsGeneralLanguage returns the SettingsGeneralLanguage field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralLanguage() string {
	if o == nil || IsNil(o.SettingsGeneralLanguage) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralLanguage
}

// GetSettingsGeneralLanguageOk returns a tuple with the SettingsGeneralLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralLanguage) {
		return nil, false
	}
	return o.SettingsGeneralLanguage, true
}

// HasSettingsGeneralLanguage returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralLanguage() bool {
	if o != nil && !IsNil(o.SettingsGeneralLanguage) {
		return true
	}

	return false
}

// SetSettingsGeneralLanguage gets a reference to the given string and assigns it to the SettingsGeneralLanguage field.
func (o *LanguagePackData) SetSettingsGeneralLanguage(v string) {
	o.SettingsGeneralLanguage = &v
}

// GetSettingsGeneralLogoURL returns the SettingsGeneralLogoURL field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralLogoURL() string {
	if o == nil || IsNil(o.SettingsGeneralLogoURL) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralLogoURL
}

// GetSettingsGeneralLogoURLOk returns a tuple with the SettingsGeneralLogoURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralLogoURLOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralLogoURL) {
		return nil, false
	}
	return o.SettingsGeneralLogoURL, true
}

// HasSettingsGeneralLogoURL returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralLogoURL() bool {
	if o != nil && !IsNil(o.SettingsGeneralLogoURL) {
		return true
	}

	return false
}

// SetSettingsGeneralLogoURL gets a reference to the given string and assigns it to the SettingsGeneralLogoURL field.
func (o *LanguagePackData) SetSettingsGeneralLogoURL(v string) {
	o.SettingsGeneralLogoURL = &v
}

// GetSettingsGeneralLogoURLHelp returns the SettingsGeneralLogoURLHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralLogoURLHelp() string {
	if o == nil || IsNil(o.SettingsGeneralLogoURLHelp) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralLogoURLHelp
}

// GetSettingsGeneralLogoURLHelpOk returns a tuple with the SettingsGeneralLogoURLHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralLogoURLHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralLogoURLHelp) {
		return nil, false
	}
	return o.SettingsGeneralLogoURLHelp, true
}

// HasSettingsGeneralLogoURLHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralLogoURLHelp() bool {
	if o != nil && !IsNil(o.SettingsGeneralLogoURLHelp) {
		return true
	}

	return false
}

// SetSettingsGeneralLogoURLHelp gets a reference to the given string and assigns it to the SettingsGeneralLogoURLHelp field.
func (o *LanguagePackData) SetSettingsGeneralLogoURLHelp(v string) {
	o.SettingsGeneralLogoURLHelp = &v
}

// GetSettingsGeneralName returns the SettingsGeneralName field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralName() string {
	if o == nil || IsNil(o.SettingsGeneralName) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralName
}

// GetSettingsGeneralNameOk returns a tuple with the SettingsGeneralName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralNameOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralName) {
		return nil, false
	}
	return o.SettingsGeneralName, true
}

// HasSettingsGeneralName returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralName() bool {
	if o != nil && !IsNil(o.SettingsGeneralName) {
		return true
	}

	return false
}

// SetSettingsGeneralName gets a reference to the given string and assigns it to the SettingsGeneralName field.
func (o *LanguagePackData) SetSettingsGeneralName(v string) {
	o.SettingsGeneralName = &v
}

// GetSettingsGeneralRootURL returns the SettingsGeneralRootURL field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralRootURL() string {
	if o == nil || IsNil(o.SettingsGeneralRootURL) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralRootURL
}

// GetSettingsGeneralRootURLOk returns a tuple with the SettingsGeneralRootURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralRootURLOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralRootURL) {
		return nil, false
	}
	return o.SettingsGeneralRootURL, true
}

// HasSettingsGeneralRootURL returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralRootURL() bool {
	if o != nil && !IsNil(o.SettingsGeneralRootURL) {
		return true
	}

	return false
}

// SetSettingsGeneralRootURL gets a reference to the given string and assigns it to the SettingsGeneralRootURL field.
func (o *LanguagePackData) SetSettingsGeneralRootURL(v string) {
	o.SettingsGeneralRootURL = &v
}

// GetSettingsGeneralRootURLHelp returns the SettingsGeneralRootURLHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralRootURLHelp() string {
	if o == nil || IsNil(o.SettingsGeneralRootURLHelp) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralRootURLHelp
}

// GetSettingsGeneralRootURLHelpOk returns a tuple with the SettingsGeneralRootURLHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralRootURLHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralRootURLHelp) {
		return nil, false
	}
	return o.SettingsGeneralRootURLHelp, true
}

// HasSettingsGeneralRootURLHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralRootURLHelp() bool {
	if o != nil && !IsNil(o.SettingsGeneralRootURLHelp) {
		return true
	}

	return false
}

// SetSettingsGeneralRootURLHelp gets a reference to the given string and assigns it to the SettingsGeneralRootURLHelp field.
func (o *LanguagePackData) SetSettingsGeneralRootURLHelp(v string) {
	o.SettingsGeneralRootURLHelp = &v
}

// GetSettingsGeneralSendOptinConfirm returns the SettingsGeneralSendOptinConfirm field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralSendOptinConfirm() string {
	if o == nil || IsNil(o.SettingsGeneralSendOptinConfirm) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralSendOptinConfirm
}

// GetSettingsGeneralSendOptinConfirmOk returns a tuple with the SettingsGeneralSendOptinConfirm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralSendOptinConfirmOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralSendOptinConfirm) {
		return nil, false
	}
	return o.SettingsGeneralSendOptinConfirm, true
}

// HasSettingsGeneralSendOptinConfirm returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralSendOptinConfirm() bool {
	if o != nil && !IsNil(o.SettingsGeneralSendOptinConfirm) {
		return true
	}

	return false
}

// SetSettingsGeneralSendOptinConfirm gets a reference to the given string and assigns it to the SettingsGeneralSendOptinConfirm field.
func (o *LanguagePackData) SetSettingsGeneralSendOptinConfirm(v string) {
	o.SettingsGeneralSendOptinConfirm = &v
}

// GetSettingsGeneralSendOptinConfirmHelp returns the SettingsGeneralSendOptinConfirmHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralSendOptinConfirmHelp() string {
	if o == nil || IsNil(o.SettingsGeneralSendOptinConfirmHelp) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralSendOptinConfirmHelp
}

// GetSettingsGeneralSendOptinConfirmHelpOk returns a tuple with the SettingsGeneralSendOptinConfirmHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralSendOptinConfirmHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralSendOptinConfirmHelp) {
		return nil, false
	}
	return o.SettingsGeneralSendOptinConfirmHelp, true
}

// HasSettingsGeneralSendOptinConfirmHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralSendOptinConfirmHelp() bool {
	if o != nil && !IsNil(o.SettingsGeneralSendOptinConfirmHelp) {
		return true
	}

	return false
}

// SetSettingsGeneralSendOptinConfirmHelp gets a reference to the given string and assigns it to the SettingsGeneralSendOptinConfirmHelp field.
func (o *LanguagePackData) SetSettingsGeneralSendOptinConfirmHelp(v string) {
	o.SettingsGeneralSendOptinConfirmHelp = &v
}

// GetSettingsGeneralSiteName returns the SettingsGeneralSiteName field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsGeneralSiteName() string {
	if o == nil || IsNil(o.SettingsGeneralSiteName) {
		var ret string
		return ret
	}
	return *o.SettingsGeneralSiteName
}

// GetSettingsGeneralSiteNameOk returns a tuple with the SettingsGeneralSiteName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsGeneralSiteNameOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsGeneralSiteName) {
		return nil, false
	}
	return o.SettingsGeneralSiteName, true
}

// HasSettingsGeneralSiteName returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsGeneralSiteName() bool {
	if o != nil && !IsNil(o.SettingsGeneralSiteName) {
		return true
	}

	return false
}

// SetSettingsGeneralSiteName gets a reference to the given string and assigns it to the SettingsGeneralSiteName field.
func (o *LanguagePackData) SetSettingsGeneralSiteName(v string) {
	o.SettingsGeneralSiteName = &v
}

// GetSettingsInvalidMessengerName returns the SettingsInvalidMessengerName field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsInvalidMessengerName() string {
	if o == nil || IsNil(o.SettingsInvalidMessengerName) {
		var ret string
		return ret
	}
	return *o.SettingsInvalidMessengerName
}

// GetSettingsInvalidMessengerNameOk returns a tuple with the SettingsInvalidMessengerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsInvalidMessengerNameOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsInvalidMessengerName) {
		return nil, false
	}
	return o.SettingsInvalidMessengerName, true
}

// HasSettingsInvalidMessengerName returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsInvalidMessengerName() bool {
	if o != nil && !IsNil(o.SettingsInvalidMessengerName) {
		return true
	}

	return false
}

// SetSettingsInvalidMessengerName gets a reference to the given string and assigns it to the SettingsInvalidMessengerName field.
func (o *LanguagePackData) SetSettingsInvalidMessengerName(v string) {
	o.SettingsInvalidMessengerName = &v
}

// GetSettingsMailserverAuthProtocol returns the SettingsMailserverAuthProtocol field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverAuthProtocol() string {
	if o == nil || IsNil(o.SettingsMailserverAuthProtocol) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverAuthProtocol
}

// GetSettingsMailserverAuthProtocolOk returns a tuple with the SettingsMailserverAuthProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverAuthProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverAuthProtocol) {
		return nil, false
	}
	return o.SettingsMailserverAuthProtocol, true
}

// HasSettingsMailserverAuthProtocol returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverAuthProtocol() bool {
	if o != nil && !IsNil(o.SettingsMailserverAuthProtocol) {
		return true
	}

	return false
}

// SetSettingsMailserverAuthProtocol gets a reference to the given string and assigns it to the SettingsMailserverAuthProtocol field.
func (o *LanguagePackData) SetSettingsMailserverAuthProtocol(v string) {
	o.SettingsMailserverAuthProtocol = &v
}

// GetSettingsMailserverHost returns the SettingsMailserverHost field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverHost() string {
	if o == nil || IsNil(o.SettingsMailserverHost) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverHost
}

// GetSettingsMailserverHostOk returns a tuple with the SettingsMailserverHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverHostOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverHost) {
		return nil, false
	}
	return o.SettingsMailserverHost, true
}

// HasSettingsMailserverHost returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverHost() bool {
	if o != nil && !IsNil(o.SettingsMailserverHost) {
		return true
	}

	return false
}

// SetSettingsMailserverHost gets a reference to the given string and assigns it to the SettingsMailserverHost field.
func (o *LanguagePackData) SetSettingsMailserverHost(v string) {
	o.SettingsMailserverHost = &v
}

// GetSettingsMailserverHostHelp returns the SettingsMailserverHostHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverHostHelp() string {
	if o == nil || IsNil(o.SettingsMailserverHostHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverHostHelp
}

// GetSettingsMailserverHostHelpOk returns a tuple with the SettingsMailserverHostHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverHostHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverHostHelp) {
		return nil, false
	}
	return o.SettingsMailserverHostHelp, true
}

// HasSettingsMailserverHostHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverHostHelp() bool {
	if o != nil && !IsNil(o.SettingsMailserverHostHelp) {
		return true
	}

	return false
}

// SetSettingsMailserverHostHelp gets a reference to the given string and assigns it to the SettingsMailserverHostHelp field.
func (o *LanguagePackData) SetSettingsMailserverHostHelp(v string) {
	o.SettingsMailserverHostHelp = &v
}

// GetSettingsMailserverIdleTimeout returns the SettingsMailserverIdleTimeout field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverIdleTimeout() string {
	if o == nil || IsNil(o.SettingsMailserverIdleTimeout) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverIdleTimeout
}

// GetSettingsMailserverIdleTimeoutOk returns a tuple with the SettingsMailserverIdleTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverIdleTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverIdleTimeout) {
		return nil, false
	}
	return o.SettingsMailserverIdleTimeout, true
}

// HasSettingsMailserverIdleTimeout returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverIdleTimeout() bool {
	if o != nil && !IsNil(o.SettingsMailserverIdleTimeout) {
		return true
	}

	return false
}

// SetSettingsMailserverIdleTimeout gets a reference to the given string and assigns it to the SettingsMailserverIdleTimeout field.
func (o *LanguagePackData) SetSettingsMailserverIdleTimeout(v string) {
	o.SettingsMailserverIdleTimeout = &v
}

// GetSettingsMailserverIdleTimeoutHelp returns the SettingsMailserverIdleTimeoutHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverIdleTimeoutHelp() string {
	if o == nil || IsNil(o.SettingsMailserverIdleTimeoutHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverIdleTimeoutHelp
}

// GetSettingsMailserverIdleTimeoutHelpOk returns a tuple with the SettingsMailserverIdleTimeoutHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverIdleTimeoutHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverIdleTimeoutHelp) {
		return nil, false
	}
	return o.SettingsMailserverIdleTimeoutHelp, true
}

// HasSettingsMailserverIdleTimeoutHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverIdleTimeoutHelp() bool {
	if o != nil && !IsNil(o.SettingsMailserverIdleTimeoutHelp) {
		return true
	}

	return false
}

// SetSettingsMailserverIdleTimeoutHelp gets a reference to the given string and assigns it to the SettingsMailserverIdleTimeoutHelp field.
func (o *LanguagePackData) SetSettingsMailserverIdleTimeoutHelp(v string) {
	o.SettingsMailserverIdleTimeoutHelp = &v
}

// GetSettingsMailserverMaxConns returns the SettingsMailserverMaxConns field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverMaxConns() string {
	if o == nil || IsNil(o.SettingsMailserverMaxConns) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverMaxConns
}

// GetSettingsMailserverMaxConnsOk returns a tuple with the SettingsMailserverMaxConns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverMaxConnsOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverMaxConns) {
		return nil, false
	}
	return o.SettingsMailserverMaxConns, true
}

// HasSettingsMailserverMaxConns returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverMaxConns() bool {
	if o != nil && !IsNil(o.SettingsMailserverMaxConns) {
		return true
	}

	return false
}

// SetSettingsMailserverMaxConns gets a reference to the given string and assigns it to the SettingsMailserverMaxConns field.
func (o *LanguagePackData) SetSettingsMailserverMaxConns(v string) {
	o.SettingsMailserverMaxConns = &v
}

// GetSettingsMailserverMaxConnsHelp returns the SettingsMailserverMaxConnsHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverMaxConnsHelp() string {
	if o == nil || IsNil(o.SettingsMailserverMaxConnsHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverMaxConnsHelp
}

// GetSettingsMailserverMaxConnsHelpOk returns a tuple with the SettingsMailserverMaxConnsHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverMaxConnsHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverMaxConnsHelp) {
		return nil, false
	}
	return o.SettingsMailserverMaxConnsHelp, true
}

// HasSettingsMailserverMaxConnsHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverMaxConnsHelp() bool {
	if o != nil && !IsNil(o.SettingsMailserverMaxConnsHelp) {
		return true
	}

	return false
}

// SetSettingsMailserverMaxConnsHelp gets a reference to the given string and assigns it to the SettingsMailserverMaxConnsHelp field.
func (o *LanguagePackData) SetSettingsMailserverMaxConnsHelp(v string) {
	o.SettingsMailserverMaxConnsHelp = &v
}

// GetSettingsMailserverPassword returns the SettingsMailserverPassword field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverPassword() string {
	if o == nil || IsNil(o.SettingsMailserverPassword) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverPassword
}

// GetSettingsMailserverPasswordOk returns a tuple with the SettingsMailserverPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverPassword) {
		return nil, false
	}
	return o.SettingsMailserverPassword, true
}

// HasSettingsMailserverPassword returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverPassword() bool {
	if o != nil && !IsNil(o.SettingsMailserverPassword) {
		return true
	}

	return false
}

// SetSettingsMailserverPassword gets a reference to the given string and assigns it to the SettingsMailserverPassword field.
func (o *LanguagePackData) SetSettingsMailserverPassword(v string) {
	o.SettingsMailserverPassword = &v
}

// GetSettingsMailserverPasswordHelp returns the SettingsMailserverPasswordHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverPasswordHelp() string {
	if o == nil || IsNil(o.SettingsMailserverPasswordHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverPasswordHelp
}

// GetSettingsMailserverPasswordHelpOk returns a tuple with the SettingsMailserverPasswordHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverPasswordHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverPasswordHelp) {
		return nil, false
	}
	return o.SettingsMailserverPasswordHelp, true
}

// HasSettingsMailserverPasswordHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverPasswordHelp() bool {
	if o != nil && !IsNil(o.SettingsMailserverPasswordHelp) {
		return true
	}

	return false
}

// SetSettingsMailserverPasswordHelp gets a reference to the given string and assigns it to the SettingsMailserverPasswordHelp field.
func (o *LanguagePackData) SetSettingsMailserverPasswordHelp(v string) {
	o.SettingsMailserverPasswordHelp = &v
}

// GetSettingsMailserverPort returns the SettingsMailserverPort field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverPort() string {
	if o == nil || IsNil(o.SettingsMailserverPort) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverPort
}

// GetSettingsMailserverPortOk returns a tuple with the SettingsMailserverPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverPortOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverPort) {
		return nil, false
	}
	return o.SettingsMailserverPort, true
}

// HasSettingsMailserverPort returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverPort() bool {
	if o != nil && !IsNil(o.SettingsMailserverPort) {
		return true
	}

	return false
}

// SetSettingsMailserverPort gets a reference to the given string and assigns it to the SettingsMailserverPort field.
func (o *LanguagePackData) SetSettingsMailserverPort(v string) {
	o.SettingsMailserverPort = &v
}

// GetSettingsMailserverPortHelp returns the SettingsMailserverPortHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverPortHelp() string {
	if o == nil || IsNil(o.SettingsMailserverPortHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverPortHelp
}

// GetSettingsMailserverPortHelpOk returns a tuple with the SettingsMailserverPortHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverPortHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverPortHelp) {
		return nil, false
	}
	return o.SettingsMailserverPortHelp, true
}

// HasSettingsMailserverPortHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverPortHelp() bool {
	if o != nil && !IsNil(o.SettingsMailserverPortHelp) {
		return true
	}

	return false
}

// SetSettingsMailserverPortHelp gets a reference to the given string and assigns it to the SettingsMailserverPortHelp field.
func (o *LanguagePackData) SetSettingsMailserverPortHelp(v string) {
	o.SettingsMailserverPortHelp = &v
}

// GetSettingsMailserverSkipTLS returns the SettingsMailserverSkipTLS field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverSkipTLS() string {
	if o == nil || IsNil(o.SettingsMailserverSkipTLS) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverSkipTLS
}

// GetSettingsMailserverSkipTLSOk returns a tuple with the SettingsMailserverSkipTLS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverSkipTLSOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverSkipTLS) {
		return nil, false
	}
	return o.SettingsMailserverSkipTLS, true
}

// HasSettingsMailserverSkipTLS returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverSkipTLS() bool {
	if o != nil && !IsNil(o.SettingsMailserverSkipTLS) {
		return true
	}

	return false
}

// SetSettingsMailserverSkipTLS gets a reference to the given string and assigns it to the SettingsMailserverSkipTLS field.
func (o *LanguagePackData) SetSettingsMailserverSkipTLS(v string) {
	o.SettingsMailserverSkipTLS = &v
}

// GetSettingsMailserverSkipTLSHelp returns the SettingsMailserverSkipTLSHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverSkipTLSHelp() string {
	if o == nil || IsNil(o.SettingsMailserverSkipTLSHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverSkipTLSHelp
}

// GetSettingsMailserverSkipTLSHelpOk returns a tuple with the SettingsMailserverSkipTLSHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverSkipTLSHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverSkipTLSHelp) {
		return nil, false
	}
	return o.SettingsMailserverSkipTLSHelp, true
}

// HasSettingsMailserverSkipTLSHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverSkipTLSHelp() bool {
	if o != nil && !IsNil(o.SettingsMailserverSkipTLSHelp) {
		return true
	}

	return false
}

// SetSettingsMailserverSkipTLSHelp gets a reference to the given string and assigns it to the SettingsMailserverSkipTLSHelp field.
func (o *LanguagePackData) SetSettingsMailserverSkipTLSHelp(v string) {
	o.SettingsMailserverSkipTLSHelp = &v
}

// GetSettingsMailserverTls returns the SettingsMailserverTls field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverTls() string {
	if o == nil || IsNil(o.SettingsMailserverTls) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverTls
}

// GetSettingsMailserverTlsOk returns a tuple with the SettingsMailserverTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverTlsOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverTls) {
		return nil, false
	}
	return o.SettingsMailserverTls, true
}

// HasSettingsMailserverTls returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverTls() bool {
	if o != nil && !IsNil(o.SettingsMailserverTls) {
		return true
	}

	return false
}

// SetSettingsMailserverTls gets a reference to the given string and assigns it to the SettingsMailserverTls field.
func (o *LanguagePackData) SetSettingsMailserverTls(v string) {
	o.SettingsMailserverTls = &v
}

// GetSettingsMailserverTlsHelp returns the SettingsMailserverTlsHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverTlsHelp() string {
	if o == nil || IsNil(o.SettingsMailserverTlsHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverTlsHelp
}

// GetSettingsMailserverTlsHelpOk returns a tuple with the SettingsMailserverTlsHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverTlsHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverTlsHelp) {
		return nil, false
	}
	return o.SettingsMailserverTlsHelp, true
}

// HasSettingsMailserverTlsHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverTlsHelp() bool {
	if o != nil && !IsNil(o.SettingsMailserverTlsHelp) {
		return true
	}

	return false
}

// SetSettingsMailserverTlsHelp gets a reference to the given string and assigns it to the SettingsMailserverTlsHelp field.
func (o *LanguagePackData) SetSettingsMailserverTlsHelp(v string) {
	o.SettingsMailserverTlsHelp = &v
}

// GetSettingsMailserverUsername returns the SettingsMailserverUsername field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverUsername() string {
	if o == nil || IsNil(o.SettingsMailserverUsername) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverUsername
}

// GetSettingsMailserverUsernameOk returns a tuple with the SettingsMailserverUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverUsername) {
		return nil, false
	}
	return o.SettingsMailserverUsername, true
}

// HasSettingsMailserverUsername returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverUsername() bool {
	if o != nil && !IsNil(o.SettingsMailserverUsername) {
		return true
	}

	return false
}

// SetSettingsMailserverUsername gets a reference to the given string and assigns it to the SettingsMailserverUsername field.
func (o *LanguagePackData) SetSettingsMailserverUsername(v string) {
	o.SettingsMailserverUsername = &v
}

// GetSettingsMailserverWaitTimeout returns the SettingsMailserverWaitTimeout field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverWaitTimeout() string {
	if o == nil || IsNil(o.SettingsMailserverWaitTimeout) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverWaitTimeout
}

// GetSettingsMailserverWaitTimeoutOk returns a tuple with the SettingsMailserverWaitTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverWaitTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverWaitTimeout) {
		return nil, false
	}
	return o.SettingsMailserverWaitTimeout, true
}

// HasSettingsMailserverWaitTimeout returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverWaitTimeout() bool {
	if o != nil && !IsNil(o.SettingsMailserverWaitTimeout) {
		return true
	}

	return false
}

// SetSettingsMailserverWaitTimeout gets a reference to the given string and assigns it to the SettingsMailserverWaitTimeout field.
func (o *LanguagePackData) SetSettingsMailserverWaitTimeout(v string) {
	o.SettingsMailserverWaitTimeout = &v
}

// GetSettingsMailserverWaitTimeoutHelp returns the SettingsMailserverWaitTimeoutHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMailserverWaitTimeoutHelp() string {
	if o == nil || IsNil(o.SettingsMailserverWaitTimeoutHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMailserverWaitTimeoutHelp
}

// GetSettingsMailserverWaitTimeoutHelpOk returns a tuple with the SettingsMailserverWaitTimeoutHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMailserverWaitTimeoutHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMailserverWaitTimeoutHelp) {
		return nil, false
	}
	return o.SettingsMailserverWaitTimeoutHelp, true
}

// HasSettingsMailserverWaitTimeoutHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMailserverWaitTimeoutHelp() bool {
	if o != nil && !IsNil(o.SettingsMailserverWaitTimeoutHelp) {
		return true
	}

	return false
}

// SetSettingsMailserverWaitTimeoutHelp gets a reference to the given string and assigns it to the SettingsMailserverWaitTimeoutHelp field.
func (o *LanguagePackData) SetSettingsMailserverWaitTimeoutHelp(v string) {
	o.SettingsMailserverWaitTimeoutHelp = &v
}

// GetSettingsMediaProvider returns the SettingsMediaProvider field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaProvider() string {
	if o == nil || IsNil(o.SettingsMediaProvider) {
		var ret string
		return ret
	}
	return *o.SettingsMediaProvider
}

// GetSettingsMediaProviderOk returns a tuple with the SettingsMediaProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaProviderOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaProvider) {
		return nil, false
	}
	return o.SettingsMediaProvider, true
}

// HasSettingsMediaProvider returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaProvider() bool {
	if o != nil && !IsNil(o.SettingsMediaProvider) {
		return true
	}

	return false
}

// SetSettingsMediaProvider gets a reference to the given string and assigns it to the SettingsMediaProvider field.
func (o *LanguagePackData) SetSettingsMediaProvider(v string) {
	o.SettingsMediaProvider = &v
}

// GetSettingsMediaS3Bucket returns the SettingsMediaS3Bucket field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaS3Bucket() string {
	if o == nil || IsNil(o.SettingsMediaS3Bucket) {
		var ret string
		return ret
	}
	return *o.SettingsMediaS3Bucket
}

// GetSettingsMediaS3BucketOk returns a tuple with the SettingsMediaS3Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaS3BucketOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaS3Bucket) {
		return nil, false
	}
	return o.SettingsMediaS3Bucket, true
}

// HasSettingsMediaS3Bucket returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaS3Bucket() bool {
	if o != nil && !IsNil(o.SettingsMediaS3Bucket) {
		return true
	}

	return false
}

// SetSettingsMediaS3Bucket gets a reference to the given string and assigns it to the SettingsMediaS3Bucket field.
func (o *LanguagePackData) SetSettingsMediaS3Bucket(v string) {
	o.SettingsMediaS3Bucket = &v
}

// GetSettingsMediaS3BucketPath returns the SettingsMediaS3BucketPath field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaS3BucketPath() string {
	if o == nil || IsNil(o.SettingsMediaS3BucketPath) {
		var ret string
		return ret
	}
	return *o.SettingsMediaS3BucketPath
}

// GetSettingsMediaS3BucketPathOk returns a tuple with the SettingsMediaS3BucketPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaS3BucketPathOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaS3BucketPath) {
		return nil, false
	}
	return o.SettingsMediaS3BucketPath, true
}

// HasSettingsMediaS3BucketPath returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaS3BucketPath() bool {
	if o != nil && !IsNil(o.SettingsMediaS3BucketPath) {
		return true
	}

	return false
}

// SetSettingsMediaS3BucketPath gets a reference to the given string and assigns it to the SettingsMediaS3BucketPath field.
func (o *LanguagePackData) SetSettingsMediaS3BucketPath(v string) {
	o.SettingsMediaS3BucketPath = &v
}

// GetSettingsMediaS3BucketPathHelp returns the SettingsMediaS3BucketPathHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaS3BucketPathHelp() string {
	if o == nil || IsNil(o.SettingsMediaS3BucketPathHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMediaS3BucketPathHelp
}

// GetSettingsMediaS3BucketPathHelpOk returns a tuple with the SettingsMediaS3BucketPathHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaS3BucketPathHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaS3BucketPathHelp) {
		return nil, false
	}
	return o.SettingsMediaS3BucketPathHelp, true
}

// HasSettingsMediaS3BucketPathHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaS3BucketPathHelp() bool {
	if o != nil && !IsNil(o.SettingsMediaS3BucketPathHelp) {
		return true
	}

	return false
}

// SetSettingsMediaS3BucketPathHelp gets a reference to the given string and assigns it to the SettingsMediaS3BucketPathHelp field.
func (o *LanguagePackData) SetSettingsMediaS3BucketPathHelp(v string) {
	o.SettingsMediaS3BucketPathHelp = &v
}

// GetSettingsMediaS3BucketType returns the SettingsMediaS3BucketType field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaS3BucketType() string {
	if o == nil || IsNil(o.SettingsMediaS3BucketType) {
		var ret string
		return ret
	}
	return *o.SettingsMediaS3BucketType
}

// GetSettingsMediaS3BucketTypeOk returns a tuple with the SettingsMediaS3BucketType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaS3BucketTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaS3BucketType) {
		return nil, false
	}
	return o.SettingsMediaS3BucketType, true
}

// HasSettingsMediaS3BucketType returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaS3BucketType() bool {
	if o != nil && !IsNil(o.SettingsMediaS3BucketType) {
		return true
	}

	return false
}

// SetSettingsMediaS3BucketType gets a reference to the given string and assigns it to the SettingsMediaS3BucketType field.
func (o *LanguagePackData) SetSettingsMediaS3BucketType(v string) {
	o.SettingsMediaS3BucketType = &v
}

// GetSettingsMediaS3BucketTypePrivate returns the SettingsMediaS3BucketTypePrivate field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaS3BucketTypePrivate() string {
	if o == nil || IsNil(o.SettingsMediaS3BucketTypePrivate) {
		var ret string
		return ret
	}
	return *o.SettingsMediaS3BucketTypePrivate
}

// GetSettingsMediaS3BucketTypePrivateOk returns a tuple with the SettingsMediaS3BucketTypePrivate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaS3BucketTypePrivateOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaS3BucketTypePrivate) {
		return nil, false
	}
	return o.SettingsMediaS3BucketTypePrivate, true
}

// HasSettingsMediaS3BucketTypePrivate returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaS3BucketTypePrivate() bool {
	if o != nil && !IsNil(o.SettingsMediaS3BucketTypePrivate) {
		return true
	}

	return false
}

// SetSettingsMediaS3BucketTypePrivate gets a reference to the given string and assigns it to the SettingsMediaS3BucketTypePrivate field.
func (o *LanguagePackData) SetSettingsMediaS3BucketTypePrivate(v string) {
	o.SettingsMediaS3BucketTypePrivate = &v
}

// GetSettingsMediaS3BucketTypePublic returns the SettingsMediaS3BucketTypePublic field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaS3BucketTypePublic() string {
	if o == nil || IsNil(o.SettingsMediaS3BucketTypePublic) {
		var ret string
		return ret
	}
	return *o.SettingsMediaS3BucketTypePublic
}

// GetSettingsMediaS3BucketTypePublicOk returns a tuple with the SettingsMediaS3BucketTypePublic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaS3BucketTypePublicOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaS3BucketTypePublic) {
		return nil, false
	}
	return o.SettingsMediaS3BucketTypePublic, true
}

// HasSettingsMediaS3BucketTypePublic returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaS3BucketTypePublic() bool {
	if o != nil && !IsNil(o.SettingsMediaS3BucketTypePublic) {
		return true
	}

	return false
}

// SetSettingsMediaS3BucketTypePublic gets a reference to the given string and assigns it to the SettingsMediaS3BucketTypePublic field.
func (o *LanguagePackData) SetSettingsMediaS3BucketTypePublic(v string) {
	o.SettingsMediaS3BucketTypePublic = &v
}

// GetSettingsMediaS3Key returns the SettingsMediaS3Key field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaS3Key() string {
	if o == nil || IsNil(o.SettingsMediaS3Key) {
		var ret string
		return ret
	}
	return *o.SettingsMediaS3Key
}

// GetSettingsMediaS3KeyOk returns a tuple with the SettingsMediaS3Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaS3KeyOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaS3Key) {
		return nil, false
	}
	return o.SettingsMediaS3Key, true
}

// HasSettingsMediaS3Key returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaS3Key() bool {
	if o != nil && !IsNil(o.SettingsMediaS3Key) {
		return true
	}

	return false
}

// SetSettingsMediaS3Key gets a reference to the given string and assigns it to the SettingsMediaS3Key field.
func (o *LanguagePackData) SetSettingsMediaS3Key(v string) {
	o.SettingsMediaS3Key = &v
}

// GetSettingsMediaS3PublicURL returns the SettingsMediaS3PublicURL field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaS3PublicURL() string {
	if o == nil || IsNil(o.SettingsMediaS3PublicURL) {
		var ret string
		return ret
	}
	return *o.SettingsMediaS3PublicURL
}

// GetSettingsMediaS3PublicURLOk returns a tuple with the SettingsMediaS3PublicURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaS3PublicURLOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaS3PublicURL) {
		return nil, false
	}
	return o.SettingsMediaS3PublicURL, true
}

// HasSettingsMediaS3PublicURL returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaS3PublicURL() bool {
	if o != nil && !IsNil(o.SettingsMediaS3PublicURL) {
		return true
	}

	return false
}

// SetSettingsMediaS3PublicURL gets a reference to the given string and assigns it to the SettingsMediaS3PublicURL field.
func (o *LanguagePackData) SetSettingsMediaS3PublicURL(v string) {
	o.SettingsMediaS3PublicURL = &v
}

// GetSettingsMediaS3PublicURLHelp returns the SettingsMediaS3PublicURLHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaS3PublicURLHelp() string {
	if o == nil || IsNil(o.SettingsMediaS3PublicURLHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMediaS3PublicURLHelp
}

// GetSettingsMediaS3PublicURLHelpOk returns a tuple with the SettingsMediaS3PublicURLHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaS3PublicURLHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaS3PublicURLHelp) {
		return nil, false
	}
	return o.SettingsMediaS3PublicURLHelp, true
}

// HasSettingsMediaS3PublicURLHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaS3PublicURLHelp() bool {
	if o != nil && !IsNil(o.SettingsMediaS3PublicURLHelp) {
		return true
	}

	return false
}

// SetSettingsMediaS3PublicURLHelp gets a reference to the given string and assigns it to the SettingsMediaS3PublicURLHelp field.
func (o *LanguagePackData) SetSettingsMediaS3PublicURLHelp(v string) {
	o.SettingsMediaS3PublicURLHelp = &v
}

// GetSettingsMediaS3Region returns the SettingsMediaS3Region field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaS3Region() string {
	if o == nil || IsNil(o.SettingsMediaS3Region) {
		var ret string
		return ret
	}
	return *o.SettingsMediaS3Region
}

// GetSettingsMediaS3RegionOk returns a tuple with the SettingsMediaS3Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaS3RegionOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaS3Region) {
		return nil, false
	}
	return o.SettingsMediaS3Region, true
}

// HasSettingsMediaS3Region returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaS3Region() bool {
	if o != nil && !IsNil(o.SettingsMediaS3Region) {
		return true
	}

	return false
}

// SetSettingsMediaS3Region gets a reference to the given string and assigns it to the SettingsMediaS3Region field.
func (o *LanguagePackData) SetSettingsMediaS3Region(v string) {
	o.SettingsMediaS3Region = &v
}

// GetSettingsMediaS3Secret returns the SettingsMediaS3Secret field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaS3Secret() string {
	if o == nil || IsNil(o.SettingsMediaS3Secret) {
		var ret string
		return ret
	}
	return *o.SettingsMediaS3Secret
}

// GetSettingsMediaS3SecretOk returns a tuple with the SettingsMediaS3Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaS3SecretOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaS3Secret) {
		return nil, false
	}
	return o.SettingsMediaS3Secret, true
}

// HasSettingsMediaS3Secret returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaS3Secret() bool {
	if o != nil && !IsNil(o.SettingsMediaS3Secret) {
		return true
	}

	return false
}

// SetSettingsMediaS3Secret gets a reference to the given string and assigns it to the SettingsMediaS3Secret field.
func (o *LanguagePackData) SetSettingsMediaS3Secret(v string) {
	o.SettingsMediaS3Secret = &v
}

// GetSettingsMediaS3UploadExpiry returns the SettingsMediaS3UploadExpiry field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaS3UploadExpiry() string {
	if o == nil || IsNil(o.SettingsMediaS3UploadExpiry) {
		var ret string
		return ret
	}
	return *o.SettingsMediaS3UploadExpiry
}

// GetSettingsMediaS3UploadExpiryOk returns a tuple with the SettingsMediaS3UploadExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaS3UploadExpiryOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaS3UploadExpiry) {
		return nil, false
	}
	return o.SettingsMediaS3UploadExpiry, true
}

// HasSettingsMediaS3UploadExpiry returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaS3UploadExpiry() bool {
	if o != nil && !IsNil(o.SettingsMediaS3UploadExpiry) {
		return true
	}

	return false
}

// SetSettingsMediaS3UploadExpiry gets a reference to the given string and assigns it to the SettingsMediaS3UploadExpiry field.
func (o *LanguagePackData) SetSettingsMediaS3UploadExpiry(v string) {
	o.SettingsMediaS3UploadExpiry = &v
}

// GetSettingsMediaS3UploadExpiryHelp returns the SettingsMediaS3UploadExpiryHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaS3UploadExpiryHelp() string {
	if o == nil || IsNil(o.SettingsMediaS3UploadExpiryHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMediaS3UploadExpiryHelp
}

// GetSettingsMediaS3UploadExpiryHelpOk returns a tuple with the SettingsMediaS3UploadExpiryHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaS3UploadExpiryHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaS3UploadExpiryHelp) {
		return nil, false
	}
	return o.SettingsMediaS3UploadExpiryHelp, true
}

// HasSettingsMediaS3UploadExpiryHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaS3UploadExpiryHelp() bool {
	if o != nil && !IsNil(o.SettingsMediaS3UploadExpiryHelp) {
		return true
	}

	return false
}

// SetSettingsMediaS3UploadExpiryHelp gets a reference to the given string and assigns it to the SettingsMediaS3UploadExpiryHelp field.
func (o *LanguagePackData) SetSettingsMediaS3UploadExpiryHelp(v string) {
	o.SettingsMediaS3UploadExpiryHelp = &v
}

// GetSettingsMediaS3Url returns the SettingsMediaS3Url field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaS3Url() string {
	if o == nil || IsNil(o.SettingsMediaS3Url) {
		var ret string
		return ret
	}
	return *o.SettingsMediaS3Url
}

// GetSettingsMediaS3UrlOk returns a tuple with the SettingsMediaS3Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaS3UrlOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaS3Url) {
		return nil, false
	}
	return o.SettingsMediaS3Url, true
}

// HasSettingsMediaS3Url returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaS3Url() bool {
	if o != nil && !IsNil(o.SettingsMediaS3Url) {
		return true
	}

	return false
}

// SetSettingsMediaS3Url gets a reference to the given string and assigns it to the SettingsMediaS3Url field.
func (o *LanguagePackData) SetSettingsMediaS3Url(v string) {
	o.SettingsMediaS3Url = &v
}

// GetSettingsMediaS3UrlHelp returns the SettingsMediaS3UrlHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaS3UrlHelp() string {
	if o == nil || IsNil(o.SettingsMediaS3UrlHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMediaS3UrlHelp
}

// GetSettingsMediaS3UrlHelpOk returns a tuple with the SettingsMediaS3UrlHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaS3UrlHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaS3UrlHelp) {
		return nil, false
	}
	return o.SettingsMediaS3UrlHelp, true
}

// HasSettingsMediaS3UrlHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaS3UrlHelp() bool {
	if o != nil && !IsNil(o.SettingsMediaS3UrlHelp) {
		return true
	}

	return false
}

// SetSettingsMediaS3UrlHelp gets a reference to the given string and assigns it to the SettingsMediaS3UrlHelp field.
func (o *LanguagePackData) SetSettingsMediaS3UrlHelp(v string) {
	o.SettingsMediaS3UrlHelp = &v
}

// GetSettingsMediaTitle returns the SettingsMediaTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaTitle() string {
	if o == nil || IsNil(o.SettingsMediaTitle) {
		var ret string
		return ret
	}
	return *o.SettingsMediaTitle
}

// GetSettingsMediaTitleOk returns a tuple with the SettingsMediaTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaTitleOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaTitle) {
		return nil, false
	}
	return o.SettingsMediaTitle, true
}

// HasSettingsMediaTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaTitle() bool {
	if o != nil && !IsNil(o.SettingsMediaTitle) {
		return true
	}

	return false
}

// SetSettingsMediaTitle gets a reference to the given string and assigns it to the SettingsMediaTitle field.
func (o *LanguagePackData) SetSettingsMediaTitle(v string) {
	o.SettingsMediaTitle = &v
}

// GetSettingsMediaUploadPath returns the SettingsMediaUploadPath field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaUploadPath() string {
	if o == nil || IsNil(o.SettingsMediaUploadPath) {
		var ret string
		return ret
	}
	return *o.SettingsMediaUploadPath
}

// GetSettingsMediaUploadPathOk returns a tuple with the SettingsMediaUploadPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaUploadPathOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaUploadPath) {
		return nil, false
	}
	return o.SettingsMediaUploadPath, true
}

// HasSettingsMediaUploadPath returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaUploadPath() bool {
	if o != nil && !IsNil(o.SettingsMediaUploadPath) {
		return true
	}

	return false
}

// SetSettingsMediaUploadPath gets a reference to the given string and assigns it to the SettingsMediaUploadPath field.
func (o *LanguagePackData) SetSettingsMediaUploadPath(v string) {
	o.SettingsMediaUploadPath = &v
}

// GetSettingsMediaUploadPathHelp returns the SettingsMediaUploadPathHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaUploadPathHelp() string {
	if o == nil || IsNil(o.SettingsMediaUploadPathHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMediaUploadPathHelp
}

// GetSettingsMediaUploadPathHelpOk returns a tuple with the SettingsMediaUploadPathHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaUploadPathHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaUploadPathHelp) {
		return nil, false
	}
	return o.SettingsMediaUploadPathHelp, true
}

// HasSettingsMediaUploadPathHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaUploadPathHelp() bool {
	if o != nil && !IsNil(o.SettingsMediaUploadPathHelp) {
		return true
	}

	return false
}

// SetSettingsMediaUploadPathHelp gets a reference to the given string and assigns it to the SettingsMediaUploadPathHelp field.
func (o *LanguagePackData) SetSettingsMediaUploadPathHelp(v string) {
	o.SettingsMediaUploadPathHelp = &v
}

// GetSettingsMediaUploadUri returns the SettingsMediaUploadUri field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaUploadUri() string {
	if o == nil || IsNil(o.SettingsMediaUploadUri) {
		var ret string
		return ret
	}
	return *o.SettingsMediaUploadUri
}

// GetSettingsMediaUploadUriOk returns a tuple with the SettingsMediaUploadUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaUploadUriOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaUploadUri) {
		return nil, false
	}
	return o.SettingsMediaUploadUri, true
}

// HasSettingsMediaUploadUri returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaUploadUri() bool {
	if o != nil && !IsNil(o.SettingsMediaUploadUri) {
		return true
	}

	return false
}

// SetSettingsMediaUploadUri gets a reference to the given string and assigns it to the SettingsMediaUploadUri field.
func (o *LanguagePackData) SetSettingsMediaUploadUri(v string) {
	o.SettingsMediaUploadUri = &v
}

// GetSettingsMediaUploadUriHelp returns the SettingsMediaUploadUriHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMediaUploadUriHelp() string {
	if o == nil || IsNil(o.SettingsMediaUploadUriHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMediaUploadUriHelp
}

// GetSettingsMediaUploadUriHelpOk returns a tuple with the SettingsMediaUploadUriHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMediaUploadUriHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMediaUploadUriHelp) {
		return nil, false
	}
	return o.SettingsMediaUploadUriHelp, true
}

// HasSettingsMediaUploadUriHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMediaUploadUriHelp() bool {
	if o != nil && !IsNil(o.SettingsMediaUploadUriHelp) {
		return true
	}

	return false
}

// SetSettingsMediaUploadUriHelp gets a reference to the given string and assigns it to the SettingsMediaUploadUriHelp field.
func (o *LanguagePackData) SetSettingsMediaUploadUriHelp(v string) {
	o.SettingsMediaUploadUriHelp = &v
}

// GetSettingsMessengersMaxConns returns the SettingsMessengersMaxConns field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMessengersMaxConns() string {
	if o == nil || IsNil(o.SettingsMessengersMaxConns) {
		var ret string
		return ret
	}
	return *o.SettingsMessengersMaxConns
}

// GetSettingsMessengersMaxConnsOk returns a tuple with the SettingsMessengersMaxConns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMessengersMaxConnsOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMessengersMaxConns) {
		return nil, false
	}
	return o.SettingsMessengersMaxConns, true
}

// HasSettingsMessengersMaxConns returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMessengersMaxConns() bool {
	if o != nil && !IsNil(o.SettingsMessengersMaxConns) {
		return true
	}

	return false
}

// SetSettingsMessengersMaxConns gets a reference to the given string and assigns it to the SettingsMessengersMaxConns field.
func (o *LanguagePackData) SetSettingsMessengersMaxConns(v string) {
	o.SettingsMessengersMaxConns = &v
}

// GetSettingsMessengersMaxConnsHelp returns the SettingsMessengersMaxConnsHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMessengersMaxConnsHelp() string {
	if o == nil || IsNil(o.SettingsMessengersMaxConnsHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMessengersMaxConnsHelp
}

// GetSettingsMessengersMaxConnsHelpOk returns a tuple with the SettingsMessengersMaxConnsHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMessengersMaxConnsHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMessengersMaxConnsHelp) {
		return nil, false
	}
	return o.SettingsMessengersMaxConnsHelp, true
}

// HasSettingsMessengersMaxConnsHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMessengersMaxConnsHelp() bool {
	if o != nil && !IsNil(o.SettingsMessengersMaxConnsHelp) {
		return true
	}

	return false
}

// SetSettingsMessengersMaxConnsHelp gets a reference to the given string and assigns it to the SettingsMessengersMaxConnsHelp field.
func (o *LanguagePackData) SetSettingsMessengersMaxConnsHelp(v string) {
	o.SettingsMessengersMaxConnsHelp = &v
}

// GetSettingsMessengersMessageSaved returns the SettingsMessengersMessageSaved field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMessengersMessageSaved() string {
	if o == nil || IsNil(o.SettingsMessengersMessageSaved) {
		var ret string
		return ret
	}
	return *o.SettingsMessengersMessageSaved
}

// GetSettingsMessengersMessageSavedOk returns a tuple with the SettingsMessengersMessageSaved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMessengersMessageSavedOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMessengersMessageSaved) {
		return nil, false
	}
	return o.SettingsMessengersMessageSaved, true
}

// HasSettingsMessengersMessageSaved returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMessengersMessageSaved() bool {
	if o != nil && !IsNil(o.SettingsMessengersMessageSaved) {
		return true
	}

	return false
}

// SetSettingsMessengersMessageSaved gets a reference to the given string and assigns it to the SettingsMessengersMessageSaved field.
func (o *LanguagePackData) SetSettingsMessengersMessageSaved(v string) {
	o.SettingsMessengersMessageSaved = &v
}

// GetSettingsMessengersName returns the SettingsMessengersName field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMessengersName() string {
	if o == nil || IsNil(o.SettingsMessengersName) {
		var ret string
		return ret
	}
	return *o.SettingsMessengersName
}

// GetSettingsMessengersNameOk returns a tuple with the SettingsMessengersName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMessengersNameOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMessengersName) {
		return nil, false
	}
	return o.SettingsMessengersName, true
}

// HasSettingsMessengersName returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMessengersName() bool {
	if o != nil && !IsNil(o.SettingsMessengersName) {
		return true
	}

	return false
}

// SetSettingsMessengersName gets a reference to the given string and assigns it to the SettingsMessengersName field.
func (o *LanguagePackData) SetSettingsMessengersName(v string) {
	o.SettingsMessengersName = &v
}

// GetSettingsMessengersNameHelp returns the SettingsMessengersNameHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMessengersNameHelp() string {
	if o == nil || IsNil(o.SettingsMessengersNameHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMessengersNameHelp
}

// GetSettingsMessengersNameHelpOk returns a tuple with the SettingsMessengersNameHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMessengersNameHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMessengersNameHelp) {
		return nil, false
	}
	return o.SettingsMessengersNameHelp, true
}

// HasSettingsMessengersNameHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMessengersNameHelp() bool {
	if o != nil && !IsNil(o.SettingsMessengersNameHelp) {
		return true
	}

	return false
}

// SetSettingsMessengersNameHelp gets a reference to the given string and assigns it to the SettingsMessengersNameHelp field.
func (o *LanguagePackData) SetSettingsMessengersNameHelp(v string) {
	o.SettingsMessengersNameHelp = &v
}

// GetSettingsMessengersPassword returns the SettingsMessengersPassword field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMessengersPassword() string {
	if o == nil || IsNil(o.SettingsMessengersPassword) {
		var ret string
		return ret
	}
	return *o.SettingsMessengersPassword
}

// GetSettingsMessengersPasswordOk returns a tuple with the SettingsMessengersPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMessengersPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMessengersPassword) {
		return nil, false
	}
	return o.SettingsMessengersPassword, true
}

// HasSettingsMessengersPassword returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMessengersPassword() bool {
	if o != nil && !IsNil(o.SettingsMessengersPassword) {
		return true
	}

	return false
}

// SetSettingsMessengersPassword gets a reference to the given string and assigns it to the SettingsMessengersPassword field.
func (o *LanguagePackData) SetSettingsMessengersPassword(v string) {
	o.SettingsMessengersPassword = &v
}

// GetSettingsMessengersRetries returns the SettingsMessengersRetries field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMessengersRetries() string {
	if o == nil || IsNil(o.SettingsMessengersRetries) {
		var ret string
		return ret
	}
	return *o.SettingsMessengersRetries
}

// GetSettingsMessengersRetriesOk returns a tuple with the SettingsMessengersRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMessengersRetriesOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMessengersRetries) {
		return nil, false
	}
	return o.SettingsMessengersRetries, true
}

// HasSettingsMessengersRetries returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMessengersRetries() bool {
	if o != nil && !IsNil(o.SettingsMessengersRetries) {
		return true
	}

	return false
}

// SetSettingsMessengersRetries gets a reference to the given string and assigns it to the SettingsMessengersRetries field.
func (o *LanguagePackData) SetSettingsMessengersRetries(v string) {
	o.SettingsMessengersRetries = &v
}

// GetSettingsMessengersRetriesHelp returns the SettingsMessengersRetriesHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMessengersRetriesHelp() string {
	if o == nil || IsNil(o.SettingsMessengersRetriesHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMessengersRetriesHelp
}

// GetSettingsMessengersRetriesHelpOk returns a tuple with the SettingsMessengersRetriesHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMessengersRetriesHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMessengersRetriesHelp) {
		return nil, false
	}
	return o.SettingsMessengersRetriesHelp, true
}

// HasSettingsMessengersRetriesHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMessengersRetriesHelp() bool {
	if o != nil && !IsNil(o.SettingsMessengersRetriesHelp) {
		return true
	}

	return false
}

// SetSettingsMessengersRetriesHelp gets a reference to the given string and assigns it to the SettingsMessengersRetriesHelp field.
func (o *LanguagePackData) SetSettingsMessengersRetriesHelp(v string) {
	o.SettingsMessengersRetriesHelp = &v
}

// GetSettingsMessengersSkipTLSHelp returns the SettingsMessengersSkipTLSHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMessengersSkipTLSHelp() string {
	if o == nil || IsNil(o.SettingsMessengersSkipTLSHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMessengersSkipTLSHelp
}

// GetSettingsMessengersSkipTLSHelpOk returns a tuple with the SettingsMessengersSkipTLSHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMessengersSkipTLSHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMessengersSkipTLSHelp) {
		return nil, false
	}
	return o.SettingsMessengersSkipTLSHelp, true
}

// HasSettingsMessengersSkipTLSHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMessengersSkipTLSHelp() bool {
	if o != nil && !IsNil(o.SettingsMessengersSkipTLSHelp) {
		return true
	}

	return false
}

// SetSettingsMessengersSkipTLSHelp gets a reference to the given string and assigns it to the SettingsMessengersSkipTLSHelp field.
func (o *LanguagePackData) SetSettingsMessengersSkipTLSHelp(v string) {
	o.SettingsMessengersSkipTLSHelp = &v
}

// GetSettingsMessengersTimeout returns the SettingsMessengersTimeout field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMessengersTimeout() string {
	if o == nil || IsNil(o.SettingsMessengersTimeout) {
		var ret string
		return ret
	}
	return *o.SettingsMessengersTimeout
}

// GetSettingsMessengersTimeoutOk returns a tuple with the SettingsMessengersTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMessengersTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMessengersTimeout) {
		return nil, false
	}
	return o.SettingsMessengersTimeout, true
}

// HasSettingsMessengersTimeout returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMessengersTimeout() bool {
	if o != nil && !IsNil(o.SettingsMessengersTimeout) {
		return true
	}

	return false
}

// SetSettingsMessengersTimeout gets a reference to the given string and assigns it to the SettingsMessengersTimeout field.
func (o *LanguagePackData) SetSettingsMessengersTimeout(v string) {
	o.SettingsMessengersTimeout = &v
}

// GetSettingsMessengersTimeoutHelp returns the SettingsMessengersTimeoutHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMessengersTimeoutHelp() string {
	if o == nil || IsNil(o.SettingsMessengersTimeoutHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMessengersTimeoutHelp
}

// GetSettingsMessengersTimeoutHelpOk returns a tuple with the SettingsMessengersTimeoutHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMessengersTimeoutHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMessengersTimeoutHelp) {
		return nil, false
	}
	return o.SettingsMessengersTimeoutHelp, true
}

// HasSettingsMessengersTimeoutHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMessengersTimeoutHelp() bool {
	if o != nil && !IsNil(o.SettingsMessengersTimeoutHelp) {
		return true
	}

	return false
}

// SetSettingsMessengersTimeoutHelp gets a reference to the given string and assigns it to the SettingsMessengersTimeoutHelp field.
func (o *LanguagePackData) SetSettingsMessengersTimeoutHelp(v string) {
	o.SettingsMessengersTimeoutHelp = &v
}

// GetSettingsMessengersUrl returns the SettingsMessengersUrl field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMessengersUrl() string {
	if o == nil || IsNil(o.SettingsMessengersUrl) {
		var ret string
		return ret
	}
	return *o.SettingsMessengersUrl
}

// GetSettingsMessengersUrlOk returns a tuple with the SettingsMessengersUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMessengersUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMessengersUrl) {
		return nil, false
	}
	return o.SettingsMessengersUrl, true
}

// HasSettingsMessengersUrl returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMessengersUrl() bool {
	if o != nil && !IsNil(o.SettingsMessengersUrl) {
		return true
	}

	return false
}

// SetSettingsMessengersUrl gets a reference to the given string and assigns it to the SettingsMessengersUrl field.
func (o *LanguagePackData) SetSettingsMessengersUrl(v string) {
	o.SettingsMessengersUrl = &v
}

// GetSettingsMessengersUrlHelp returns the SettingsMessengersUrlHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMessengersUrlHelp() string {
	if o == nil || IsNil(o.SettingsMessengersUrlHelp) {
		var ret string
		return ret
	}
	return *o.SettingsMessengersUrlHelp
}

// GetSettingsMessengersUrlHelpOk returns a tuple with the SettingsMessengersUrlHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMessengersUrlHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMessengersUrlHelp) {
		return nil, false
	}
	return o.SettingsMessengersUrlHelp, true
}

// HasSettingsMessengersUrlHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMessengersUrlHelp() bool {
	if o != nil && !IsNil(o.SettingsMessengersUrlHelp) {
		return true
	}

	return false
}

// SetSettingsMessengersUrlHelp gets a reference to the given string and assigns it to the SettingsMessengersUrlHelp field.
func (o *LanguagePackData) SetSettingsMessengersUrlHelp(v string) {
	o.SettingsMessengersUrlHelp = &v
}

// GetSettingsMessengersUsername returns the SettingsMessengersUsername field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsMessengersUsername() string {
	if o == nil || IsNil(o.SettingsMessengersUsername) {
		var ret string
		return ret
	}
	return *o.SettingsMessengersUsername
}

// GetSettingsMessengersUsernameOk returns a tuple with the SettingsMessengersUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsMessengersUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsMessengersUsername) {
		return nil, false
	}
	return o.SettingsMessengersUsername, true
}

// HasSettingsMessengersUsername returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsMessengersUsername() bool {
	if o != nil && !IsNil(o.SettingsMessengersUsername) {
		return true
	}

	return false
}

// SetSettingsMessengersUsername gets a reference to the given string and assigns it to the SettingsMessengersUsername field.
func (o *LanguagePackData) SetSettingsMessengersUsername(v string) {
	o.SettingsMessengersUsername = &v
}

// GetSettingsNeedsRestart returns the SettingsNeedsRestart field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsNeedsRestart() string {
	if o == nil || IsNil(o.SettingsNeedsRestart) {
		var ret string
		return ret
	}
	return *o.SettingsNeedsRestart
}

// GetSettingsNeedsRestartOk returns a tuple with the SettingsNeedsRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsNeedsRestartOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsNeedsRestart) {
		return nil, false
	}
	return o.SettingsNeedsRestart, true
}

// HasSettingsNeedsRestart returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsNeedsRestart() bool {
	if o != nil && !IsNil(o.SettingsNeedsRestart) {
		return true
	}

	return false
}

// SetSettingsNeedsRestart gets a reference to the given string and assigns it to the SettingsNeedsRestart field.
func (o *LanguagePackData) SetSettingsNeedsRestart(v string) {
	o.SettingsNeedsRestart = &v
}

// GetSettingsPerformanceBatchSize returns the SettingsPerformanceBatchSize field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPerformanceBatchSize() string {
	if o == nil || IsNil(o.SettingsPerformanceBatchSize) {
		var ret string
		return ret
	}
	return *o.SettingsPerformanceBatchSize
}

// GetSettingsPerformanceBatchSizeOk returns a tuple with the SettingsPerformanceBatchSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPerformanceBatchSizeOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPerformanceBatchSize) {
		return nil, false
	}
	return o.SettingsPerformanceBatchSize, true
}

// HasSettingsPerformanceBatchSize returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPerformanceBatchSize() bool {
	if o != nil && !IsNil(o.SettingsPerformanceBatchSize) {
		return true
	}

	return false
}

// SetSettingsPerformanceBatchSize gets a reference to the given string and assigns it to the SettingsPerformanceBatchSize field.
func (o *LanguagePackData) SetSettingsPerformanceBatchSize(v string) {
	o.SettingsPerformanceBatchSize = &v
}

// GetSettingsPerformanceBatchSizeHelp returns the SettingsPerformanceBatchSizeHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPerformanceBatchSizeHelp() string {
	if o == nil || IsNil(o.SettingsPerformanceBatchSizeHelp) {
		var ret string
		return ret
	}
	return *o.SettingsPerformanceBatchSizeHelp
}

// GetSettingsPerformanceBatchSizeHelpOk returns a tuple with the SettingsPerformanceBatchSizeHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPerformanceBatchSizeHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPerformanceBatchSizeHelp) {
		return nil, false
	}
	return o.SettingsPerformanceBatchSizeHelp, true
}

// HasSettingsPerformanceBatchSizeHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPerformanceBatchSizeHelp() bool {
	if o != nil && !IsNil(o.SettingsPerformanceBatchSizeHelp) {
		return true
	}

	return false
}

// SetSettingsPerformanceBatchSizeHelp gets a reference to the given string and assigns it to the SettingsPerformanceBatchSizeHelp field.
func (o *LanguagePackData) SetSettingsPerformanceBatchSizeHelp(v string) {
	o.SettingsPerformanceBatchSizeHelp = &v
}

// GetSettingsPerformanceConcurrency returns the SettingsPerformanceConcurrency field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPerformanceConcurrency() string {
	if o == nil || IsNil(o.SettingsPerformanceConcurrency) {
		var ret string
		return ret
	}
	return *o.SettingsPerformanceConcurrency
}

// GetSettingsPerformanceConcurrencyOk returns a tuple with the SettingsPerformanceConcurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPerformanceConcurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPerformanceConcurrency) {
		return nil, false
	}
	return o.SettingsPerformanceConcurrency, true
}

// HasSettingsPerformanceConcurrency returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPerformanceConcurrency() bool {
	if o != nil && !IsNil(o.SettingsPerformanceConcurrency) {
		return true
	}

	return false
}

// SetSettingsPerformanceConcurrency gets a reference to the given string and assigns it to the SettingsPerformanceConcurrency field.
func (o *LanguagePackData) SetSettingsPerformanceConcurrency(v string) {
	o.SettingsPerformanceConcurrency = &v
}

// GetSettingsPerformanceConcurrencyHelp returns the SettingsPerformanceConcurrencyHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPerformanceConcurrencyHelp() string {
	if o == nil || IsNil(o.SettingsPerformanceConcurrencyHelp) {
		var ret string
		return ret
	}
	return *o.SettingsPerformanceConcurrencyHelp
}

// GetSettingsPerformanceConcurrencyHelpOk returns a tuple with the SettingsPerformanceConcurrencyHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPerformanceConcurrencyHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPerformanceConcurrencyHelp) {
		return nil, false
	}
	return o.SettingsPerformanceConcurrencyHelp, true
}

// HasSettingsPerformanceConcurrencyHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPerformanceConcurrencyHelp() bool {
	if o != nil && !IsNil(o.SettingsPerformanceConcurrencyHelp) {
		return true
	}

	return false
}

// SetSettingsPerformanceConcurrencyHelp gets a reference to the given string and assigns it to the SettingsPerformanceConcurrencyHelp field.
func (o *LanguagePackData) SetSettingsPerformanceConcurrencyHelp(v string) {
	o.SettingsPerformanceConcurrencyHelp = &v
}

// GetSettingsPerformanceMaxErrThreshold returns the SettingsPerformanceMaxErrThreshold field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPerformanceMaxErrThreshold() string {
	if o == nil || IsNil(o.SettingsPerformanceMaxErrThreshold) {
		var ret string
		return ret
	}
	return *o.SettingsPerformanceMaxErrThreshold
}

// GetSettingsPerformanceMaxErrThresholdOk returns a tuple with the SettingsPerformanceMaxErrThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPerformanceMaxErrThresholdOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPerformanceMaxErrThreshold) {
		return nil, false
	}
	return o.SettingsPerformanceMaxErrThreshold, true
}

// HasSettingsPerformanceMaxErrThreshold returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPerformanceMaxErrThreshold() bool {
	if o != nil && !IsNil(o.SettingsPerformanceMaxErrThreshold) {
		return true
	}

	return false
}

// SetSettingsPerformanceMaxErrThreshold gets a reference to the given string and assigns it to the SettingsPerformanceMaxErrThreshold field.
func (o *LanguagePackData) SetSettingsPerformanceMaxErrThreshold(v string) {
	o.SettingsPerformanceMaxErrThreshold = &v
}

// GetSettingsPerformanceMaxErrThresholdHelp returns the SettingsPerformanceMaxErrThresholdHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPerformanceMaxErrThresholdHelp() string {
	if o == nil || IsNil(o.SettingsPerformanceMaxErrThresholdHelp) {
		var ret string
		return ret
	}
	return *o.SettingsPerformanceMaxErrThresholdHelp
}

// GetSettingsPerformanceMaxErrThresholdHelpOk returns a tuple with the SettingsPerformanceMaxErrThresholdHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPerformanceMaxErrThresholdHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPerformanceMaxErrThresholdHelp) {
		return nil, false
	}
	return o.SettingsPerformanceMaxErrThresholdHelp, true
}

// HasSettingsPerformanceMaxErrThresholdHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPerformanceMaxErrThresholdHelp() bool {
	if o != nil && !IsNil(o.SettingsPerformanceMaxErrThresholdHelp) {
		return true
	}

	return false
}

// SetSettingsPerformanceMaxErrThresholdHelp gets a reference to the given string and assigns it to the SettingsPerformanceMaxErrThresholdHelp field.
func (o *LanguagePackData) SetSettingsPerformanceMaxErrThresholdHelp(v string) {
	o.SettingsPerformanceMaxErrThresholdHelp = &v
}

// GetSettingsPerformanceMessageRate returns the SettingsPerformanceMessageRate field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPerformanceMessageRate() string {
	if o == nil || IsNil(o.SettingsPerformanceMessageRate) {
		var ret string
		return ret
	}
	return *o.SettingsPerformanceMessageRate
}

// GetSettingsPerformanceMessageRateOk returns a tuple with the SettingsPerformanceMessageRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPerformanceMessageRateOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPerformanceMessageRate) {
		return nil, false
	}
	return o.SettingsPerformanceMessageRate, true
}

// HasSettingsPerformanceMessageRate returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPerformanceMessageRate() bool {
	if o != nil && !IsNil(o.SettingsPerformanceMessageRate) {
		return true
	}

	return false
}

// SetSettingsPerformanceMessageRate gets a reference to the given string and assigns it to the SettingsPerformanceMessageRate field.
func (o *LanguagePackData) SetSettingsPerformanceMessageRate(v string) {
	o.SettingsPerformanceMessageRate = &v
}

// GetSettingsPerformanceMessageRateHelp returns the SettingsPerformanceMessageRateHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPerformanceMessageRateHelp() string {
	if o == nil || IsNil(o.SettingsPerformanceMessageRateHelp) {
		var ret string
		return ret
	}
	return *o.SettingsPerformanceMessageRateHelp
}

// GetSettingsPerformanceMessageRateHelpOk returns a tuple with the SettingsPerformanceMessageRateHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPerformanceMessageRateHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPerformanceMessageRateHelp) {
		return nil, false
	}
	return o.SettingsPerformanceMessageRateHelp, true
}

// HasSettingsPerformanceMessageRateHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPerformanceMessageRateHelp() bool {
	if o != nil && !IsNil(o.SettingsPerformanceMessageRateHelp) {
		return true
	}

	return false
}

// SetSettingsPerformanceMessageRateHelp gets a reference to the given string and assigns it to the SettingsPerformanceMessageRateHelp field.
func (o *LanguagePackData) SetSettingsPerformanceMessageRateHelp(v string) {
	o.SettingsPerformanceMessageRateHelp = &v
}

// GetSettingsPerformanceName returns the SettingsPerformanceName field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPerformanceName() string {
	if o == nil || IsNil(o.SettingsPerformanceName) {
		var ret string
		return ret
	}
	return *o.SettingsPerformanceName
}

// GetSettingsPerformanceNameOk returns a tuple with the SettingsPerformanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPerformanceNameOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPerformanceName) {
		return nil, false
	}
	return o.SettingsPerformanceName, true
}

// HasSettingsPerformanceName returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPerformanceName() bool {
	if o != nil && !IsNil(o.SettingsPerformanceName) {
		return true
	}

	return false
}

// SetSettingsPerformanceName gets a reference to the given string and assigns it to the SettingsPerformanceName field.
func (o *LanguagePackData) SetSettingsPerformanceName(v string) {
	o.SettingsPerformanceName = &v
}

// GetSettingsPerformanceSlidingWindow returns the SettingsPerformanceSlidingWindow field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPerformanceSlidingWindow() string {
	if o == nil || IsNil(o.SettingsPerformanceSlidingWindow) {
		var ret string
		return ret
	}
	return *o.SettingsPerformanceSlidingWindow
}

// GetSettingsPerformanceSlidingWindowOk returns a tuple with the SettingsPerformanceSlidingWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPerformanceSlidingWindowOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPerformanceSlidingWindow) {
		return nil, false
	}
	return o.SettingsPerformanceSlidingWindow, true
}

// HasSettingsPerformanceSlidingWindow returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPerformanceSlidingWindow() bool {
	if o != nil && !IsNil(o.SettingsPerformanceSlidingWindow) {
		return true
	}

	return false
}

// SetSettingsPerformanceSlidingWindow gets a reference to the given string and assigns it to the SettingsPerformanceSlidingWindow field.
func (o *LanguagePackData) SetSettingsPerformanceSlidingWindow(v string) {
	o.SettingsPerformanceSlidingWindow = &v
}

// GetSettingsPerformanceSlidingWindowDuration returns the SettingsPerformanceSlidingWindowDuration field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPerformanceSlidingWindowDuration() string {
	if o == nil || IsNil(o.SettingsPerformanceSlidingWindowDuration) {
		var ret string
		return ret
	}
	return *o.SettingsPerformanceSlidingWindowDuration
}

// GetSettingsPerformanceSlidingWindowDurationOk returns a tuple with the SettingsPerformanceSlidingWindowDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPerformanceSlidingWindowDurationOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPerformanceSlidingWindowDuration) {
		return nil, false
	}
	return o.SettingsPerformanceSlidingWindowDuration, true
}

// HasSettingsPerformanceSlidingWindowDuration returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPerformanceSlidingWindowDuration() bool {
	if o != nil && !IsNil(o.SettingsPerformanceSlidingWindowDuration) {
		return true
	}

	return false
}

// SetSettingsPerformanceSlidingWindowDuration gets a reference to the given string and assigns it to the SettingsPerformanceSlidingWindowDuration field.
func (o *LanguagePackData) SetSettingsPerformanceSlidingWindowDuration(v string) {
	o.SettingsPerformanceSlidingWindowDuration = &v
}

// GetSettingsPerformanceSlidingWindowDurationHelp returns the SettingsPerformanceSlidingWindowDurationHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPerformanceSlidingWindowDurationHelp() string {
	if o == nil || IsNil(o.SettingsPerformanceSlidingWindowDurationHelp) {
		var ret string
		return ret
	}
	return *o.SettingsPerformanceSlidingWindowDurationHelp
}

// GetSettingsPerformanceSlidingWindowDurationHelpOk returns a tuple with the SettingsPerformanceSlidingWindowDurationHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPerformanceSlidingWindowDurationHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPerformanceSlidingWindowDurationHelp) {
		return nil, false
	}
	return o.SettingsPerformanceSlidingWindowDurationHelp, true
}

// HasSettingsPerformanceSlidingWindowDurationHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPerformanceSlidingWindowDurationHelp() bool {
	if o != nil && !IsNil(o.SettingsPerformanceSlidingWindowDurationHelp) {
		return true
	}

	return false
}

// SetSettingsPerformanceSlidingWindowDurationHelp gets a reference to the given string and assigns it to the SettingsPerformanceSlidingWindowDurationHelp field.
func (o *LanguagePackData) SetSettingsPerformanceSlidingWindowDurationHelp(v string) {
	o.SettingsPerformanceSlidingWindowDurationHelp = &v
}

// GetSettingsPerformanceSlidingWindowHelp returns the SettingsPerformanceSlidingWindowHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPerformanceSlidingWindowHelp() string {
	if o == nil || IsNil(o.SettingsPerformanceSlidingWindowHelp) {
		var ret string
		return ret
	}
	return *o.SettingsPerformanceSlidingWindowHelp
}

// GetSettingsPerformanceSlidingWindowHelpOk returns a tuple with the SettingsPerformanceSlidingWindowHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPerformanceSlidingWindowHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPerformanceSlidingWindowHelp) {
		return nil, false
	}
	return o.SettingsPerformanceSlidingWindowHelp, true
}

// HasSettingsPerformanceSlidingWindowHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPerformanceSlidingWindowHelp() bool {
	if o != nil && !IsNil(o.SettingsPerformanceSlidingWindowHelp) {
		return true
	}

	return false
}

// SetSettingsPerformanceSlidingWindowHelp gets a reference to the given string and assigns it to the SettingsPerformanceSlidingWindowHelp field.
func (o *LanguagePackData) SetSettingsPerformanceSlidingWindowHelp(v string) {
	o.SettingsPerformanceSlidingWindowHelp = &v
}

// GetSettingsPerformanceSlidingWindowRate returns the SettingsPerformanceSlidingWindowRate field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPerformanceSlidingWindowRate() string {
	if o == nil || IsNil(o.SettingsPerformanceSlidingWindowRate) {
		var ret string
		return ret
	}
	return *o.SettingsPerformanceSlidingWindowRate
}

// GetSettingsPerformanceSlidingWindowRateOk returns a tuple with the SettingsPerformanceSlidingWindowRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPerformanceSlidingWindowRateOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPerformanceSlidingWindowRate) {
		return nil, false
	}
	return o.SettingsPerformanceSlidingWindowRate, true
}

// HasSettingsPerformanceSlidingWindowRate returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPerformanceSlidingWindowRate() bool {
	if o != nil && !IsNil(o.SettingsPerformanceSlidingWindowRate) {
		return true
	}

	return false
}

// SetSettingsPerformanceSlidingWindowRate gets a reference to the given string and assigns it to the SettingsPerformanceSlidingWindowRate field.
func (o *LanguagePackData) SetSettingsPerformanceSlidingWindowRate(v string) {
	o.SettingsPerformanceSlidingWindowRate = &v
}

// GetSettingsPerformanceSlidingWindowRateHelp returns the SettingsPerformanceSlidingWindowRateHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPerformanceSlidingWindowRateHelp() string {
	if o == nil || IsNil(o.SettingsPerformanceSlidingWindowRateHelp) {
		var ret string
		return ret
	}
	return *o.SettingsPerformanceSlidingWindowRateHelp
}

// GetSettingsPerformanceSlidingWindowRateHelpOk returns a tuple with the SettingsPerformanceSlidingWindowRateHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPerformanceSlidingWindowRateHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPerformanceSlidingWindowRateHelp) {
		return nil, false
	}
	return o.SettingsPerformanceSlidingWindowRateHelp, true
}

// HasSettingsPerformanceSlidingWindowRateHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPerformanceSlidingWindowRateHelp() bool {
	if o != nil && !IsNil(o.SettingsPerformanceSlidingWindowRateHelp) {
		return true
	}

	return false
}

// SetSettingsPerformanceSlidingWindowRateHelp gets a reference to the given string and assigns it to the SettingsPerformanceSlidingWindowRateHelp field.
func (o *LanguagePackData) SetSettingsPerformanceSlidingWindowRateHelp(v string) {
	o.SettingsPerformanceSlidingWindowRateHelp = &v
}

// GetSettingsPrivacyAllowBlocklist returns the SettingsPrivacyAllowBlocklist field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPrivacyAllowBlocklist() string {
	if o == nil || IsNil(o.SettingsPrivacyAllowBlocklist) {
		var ret string
		return ret
	}
	return *o.SettingsPrivacyAllowBlocklist
}

// GetSettingsPrivacyAllowBlocklistOk returns a tuple with the SettingsPrivacyAllowBlocklist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPrivacyAllowBlocklistOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPrivacyAllowBlocklist) {
		return nil, false
	}
	return o.SettingsPrivacyAllowBlocklist, true
}

// HasSettingsPrivacyAllowBlocklist returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPrivacyAllowBlocklist() bool {
	if o != nil && !IsNil(o.SettingsPrivacyAllowBlocklist) {
		return true
	}

	return false
}

// SetSettingsPrivacyAllowBlocklist gets a reference to the given string and assigns it to the SettingsPrivacyAllowBlocklist field.
func (o *LanguagePackData) SetSettingsPrivacyAllowBlocklist(v string) {
	o.SettingsPrivacyAllowBlocklist = &v
}

// GetSettingsPrivacyAllowBlocklistHelp returns the SettingsPrivacyAllowBlocklistHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPrivacyAllowBlocklistHelp() string {
	if o == nil || IsNil(o.SettingsPrivacyAllowBlocklistHelp) {
		var ret string
		return ret
	}
	return *o.SettingsPrivacyAllowBlocklistHelp
}

// GetSettingsPrivacyAllowBlocklistHelpOk returns a tuple with the SettingsPrivacyAllowBlocklistHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPrivacyAllowBlocklistHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPrivacyAllowBlocklistHelp) {
		return nil, false
	}
	return o.SettingsPrivacyAllowBlocklistHelp, true
}

// HasSettingsPrivacyAllowBlocklistHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPrivacyAllowBlocklistHelp() bool {
	if o != nil && !IsNil(o.SettingsPrivacyAllowBlocklistHelp) {
		return true
	}

	return false
}

// SetSettingsPrivacyAllowBlocklistHelp gets a reference to the given string and assigns it to the SettingsPrivacyAllowBlocklistHelp field.
func (o *LanguagePackData) SetSettingsPrivacyAllowBlocklistHelp(v string) {
	o.SettingsPrivacyAllowBlocklistHelp = &v
}

// GetSettingsPrivacyAllowExport returns the SettingsPrivacyAllowExport field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPrivacyAllowExport() string {
	if o == nil || IsNil(o.SettingsPrivacyAllowExport) {
		var ret string
		return ret
	}
	return *o.SettingsPrivacyAllowExport
}

// GetSettingsPrivacyAllowExportOk returns a tuple with the SettingsPrivacyAllowExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPrivacyAllowExportOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPrivacyAllowExport) {
		return nil, false
	}
	return o.SettingsPrivacyAllowExport, true
}

// HasSettingsPrivacyAllowExport returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPrivacyAllowExport() bool {
	if o != nil && !IsNil(o.SettingsPrivacyAllowExport) {
		return true
	}

	return false
}

// SetSettingsPrivacyAllowExport gets a reference to the given string and assigns it to the SettingsPrivacyAllowExport field.
func (o *LanguagePackData) SetSettingsPrivacyAllowExport(v string) {
	o.SettingsPrivacyAllowExport = &v
}

// GetSettingsPrivacyAllowExportHelp returns the SettingsPrivacyAllowExportHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPrivacyAllowExportHelp() string {
	if o == nil || IsNil(o.SettingsPrivacyAllowExportHelp) {
		var ret string
		return ret
	}
	return *o.SettingsPrivacyAllowExportHelp
}

// GetSettingsPrivacyAllowExportHelpOk returns a tuple with the SettingsPrivacyAllowExportHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPrivacyAllowExportHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPrivacyAllowExportHelp) {
		return nil, false
	}
	return o.SettingsPrivacyAllowExportHelp, true
}

// HasSettingsPrivacyAllowExportHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPrivacyAllowExportHelp() bool {
	if o != nil && !IsNil(o.SettingsPrivacyAllowExportHelp) {
		return true
	}

	return false
}

// SetSettingsPrivacyAllowExportHelp gets a reference to the given string and assigns it to the SettingsPrivacyAllowExportHelp field.
func (o *LanguagePackData) SetSettingsPrivacyAllowExportHelp(v string) {
	o.SettingsPrivacyAllowExportHelp = &v
}

// GetSettingsPrivacyAllowPrefs returns the SettingsPrivacyAllowPrefs field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPrivacyAllowPrefs() string {
	if o == nil || IsNil(o.SettingsPrivacyAllowPrefs) {
		var ret string
		return ret
	}
	return *o.SettingsPrivacyAllowPrefs
}

// GetSettingsPrivacyAllowPrefsOk returns a tuple with the SettingsPrivacyAllowPrefs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPrivacyAllowPrefsOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPrivacyAllowPrefs) {
		return nil, false
	}
	return o.SettingsPrivacyAllowPrefs, true
}

// HasSettingsPrivacyAllowPrefs returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPrivacyAllowPrefs() bool {
	if o != nil && !IsNil(o.SettingsPrivacyAllowPrefs) {
		return true
	}

	return false
}

// SetSettingsPrivacyAllowPrefs gets a reference to the given string and assigns it to the SettingsPrivacyAllowPrefs field.
func (o *LanguagePackData) SetSettingsPrivacyAllowPrefs(v string) {
	o.SettingsPrivacyAllowPrefs = &v
}

// GetSettingsPrivacyAllowPrefsHelp returns the SettingsPrivacyAllowPrefsHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPrivacyAllowPrefsHelp() string {
	if o == nil || IsNil(o.SettingsPrivacyAllowPrefsHelp) {
		var ret string
		return ret
	}
	return *o.SettingsPrivacyAllowPrefsHelp
}

// GetSettingsPrivacyAllowPrefsHelpOk returns a tuple with the SettingsPrivacyAllowPrefsHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPrivacyAllowPrefsHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPrivacyAllowPrefsHelp) {
		return nil, false
	}
	return o.SettingsPrivacyAllowPrefsHelp, true
}

// HasSettingsPrivacyAllowPrefsHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPrivacyAllowPrefsHelp() bool {
	if o != nil && !IsNil(o.SettingsPrivacyAllowPrefsHelp) {
		return true
	}

	return false
}

// SetSettingsPrivacyAllowPrefsHelp gets a reference to the given string and assigns it to the SettingsPrivacyAllowPrefsHelp field.
func (o *LanguagePackData) SetSettingsPrivacyAllowPrefsHelp(v string) {
	o.SettingsPrivacyAllowPrefsHelp = &v
}

// GetSettingsPrivacyAllowWipe returns the SettingsPrivacyAllowWipe field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPrivacyAllowWipe() string {
	if o == nil || IsNil(o.SettingsPrivacyAllowWipe) {
		var ret string
		return ret
	}
	return *o.SettingsPrivacyAllowWipe
}

// GetSettingsPrivacyAllowWipeOk returns a tuple with the SettingsPrivacyAllowWipe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPrivacyAllowWipeOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPrivacyAllowWipe) {
		return nil, false
	}
	return o.SettingsPrivacyAllowWipe, true
}

// HasSettingsPrivacyAllowWipe returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPrivacyAllowWipe() bool {
	if o != nil && !IsNil(o.SettingsPrivacyAllowWipe) {
		return true
	}

	return false
}

// SetSettingsPrivacyAllowWipe gets a reference to the given string and assigns it to the SettingsPrivacyAllowWipe field.
func (o *LanguagePackData) SetSettingsPrivacyAllowWipe(v string) {
	o.SettingsPrivacyAllowWipe = &v
}

// GetSettingsPrivacyAllowWipeHelp returns the SettingsPrivacyAllowWipeHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPrivacyAllowWipeHelp() string {
	if o == nil || IsNil(o.SettingsPrivacyAllowWipeHelp) {
		var ret string
		return ret
	}
	return *o.SettingsPrivacyAllowWipeHelp
}

// GetSettingsPrivacyAllowWipeHelpOk returns a tuple with the SettingsPrivacyAllowWipeHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPrivacyAllowWipeHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPrivacyAllowWipeHelp) {
		return nil, false
	}
	return o.SettingsPrivacyAllowWipeHelp, true
}

// HasSettingsPrivacyAllowWipeHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPrivacyAllowWipeHelp() bool {
	if o != nil && !IsNil(o.SettingsPrivacyAllowWipeHelp) {
		return true
	}

	return false
}

// SetSettingsPrivacyAllowWipeHelp gets a reference to the given string and assigns it to the SettingsPrivacyAllowWipeHelp field.
func (o *LanguagePackData) SetSettingsPrivacyAllowWipeHelp(v string) {
	o.SettingsPrivacyAllowWipeHelp = &v
}

// GetSettingsPrivacyDomainBlocklist returns the SettingsPrivacyDomainBlocklist field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPrivacyDomainBlocklist() string {
	if o == nil || IsNil(o.SettingsPrivacyDomainBlocklist) {
		var ret string
		return ret
	}
	return *o.SettingsPrivacyDomainBlocklist
}

// GetSettingsPrivacyDomainBlocklistOk returns a tuple with the SettingsPrivacyDomainBlocklist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPrivacyDomainBlocklistOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPrivacyDomainBlocklist) {
		return nil, false
	}
	return o.SettingsPrivacyDomainBlocklist, true
}

// HasSettingsPrivacyDomainBlocklist returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPrivacyDomainBlocklist() bool {
	if o != nil && !IsNil(o.SettingsPrivacyDomainBlocklist) {
		return true
	}

	return false
}

// SetSettingsPrivacyDomainBlocklist gets a reference to the given string and assigns it to the SettingsPrivacyDomainBlocklist field.
func (o *LanguagePackData) SetSettingsPrivacyDomainBlocklist(v string) {
	o.SettingsPrivacyDomainBlocklist = &v
}

// GetSettingsPrivacyDomainBlocklistHelp returns the SettingsPrivacyDomainBlocklistHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPrivacyDomainBlocklistHelp() string {
	if o == nil || IsNil(o.SettingsPrivacyDomainBlocklistHelp) {
		var ret string
		return ret
	}
	return *o.SettingsPrivacyDomainBlocklistHelp
}

// GetSettingsPrivacyDomainBlocklistHelpOk returns a tuple with the SettingsPrivacyDomainBlocklistHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPrivacyDomainBlocklistHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPrivacyDomainBlocklistHelp) {
		return nil, false
	}
	return o.SettingsPrivacyDomainBlocklistHelp, true
}

// HasSettingsPrivacyDomainBlocklistHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPrivacyDomainBlocklistHelp() bool {
	if o != nil && !IsNil(o.SettingsPrivacyDomainBlocklistHelp) {
		return true
	}

	return false
}

// SetSettingsPrivacyDomainBlocklistHelp gets a reference to the given string and assigns it to the SettingsPrivacyDomainBlocklistHelp field.
func (o *LanguagePackData) SetSettingsPrivacyDomainBlocklistHelp(v string) {
	o.SettingsPrivacyDomainBlocklistHelp = &v
}

// GetSettingsPrivacyIndividualSubTracking returns the SettingsPrivacyIndividualSubTracking field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPrivacyIndividualSubTracking() string {
	if o == nil || IsNil(o.SettingsPrivacyIndividualSubTracking) {
		var ret string
		return ret
	}
	return *o.SettingsPrivacyIndividualSubTracking
}

// GetSettingsPrivacyIndividualSubTrackingOk returns a tuple with the SettingsPrivacyIndividualSubTracking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPrivacyIndividualSubTrackingOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPrivacyIndividualSubTracking) {
		return nil, false
	}
	return o.SettingsPrivacyIndividualSubTracking, true
}

// HasSettingsPrivacyIndividualSubTracking returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPrivacyIndividualSubTracking() bool {
	if o != nil && !IsNil(o.SettingsPrivacyIndividualSubTracking) {
		return true
	}

	return false
}

// SetSettingsPrivacyIndividualSubTracking gets a reference to the given string and assigns it to the SettingsPrivacyIndividualSubTracking field.
func (o *LanguagePackData) SetSettingsPrivacyIndividualSubTracking(v string) {
	o.SettingsPrivacyIndividualSubTracking = &v
}

// GetSettingsPrivacyIndividualSubTrackingHelp returns the SettingsPrivacyIndividualSubTrackingHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPrivacyIndividualSubTrackingHelp() string {
	if o == nil || IsNil(o.SettingsPrivacyIndividualSubTrackingHelp) {
		var ret string
		return ret
	}
	return *o.SettingsPrivacyIndividualSubTrackingHelp
}

// GetSettingsPrivacyIndividualSubTrackingHelpOk returns a tuple with the SettingsPrivacyIndividualSubTrackingHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPrivacyIndividualSubTrackingHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPrivacyIndividualSubTrackingHelp) {
		return nil, false
	}
	return o.SettingsPrivacyIndividualSubTrackingHelp, true
}

// HasSettingsPrivacyIndividualSubTrackingHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPrivacyIndividualSubTrackingHelp() bool {
	if o != nil && !IsNil(o.SettingsPrivacyIndividualSubTrackingHelp) {
		return true
	}

	return false
}

// SetSettingsPrivacyIndividualSubTrackingHelp gets a reference to the given string and assigns it to the SettingsPrivacyIndividualSubTrackingHelp field.
func (o *LanguagePackData) SetSettingsPrivacyIndividualSubTrackingHelp(v string) {
	o.SettingsPrivacyIndividualSubTrackingHelp = &v
}

// GetSettingsPrivacyListUnsubHeader returns the SettingsPrivacyListUnsubHeader field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPrivacyListUnsubHeader() string {
	if o == nil || IsNil(o.SettingsPrivacyListUnsubHeader) {
		var ret string
		return ret
	}
	return *o.SettingsPrivacyListUnsubHeader
}

// GetSettingsPrivacyListUnsubHeaderOk returns a tuple with the SettingsPrivacyListUnsubHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPrivacyListUnsubHeaderOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPrivacyListUnsubHeader) {
		return nil, false
	}
	return o.SettingsPrivacyListUnsubHeader, true
}

// HasSettingsPrivacyListUnsubHeader returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPrivacyListUnsubHeader() bool {
	if o != nil && !IsNil(o.SettingsPrivacyListUnsubHeader) {
		return true
	}

	return false
}

// SetSettingsPrivacyListUnsubHeader gets a reference to the given string and assigns it to the SettingsPrivacyListUnsubHeader field.
func (o *LanguagePackData) SetSettingsPrivacyListUnsubHeader(v string) {
	o.SettingsPrivacyListUnsubHeader = &v
}

// GetSettingsPrivacyListUnsubHeaderHelp returns the SettingsPrivacyListUnsubHeaderHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPrivacyListUnsubHeaderHelp() string {
	if o == nil || IsNil(o.SettingsPrivacyListUnsubHeaderHelp) {
		var ret string
		return ret
	}
	return *o.SettingsPrivacyListUnsubHeaderHelp
}

// GetSettingsPrivacyListUnsubHeaderHelpOk returns a tuple with the SettingsPrivacyListUnsubHeaderHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPrivacyListUnsubHeaderHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPrivacyListUnsubHeaderHelp) {
		return nil, false
	}
	return o.SettingsPrivacyListUnsubHeaderHelp, true
}

// HasSettingsPrivacyListUnsubHeaderHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPrivacyListUnsubHeaderHelp() bool {
	if o != nil && !IsNil(o.SettingsPrivacyListUnsubHeaderHelp) {
		return true
	}

	return false
}

// SetSettingsPrivacyListUnsubHeaderHelp gets a reference to the given string and assigns it to the SettingsPrivacyListUnsubHeaderHelp field.
func (o *LanguagePackData) SetSettingsPrivacyListUnsubHeaderHelp(v string) {
	o.SettingsPrivacyListUnsubHeaderHelp = &v
}

// GetSettingsPrivacyName returns the SettingsPrivacyName field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsPrivacyName() string {
	if o == nil || IsNil(o.SettingsPrivacyName) {
		var ret string
		return ret
	}
	return *o.SettingsPrivacyName
}

// GetSettingsPrivacyNameOk returns a tuple with the SettingsPrivacyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsPrivacyNameOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsPrivacyName) {
		return nil, false
	}
	return o.SettingsPrivacyName, true
}

// HasSettingsPrivacyName returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsPrivacyName() bool {
	if o != nil && !IsNil(o.SettingsPrivacyName) {
		return true
	}

	return false
}

// SetSettingsPrivacyName gets a reference to the given string and assigns it to the SettingsPrivacyName field.
func (o *LanguagePackData) SetSettingsPrivacyName(v string) {
	o.SettingsPrivacyName = &v
}

// GetSettingsRestart returns the SettingsRestart field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsRestart() string {
	if o == nil || IsNil(o.SettingsRestart) {
		var ret string
		return ret
	}
	return *o.SettingsRestart
}

// GetSettingsRestartOk returns a tuple with the SettingsRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsRestartOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsRestart) {
		return nil, false
	}
	return o.SettingsRestart, true
}

// HasSettingsRestart returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsRestart() bool {
	if o != nil && !IsNil(o.SettingsRestart) {
		return true
	}

	return false
}

// SetSettingsRestart gets a reference to the given string and assigns it to the SettingsRestart field.
func (o *LanguagePackData) SetSettingsRestart(v string) {
	o.SettingsRestart = &v
}

// GetSettingsSmtpCustomHeaders returns the SettingsSmtpCustomHeaders field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsSmtpCustomHeaders() string {
	if o == nil || IsNil(o.SettingsSmtpCustomHeaders) {
		var ret string
		return ret
	}
	return *o.SettingsSmtpCustomHeaders
}

// GetSettingsSmtpCustomHeadersOk returns a tuple with the SettingsSmtpCustomHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsSmtpCustomHeadersOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsSmtpCustomHeaders) {
		return nil, false
	}
	return o.SettingsSmtpCustomHeaders, true
}

// HasSettingsSmtpCustomHeaders returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsSmtpCustomHeaders() bool {
	if o != nil && !IsNil(o.SettingsSmtpCustomHeaders) {
		return true
	}

	return false
}

// SetSettingsSmtpCustomHeaders gets a reference to the given string and assigns it to the SettingsSmtpCustomHeaders field.
func (o *LanguagePackData) SetSettingsSmtpCustomHeaders(v string) {
	o.SettingsSmtpCustomHeaders = &v
}

// GetSettingsSmtpCustomHeadersHelp returns the SettingsSmtpCustomHeadersHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsSmtpCustomHeadersHelp() string {
	if o == nil || IsNil(o.SettingsSmtpCustomHeadersHelp) {
		var ret string
		return ret
	}
	return *o.SettingsSmtpCustomHeadersHelp
}

// GetSettingsSmtpCustomHeadersHelpOk returns a tuple with the SettingsSmtpCustomHeadersHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsSmtpCustomHeadersHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsSmtpCustomHeadersHelp) {
		return nil, false
	}
	return o.SettingsSmtpCustomHeadersHelp, true
}

// HasSettingsSmtpCustomHeadersHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsSmtpCustomHeadersHelp() bool {
	if o != nil && !IsNil(o.SettingsSmtpCustomHeadersHelp) {
		return true
	}

	return false
}

// SetSettingsSmtpCustomHeadersHelp gets a reference to the given string and assigns it to the SettingsSmtpCustomHeadersHelp field.
func (o *LanguagePackData) SetSettingsSmtpCustomHeadersHelp(v string) {
	o.SettingsSmtpCustomHeadersHelp = &v
}

// GetSettingsSmtpEnabled returns the SettingsSmtpEnabled field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsSmtpEnabled() string {
	if o == nil || IsNil(o.SettingsSmtpEnabled) {
		var ret string
		return ret
	}
	return *o.SettingsSmtpEnabled
}

// GetSettingsSmtpEnabledOk returns a tuple with the SettingsSmtpEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsSmtpEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsSmtpEnabled) {
		return nil, false
	}
	return o.SettingsSmtpEnabled, true
}

// HasSettingsSmtpEnabled returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsSmtpEnabled() bool {
	if o != nil && !IsNil(o.SettingsSmtpEnabled) {
		return true
	}

	return false
}

// SetSettingsSmtpEnabled gets a reference to the given string and assigns it to the SettingsSmtpEnabled field.
func (o *LanguagePackData) SetSettingsSmtpEnabled(v string) {
	o.SettingsSmtpEnabled = &v
}

// GetSettingsSmtpHeloHost returns the SettingsSmtpHeloHost field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsSmtpHeloHost() string {
	if o == nil || IsNil(o.SettingsSmtpHeloHost) {
		var ret string
		return ret
	}
	return *o.SettingsSmtpHeloHost
}

// GetSettingsSmtpHeloHostOk returns a tuple with the SettingsSmtpHeloHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsSmtpHeloHostOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsSmtpHeloHost) {
		return nil, false
	}
	return o.SettingsSmtpHeloHost, true
}

// HasSettingsSmtpHeloHost returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsSmtpHeloHost() bool {
	if o != nil && !IsNil(o.SettingsSmtpHeloHost) {
		return true
	}

	return false
}

// SetSettingsSmtpHeloHost gets a reference to the given string and assigns it to the SettingsSmtpHeloHost field.
func (o *LanguagePackData) SetSettingsSmtpHeloHost(v string) {
	o.SettingsSmtpHeloHost = &v
}

// GetSettingsSmtpHeloHostHelp returns the SettingsSmtpHeloHostHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsSmtpHeloHostHelp() string {
	if o == nil || IsNil(o.SettingsSmtpHeloHostHelp) {
		var ret string
		return ret
	}
	return *o.SettingsSmtpHeloHostHelp
}

// GetSettingsSmtpHeloHostHelpOk returns a tuple with the SettingsSmtpHeloHostHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsSmtpHeloHostHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsSmtpHeloHostHelp) {
		return nil, false
	}
	return o.SettingsSmtpHeloHostHelp, true
}

// HasSettingsSmtpHeloHostHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsSmtpHeloHostHelp() bool {
	if o != nil && !IsNil(o.SettingsSmtpHeloHostHelp) {
		return true
	}

	return false
}

// SetSettingsSmtpHeloHostHelp gets a reference to the given string and assigns it to the SettingsSmtpHeloHostHelp field.
func (o *LanguagePackData) SetSettingsSmtpHeloHostHelp(v string) {
	o.SettingsSmtpHeloHostHelp = &v
}

// GetSettingsSmtpName returns the SettingsSmtpName field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsSmtpName() string {
	if o == nil || IsNil(o.SettingsSmtpName) {
		var ret string
		return ret
	}
	return *o.SettingsSmtpName
}

// GetSettingsSmtpNameOk returns a tuple with the SettingsSmtpName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsSmtpNameOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsSmtpName) {
		return nil, false
	}
	return o.SettingsSmtpName, true
}

// HasSettingsSmtpName returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsSmtpName() bool {
	if o != nil && !IsNil(o.SettingsSmtpName) {
		return true
	}

	return false
}

// SetSettingsSmtpName gets a reference to the given string and assigns it to the SettingsSmtpName field.
func (o *LanguagePackData) SetSettingsSmtpName(v string) {
	o.SettingsSmtpName = &v
}

// GetSettingsSmtpRetries returns the SettingsSmtpRetries field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsSmtpRetries() string {
	if o == nil || IsNil(o.SettingsSmtpRetries) {
		var ret string
		return ret
	}
	return *o.SettingsSmtpRetries
}

// GetSettingsSmtpRetriesOk returns a tuple with the SettingsSmtpRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsSmtpRetriesOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsSmtpRetries) {
		return nil, false
	}
	return o.SettingsSmtpRetries, true
}

// HasSettingsSmtpRetries returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsSmtpRetries() bool {
	if o != nil && !IsNil(o.SettingsSmtpRetries) {
		return true
	}

	return false
}

// SetSettingsSmtpRetries gets a reference to the given string and assigns it to the SettingsSmtpRetries field.
func (o *LanguagePackData) SetSettingsSmtpRetries(v string) {
	o.SettingsSmtpRetries = &v
}

// GetSettingsSmtpRetriesHelp returns the SettingsSmtpRetriesHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsSmtpRetriesHelp() string {
	if o == nil || IsNil(o.SettingsSmtpRetriesHelp) {
		var ret string
		return ret
	}
	return *o.SettingsSmtpRetriesHelp
}

// GetSettingsSmtpRetriesHelpOk returns a tuple with the SettingsSmtpRetriesHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsSmtpRetriesHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsSmtpRetriesHelp) {
		return nil, false
	}
	return o.SettingsSmtpRetriesHelp, true
}

// HasSettingsSmtpRetriesHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsSmtpRetriesHelp() bool {
	if o != nil && !IsNil(o.SettingsSmtpRetriesHelp) {
		return true
	}

	return false
}

// SetSettingsSmtpRetriesHelp gets a reference to the given string and assigns it to the SettingsSmtpRetriesHelp field.
func (o *LanguagePackData) SetSettingsSmtpRetriesHelp(v string) {
	o.SettingsSmtpRetriesHelp = &v
}

// GetSettingsSmtpSendTest returns the SettingsSmtpSendTest field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsSmtpSendTest() string {
	if o == nil || IsNil(o.SettingsSmtpSendTest) {
		var ret string
		return ret
	}
	return *o.SettingsSmtpSendTest
}

// GetSettingsSmtpSendTestOk returns a tuple with the SettingsSmtpSendTest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsSmtpSendTestOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsSmtpSendTest) {
		return nil, false
	}
	return o.SettingsSmtpSendTest, true
}

// HasSettingsSmtpSendTest returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsSmtpSendTest() bool {
	if o != nil && !IsNil(o.SettingsSmtpSendTest) {
		return true
	}

	return false
}

// SetSettingsSmtpSendTest gets a reference to the given string and assigns it to the SettingsSmtpSendTest field.
func (o *LanguagePackData) SetSettingsSmtpSendTest(v string) {
	o.SettingsSmtpSendTest = &v
}

// GetSettingsSmtpSetCustomHeaders returns the SettingsSmtpSetCustomHeaders field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsSmtpSetCustomHeaders() string {
	if o == nil || IsNil(o.SettingsSmtpSetCustomHeaders) {
		var ret string
		return ret
	}
	return *o.SettingsSmtpSetCustomHeaders
}

// GetSettingsSmtpSetCustomHeadersOk returns a tuple with the SettingsSmtpSetCustomHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsSmtpSetCustomHeadersOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsSmtpSetCustomHeaders) {
		return nil, false
	}
	return o.SettingsSmtpSetCustomHeaders, true
}

// HasSettingsSmtpSetCustomHeaders returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsSmtpSetCustomHeaders() bool {
	if o != nil && !IsNil(o.SettingsSmtpSetCustomHeaders) {
		return true
	}

	return false
}

// SetSettingsSmtpSetCustomHeaders gets a reference to the given string and assigns it to the SettingsSmtpSetCustomHeaders field.
func (o *LanguagePackData) SetSettingsSmtpSetCustomHeaders(v string) {
	o.SettingsSmtpSetCustomHeaders = &v
}

// GetSettingsSmtpTestConnection returns the SettingsSmtpTestConnection field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsSmtpTestConnection() string {
	if o == nil || IsNil(o.SettingsSmtpTestConnection) {
		var ret string
		return ret
	}
	return *o.SettingsSmtpTestConnection
}

// GetSettingsSmtpTestConnectionOk returns a tuple with the SettingsSmtpTestConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsSmtpTestConnectionOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsSmtpTestConnection) {
		return nil, false
	}
	return o.SettingsSmtpTestConnection, true
}

// HasSettingsSmtpTestConnection returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsSmtpTestConnection() bool {
	if o != nil && !IsNil(o.SettingsSmtpTestConnection) {
		return true
	}

	return false
}

// SetSettingsSmtpTestConnection gets a reference to the given string and assigns it to the SettingsSmtpTestConnection field.
func (o *LanguagePackData) SetSettingsSmtpTestConnection(v string) {
	o.SettingsSmtpTestConnection = &v
}

// GetSettingsSmtpTestEnterEmail returns the SettingsSmtpTestEnterEmail field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsSmtpTestEnterEmail() string {
	if o == nil || IsNil(o.SettingsSmtpTestEnterEmail) {
		var ret string
		return ret
	}
	return *o.SettingsSmtpTestEnterEmail
}

// GetSettingsSmtpTestEnterEmailOk returns a tuple with the SettingsSmtpTestEnterEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsSmtpTestEnterEmailOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsSmtpTestEnterEmail) {
		return nil, false
	}
	return o.SettingsSmtpTestEnterEmail, true
}

// HasSettingsSmtpTestEnterEmail returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsSmtpTestEnterEmail() bool {
	if o != nil && !IsNil(o.SettingsSmtpTestEnterEmail) {
		return true
	}

	return false
}

// SetSettingsSmtpTestEnterEmail gets a reference to the given string and assigns it to the SettingsSmtpTestEnterEmail field.
func (o *LanguagePackData) SetSettingsSmtpTestEnterEmail(v string) {
	o.SettingsSmtpTestEnterEmail = &v
}

// GetSettingsSmtpToEmail returns the SettingsSmtpToEmail field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsSmtpToEmail() string {
	if o == nil || IsNil(o.SettingsSmtpToEmail) {
		var ret string
		return ret
	}
	return *o.SettingsSmtpToEmail
}

// GetSettingsSmtpToEmailOk returns a tuple with the SettingsSmtpToEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsSmtpToEmailOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsSmtpToEmail) {
		return nil, false
	}
	return o.SettingsSmtpToEmail, true
}

// HasSettingsSmtpToEmail returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsSmtpToEmail() bool {
	if o != nil && !IsNil(o.SettingsSmtpToEmail) {
		return true
	}

	return false
}

// SetSettingsSmtpToEmail gets a reference to the given string and assigns it to the SettingsSmtpToEmail field.
func (o *LanguagePackData) SetSettingsSmtpToEmail(v string) {
	o.SettingsSmtpToEmail = &v
}

// GetSettingsTitle returns the SettingsTitle field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsTitle() string {
	if o == nil || IsNil(o.SettingsTitle) {
		var ret string
		return ret
	}
	return *o.SettingsTitle
}

// GetSettingsTitleOk returns a tuple with the SettingsTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsTitleOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsTitle) {
		return nil, false
	}
	return o.SettingsTitle, true
}

// HasSettingsTitle returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsTitle() bool {
	if o != nil && !IsNil(o.SettingsTitle) {
		return true
	}

	return false
}

// SetSettingsTitle gets a reference to the given string and assigns it to the SettingsTitle field.
func (o *LanguagePackData) SetSettingsTitle(v string) {
	o.SettingsTitle = &v
}

// GetSettingsUpdateAvailable returns the SettingsUpdateAvailable field value if set, zero value otherwise.
func (o *LanguagePackData) GetSettingsUpdateAvailable() string {
	if o == nil || IsNil(o.SettingsUpdateAvailable) {
		var ret string
		return ret
	}
	return *o.SettingsUpdateAvailable
}

// GetSettingsUpdateAvailableOk returns a tuple with the SettingsUpdateAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSettingsUpdateAvailableOk() (*string, bool) {
	if o == nil || IsNil(o.SettingsUpdateAvailable) {
		return nil, false
	}
	return o.SettingsUpdateAvailable, true
}

// HasSettingsUpdateAvailable returns a boolean if a field has been set.
func (o *LanguagePackData) HasSettingsUpdateAvailable() bool {
	if o != nil && !IsNil(o.SettingsUpdateAvailable) {
		return true
	}

	return false
}

// SetSettingsUpdateAvailable gets a reference to the given string and assigns it to the SettingsUpdateAvailable field.
func (o *LanguagePackData) SetSettingsUpdateAvailable(v string) {
	o.SettingsUpdateAvailable = &v
}

// GetSubscribersAdvancedQuery returns the SubscribersAdvancedQuery field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersAdvancedQuery() string {
	if o == nil || IsNil(o.SubscribersAdvancedQuery) {
		var ret string
		return ret
	}
	return *o.SubscribersAdvancedQuery
}

// GetSubscribersAdvancedQueryOk returns a tuple with the SubscribersAdvancedQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersAdvancedQueryOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersAdvancedQuery) {
		return nil, false
	}
	return o.SubscribersAdvancedQuery, true
}

// HasSubscribersAdvancedQuery returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersAdvancedQuery() bool {
	if o != nil && !IsNil(o.SubscribersAdvancedQuery) {
		return true
	}

	return false
}

// SetSubscribersAdvancedQuery gets a reference to the given string and assigns it to the SubscribersAdvancedQuery field.
func (o *LanguagePackData) SetSubscribersAdvancedQuery(v string) {
	o.SubscribersAdvancedQuery = &v
}

// GetSubscribersAdvancedQueryHelp returns the SubscribersAdvancedQueryHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersAdvancedQueryHelp() string {
	if o == nil || IsNil(o.SubscribersAdvancedQueryHelp) {
		var ret string
		return ret
	}
	return *o.SubscribersAdvancedQueryHelp
}

// GetSubscribersAdvancedQueryHelpOk returns a tuple with the SubscribersAdvancedQueryHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersAdvancedQueryHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersAdvancedQueryHelp) {
		return nil, false
	}
	return o.SubscribersAdvancedQueryHelp, true
}

// HasSubscribersAdvancedQueryHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersAdvancedQueryHelp() bool {
	if o != nil && !IsNil(o.SubscribersAdvancedQueryHelp) {
		return true
	}

	return false
}

// SetSubscribersAdvancedQueryHelp gets a reference to the given string and assigns it to the SubscribersAdvancedQueryHelp field.
func (o *LanguagePackData) SetSubscribersAdvancedQueryHelp(v string) {
	o.SubscribersAdvancedQueryHelp = &v
}

// GetSubscribersAttribs returns the SubscribersAttribs field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersAttribs() string {
	if o == nil || IsNil(o.SubscribersAttribs) {
		var ret string
		return ret
	}
	return *o.SubscribersAttribs
}

// GetSubscribersAttribsOk returns a tuple with the SubscribersAttribs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersAttribsOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersAttribs) {
		return nil, false
	}
	return o.SubscribersAttribs, true
}

// HasSubscribersAttribs returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersAttribs() bool {
	if o != nil && !IsNil(o.SubscribersAttribs) {
		return true
	}

	return false
}

// SetSubscribersAttribs gets a reference to the given string and assigns it to the SubscribersAttribs field.
func (o *LanguagePackData) SetSubscribersAttribs(v string) {
	o.SubscribersAttribs = &v
}

// GetSubscribersAttribsHelp returns the SubscribersAttribsHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersAttribsHelp() string {
	if o == nil || IsNil(o.SubscribersAttribsHelp) {
		var ret string
		return ret
	}
	return *o.SubscribersAttribsHelp
}

// GetSubscribersAttribsHelpOk returns a tuple with the SubscribersAttribsHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersAttribsHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersAttribsHelp) {
		return nil, false
	}
	return o.SubscribersAttribsHelp, true
}

// HasSubscribersAttribsHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersAttribsHelp() bool {
	if o != nil && !IsNil(o.SubscribersAttribsHelp) {
		return true
	}

	return false
}

// SetSubscribersAttribsHelp gets a reference to the given string and assigns it to the SubscribersAttribsHelp field.
func (o *LanguagePackData) SetSubscribersAttribsHelp(v string) {
	o.SubscribersAttribsHelp = &v
}

// GetSubscribersBlocklistedHelp returns the SubscribersBlocklistedHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersBlocklistedHelp() string {
	if o == nil || IsNil(o.SubscribersBlocklistedHelp) {
		var ret string
		return ret
	}
	return *o.SubscribersBlocklistedHelp
}

// GetSubscribersBlocklistedHelpOk returns a tuple with the SubscribersBlocklistedHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersBlocklistedHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersBlocklistedHelp) {
		return nil, false
	}
	return o.SubscribersBlocklistedHelp, true
}

// HasSubscribersBlocklistedHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersBlocklistedHelp() bool {
	if o != nil && !IsNil(o.SubscribersBlocklistedHelp) {
		return true
	}

	return false
}

// SetSubscribersBlocklistedHelp gets a reference to the given string and assigns it to the SubscribersBlocklistedHelp field.
func (o *LanguagePackData) SetSubscribersBlocklistedHelp(v string) {
	o.SubscribersBlocklistedHelp = &v
}

// GetSubscribersConfirmBlocklist returns the SubscribersConfirmBlocklist field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersConfirmBlocklist() string {
	if o == nil || IsNil(o.SubscribersConfirmBlocklist) {
		var ret string
		return ret
	}
	return *o.SubscribersConfirmBlocklist
}

// GetSubscribersConfirmBlocklistOk returns a tuple with the SubscribersConfirmBlocklist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersConfirmBlocklistOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersConfirmBlocklist) {
		return nil, false
	}
	return o.SubscribersConfirmBlocklist, true
}

// HasSubscribersConfirmBlocklist returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersConfirmBlocklist() bool {
	if o != nil && !IsNil(o.SubscribersConfirmBlocklist) {
		return true
	}

	return false
}

// SetSubscribersConfirmBlocklist gets a reference to the given string and assigns it to the SubscribersConfirmBlocklist field.
func (o *LanguagePackData) SetSubscribersConfirmBlocklist(v string) {
	o.SubscribersConfirmBlocklist = &v
}

// GetSubscribersConfirmDelete returns the SubscribersConfirmDelete field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersConfirmDelete() string {
	if o == nil || IsNil(o.SubscribersConfirmDelete) {
		var ret string
		return ret
	}
	return *o.SubscribersConfirmDelete
}

// GetSubscribersConfirmDeleteOk returns a tuple with the SubscribersConfirmDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersConfirmDeleteOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersConfirmDelete) {
		return nil, false
	}
	return o.SubscribersConfirmDelete, true
}

// HasSubscribersConfirmDelete returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersConfirmDelete() bool {
	if o != nil && !IsNil(o.SubscribersConfirmDelete) {
		return true
	}

	return false
}

// SetSubscribersConfirmDelete gets a reference to the given string and assigns it to the SubscribersConfirmDelete field.
func (o *LanguagePackData) SetSubscribersConfirmDelete(v string) {
	o.SubscribersConfirmDelete = &v
}

// GetSubscribersConfirmExport returns the SubscribersConfirmExport field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersConfirmExport() string {
	if o == nil || IsNil(o.SubscribersConfirmExport) {
		var ret string
		return ret
	}
	return *o.SubscribersConfirmExport
}

// GetSubscribersConfirmExportOk returns a tuple with the SubscribersConfirmExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersConfirmExportOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersConfirmExport) {
		return nil, false
	}
	return o.SubscribersConfirmExport, true
}

// HasSubscribersConfirmExport returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersConfirmExport() bool {
	if o != nil && !IsNil(o.SubscribersConfirmExport) {
		return true
	}

	return false
}

// SetSubscribersConfirmExport gets a reference to the given string and assigns it to the SubscribersConfirmExport field.
func (o *LanguagePackData) SetSubscribersConfirmExport(v string) {
	o.SubscribersConfirmExport = &v
}

// GetSubscribersDomainBlocklisted returns the SubscribersDomainBlocklisted field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersDomainBlocklisted() string {
	if o == nil || IsNil(o.SubscribersDomainBlocklisted) {
		var ret string
		return ret
	}
	return *o.SubscribersDomainBlocklisted
}

// GetSubscribersDomainBlocklistedOk returns a tuple with the SubscribersDomainBlocklisted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersDomainBlocklistedOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersDomainBlocklisted) {
		return nil, false
	}
	return o.SubscribersDomainBlocklisted, true
}

// HasSubscribersDomainBlocklisted returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersDomainBlocklisted() bool {
	if o != nil && !IsNil(o.SubscribersDomainBlocklisted) {
		return true
	}

	return false
}

// SetSubscribersDomainBlocklisted gets a reference to the given string and assigns it to the SubscribersDomainBlocklisted field.
func (o *LanguagePackData) SetSubscribersDomainBlocklisted(v string) {
	o.SubscribersDomainBlocklisted = &v
}

// GetSubscribersDownloadData returns the SubscribersDownloadData field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersDownloadData() string {
	if o == nil || IsNil(o.SubscribersDownloadData) {
		var ret string
		return ret
	}
	return *o.SubscribersDownloadData
}

// GetSubscribersDownloadDataOk returns a tuple with the SubscribersDownloadData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersDownloadDataOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersDownloadData) {
		return nil, false
	}
	return o.SubscribersDownloadData, true
}

// HasSubscribersDownloadData returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersDownloadData() bool {
	if o != nil && !IsNil(o.SubscribersDownloadData) {
		return true
	}

	return false
}

// SetSubscribersDownloadData gets a reference to the given string and assigns it to the SubscribersDownloadData field.
func (o *LanguagePackData) SetSubscribersDownloadData(v string) {
	o.SubscribersDownloadData = &v
}

// GetSubscribersEmail returns the SubscribersEmail field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersEmail() string {
	if o == nil || IsNil(o.SubscribersEmail) {
		var ret string
		return ret
	}
	return *o.SubscribersEmail
}

// GetSubscribersEmailOk returns a tuple with the SubscribersEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersEmailOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersEmail) {
		return nil, false
	}
	return o.SubscribersEmail, true
}

// HasSubscribersEmail returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersEmail() bool {
	if o != nil && !IsNil(o.SubscribersEmail) {
		return true
	}

	return false
}

// SetSubscribersEmail gets a reference to the given string and assigns it to the SubscribersEmail field.
func (o *LanguagePackData) SetSubscribersEmail(v string) {
	o.SubscribersEmail = &v
}

// GetSubscribersEmailExists returns the SubscribersEmailExists field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersEmailExists() string {
	if o == nil || IsNil(o.SubscribersEmailExists) {
		var ret string
		return ret
	}
	return *o.SubscribersEmailExists
}

// GetSubscribersEmailExistsOk returns a tuple with the SubscribersEmailExists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersEmailExistsOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersEmailExists) {
		return nil, false
	}
	return o.SubscribersEmailExists, true
}

// HasSubscribersEmailExists returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersEmailExists() bool {
	if o != nil && !IsNil(o.SubscribersEmailExists) {
		return true
	}

	return false
}

// SetSubscribersEmailExists gets a reference to the given string and assigns it to the SubscribersEmailExists field.
func (o *LanguagePackData) SetSubscribersEmailExists(v string) {
	o.SubscribersEmailExists = &v
}

// GetSubscribersErrorBlocklisting returns the SubscribersErrorBlocklisting field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersErrorBlocklisting() string {
	if o == nil || IsNil(o.SubscribersErrorBlocklisting) {
		var ret string
		return ret
	}
	return *o.SubscribersErrorBlocklisting
}

// GetSubscribersErrorBlocklistingOk returns a tuple with the SubscribersErrorBlocklisting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersErrorBlocklistingOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersErrorBlocklisting) {
		return nil, false
	}
	return o.SubscribersErrorBlocklisting, true
}

// HasSubscribersErrorBlocklisting returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersErrorBlocklisting() bool {
	if o != nil && !IsNil(o.SubscribersErrorBlocklisting) {
		return true
	}

	return false
}

// SetSubscribersErrorBlocklisting gets a reference to the given string and assigns it to the SubscribersErrorBlocklisting field.
func (o *LanguagePackData) SetSubscribersErrorBlocklisting(v string) {
	o.SubscribersErrorBlocklisting = &v
}

// GetSubscribersErrorNoIDs returns the SubscribersErrorNoIDs field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersErrorNoIDs() string {
	if o == nil || IsNil(o.SubscribersErrorNoIDs) {
		var ret string
		return ret
	}
	return *o.SubscribersErrorNoIDs
}

// GetSubscribersErrorNoIDsOk returns a tuple with the SubscribersErrorNoIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersErrorNoIDsOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersErrorNoIDs) {
		return nil, false
	}
	return o.SubscribersErrorNoIDs, true
}

// HasSubscribersErrorNoIDs returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersErrorNoIDs() bool {
	if o != nil && !IsNil(o.SubscribersErrorNoIDs) {
		return true
	}

	return false
}

// SetSubscribersErrorNoIDs gets a reference to the given string and assigns it to the SubscribersErrorNoIDs field.
func (o *LanguagePackData) SetSubscribersErrorNoIDs(v string) {
	o.SubscribersErrorNoIDs = &v
}

// GetSubscribersErrorNoListsGiven returns the SubscribersErrorNoListsGiven field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersErrorNoListsGiven() string {
	if o == nil || IsNil(o.SubscribersErrorNoListsGiven) {
		var ret string
		return ret
	}
	return *o.SubscribersErrorNoListsGiven
}

// GetSubscribersErrorNoListsGivenOk returns a tuple with the SubscribersErrorNoListsGiven field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersErrorNoListsGivenOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersErrorNoListsGiven) {
		return nil, false
	}
	return o.SubscribersErrorNoListsGiven, true
}

// HasSubscribersErrorNoListsGiven returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersErrorNoListsGiven() bool {
	if o != nil && !IsNil(o.SubscribersErrorNoListsGiven) {
		return true
	}

	return false
}

// SetSubscribersErrorNoListsGiven gets a reference to the given string and assigns it to the SubscribersErrorNoListsGiven field.
func (o *LanguagePackData) SetSubscribersErrorNoListsGiven(v string) {
	o.SubscribersErrorNoListsGiven = &v
}

// GetSubscribersErrorPreparingQuery returns the SubscribersErrorPreparingQuery field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersErrorPreparingQuery() string {
	if o == nil || IsNil(o.SubscribersErrorPreparingQuery) {
		var ret string
		return ret
	}
	return *o.SubscribersErrorPreparingQuery
}

// GetSubscribersErrorPreparingQueryOk returns a tuple with the SubscribersErrorPreparingQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersErrorPreparingQueryOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersErrorPreparingQuery) {
		return nil, false
	}
	return o.SubscribersErrorPreparingQuery, true
}

// HasSubscribersErrorPreparingQuery returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersErrorPreparingQuery() bool {
	if o != nil && !IsNil(o.SubscribersErrorPreparingQuery) {
		return true
	}

	return false
}

// SetSubscribersErrorPreparingQuery gets a reference to the given string and assigns it to the SubscribersErrorPreparingQuery field.
func (o *LanguagePackData) SetSubscribersErrorPreparingQuery(v string) {
	o.SubscribersErrorPreparingQuery = &v
}

// GetSubscribersErrorSendingOptin returns the SubscribersErrorSendingOptin field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersErrorSendingOptin() string {
	if o == nil || IsNil(o.SubscribersErrorSendingOptin) {
		var ret string
		return ret
	}
	return *o.SubscribersErrorSendingOptin
}

// GetSubscribersErrorSendingOptinOk returns a tuple with the SubscribersErrorSendingOptin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersErrorSendingOptinOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersErrorSendingOptin) {
		return nil, false
	}
	return o.SubscribersErrorSendingOptin, true
}

// HasSubscribersErrorSendingOptin returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersErrorSendingOptin() bool {
	if o != nil && !IsNil(o.SubscribersErrorSendingOptin) {
		return true
	}

	return false
}

// SetSubscribersErrorSendingOptin gets a reference to the given string and assigns it to the SubscribersErrorSendingOptin field.
func (o *LanguagePackData) SetSubscribersErrorSendingOptin(v string) {
	o.SubscribersErrorSendingOptin = &v
}

// GetSubscribersExport returns the SubscribersExport field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersExport() string {
	if o == nil || IsNil(o.SubscribersExport) {
		var ret string
		return ret
	}
	return *o.SubscribersExport
}

// GetSubscribersExportOk returns a tuple with the SubscribersExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersExportOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersExport) {
		return nil, false
	}
	return o.SubscribersExport, true
}

// HasSubscribersExport returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersExport() bool {
	if o != nil && !IsNil(o.SubscribersExport) {
		return true
	}

	return false
}

// SetSubscribersExport gets a reference to the given string and assigns it to the SubscribersExport field.
func (o *LanguagePackData) SetSubscribersExport(v string) {
	o.SubscribersExport = &v
}

// GetSubscribersInvalidAction returns the SubscribersInvalidAction field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersInvalidAction() string {
	if o == nil || IsNil(o.SubscribersInvalidAction) {
		var ret string
		return ret
	}
	return *o.SubscribersInvalidAction
}

// GetSubscribersInvalidActionOk returns a tuple with the SubscribersInvalidAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersInvalidActionOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersInvalidAction) {
		return nil, false
	}
	return o.SubscribersInvalidAction, true
}

// HasSubscribersInvalidAction returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersInvalidAction() bool {
	if o != nil && !IsNil(o.SubscribersInvalidAction) {
		return true
	}

	return false
}

// SetSubscribersInvalidAction gets a reference to the given string and assigns it to the SubscribersInvalidAction field.
func (o *LanguagePackData) SetSubscribersInvalidAction(v string) {
	o.SubscribersInvalidAction = &v
}

// GetSubscribersInvalidEmail returns the SubscribersInvalidEmail field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersInvalidEmail() string {
	if o == nil || IsNil(o.SubscribersInvalidEmail) {
		var ret string
		return ret
	}
	return *o.SubscribersInvalidEmail
}

// GetSubscribersInvalidEmailOk returns a tuple with the SubscribersInvalidEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersInvalidEmailOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersInvalidEmail) {
		return nil, false
	}
	return o.SubscribersInvalidEmail, true
}

// HasSubscribersInvalidEmail returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersInvalidEmail() bool {
	if o != nil && !IsNil(o.SubscribersInvalidEmail) {
		return true
	}

	return false
}

// SetSubscribersInvalidEmail gets a reference to the given string and assigns it to the SubscribersInvalidEmail field.
func (o *LanguagePackData) SetSubscribersInvalidEmail(v string) {
	o.SubscribersInvalidEmail = &v
}

// GetSubscribersInvalidJSON returns the SubscribersInvalidJSON field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersInvalidJSON() string {
	if o == nil || IsNil(o.SubscribersInvalidJSON) {
		var ret string
		return ret
	}
	return *o.SubscribersInvalidJSON
}

// GetSubscribersInvalidJSONOk returns a tuple with the SubscribersInvalidJSON field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersInvalidJSONOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersInvalidJSON) {
		return nil, false
	}
	return o.SubscribersInvalidJSON, true
}

// HasSubscribersInvalidJSON returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersInvalidJSON() bool {
	if o != nil && !IsNil(o.SubscribersInvalidJSON) {
		return true
	}

	return false
}

// SetSubscribersInvalidJSON gets a reference to the given string and assigns it to the SubscribersInvalidJSON field.
func (o *LanguagePackData) SetSubscribersInvalidJSON(v string) {
	o.SubscribersInvalidJSON = &v
}

// GetSubscribersInvalidName returns the SubscribersInvalidName field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersInvalidName() string {
	if o == nil || IsNil(o.SubscribersInvalidName) {
		var ret string
		return ret
	}
	return *o.SubscribersInvalidName
}

// GetSubscribersInvalidNameOk returns a tuple with the SubscribersInvalidName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersInvalidNameOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersInvalidName) {
		return nil, false
	}
	return o.SubscribersInvalidName, true
}

// HasSubscribersInvalidName returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersInvalidName() bool {
	if o != nil && !IsNil(o.SubscribersInvalidName) {
		return true
	}

	return false
}

// SetSubscribersInvalidName gets a reference to the given string and assigns it to the SubscribersInvalidName field.
func (o *LanguagePackData) SetSubscribersInvalidName(v string) {
	o.SubscribersInvalidName = &v
}

// GetSubscribersListChangeApplied returns the SubscribersListChangeApplied field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersListChangeApplied() string {
	if o == nil || IsNil(o.SubscribersListChangeApplied) {
		var ret string
		return ret
	}
	return *o.SubscribersListChangeApplied
}

// GetSubscribersListChangeAppliedOk returns a tuple with the SubscribersListChangeApplied field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersListChangeAppliedOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersListChangeApplied) {
		return nil, false
	}
	return o.SubscribersListChangeApplied, true
}

// HasSubscribersListChangeApplied returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersListChangeApplied() bool {
	if o != nil && !IsNil(o.SubscribersListChangeApplied) {
		return true
	}

	return false
}

// SetSubscribersListChangeApplied gets a reference to the given string and assigns it to the SubscribersListChangeApplied field.
func (o *LanguagePackData) SetSubscribersListChangeApplied(v string) {
	o.SubscribersListChangeApplied = &v
}

// GetSubscribersLists returns the SubscribersLists field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersLists() string {
	if o == nil || IsNil(o.SubscribersLists) {
		var ret string
		return ret
	}
	return *o.SubscribersLists
}

// GetSubscribersListsOk returns a tuple with the SubscribersLists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersListsOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersLists) {
		return nil, false
	}
	return o.SubscribersLists, true
}

// HasSubscribersLists returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersLists() bool {
	if o != nil && !IsNil(o.SubscribersLists) {
		return true
	}

	return false
}

// SetSubscribersLists gets a reference to the given string and assigns it to the SubscribersLists field.
func (o *LanguagePackData) SetSubscribersLists(v string) {
	o.SubscribersLists = &v
}

// GetSubscribersListsHelp returns the SubscribersListsHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersListsHelp() string {
	if o == nil || IsNil(o.SubscribersListsHelp) {
		var ret string
		return ret
	}
	return *o.SubscribersListsHelp
}

// GetSubscribersListsHelpOk returns a tuple with the SubscribersListsHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersListsHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersListsHelp) {
		return nil, false
	}
	return o.SubscribersListsHelp, true
}

// HasSubscribersListsHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersListsHelp() bool {
	if o != nil && !IsNil(o.SubscribersListsHelp) {
		return true
	}

	return false
}

// SetSubscribersListsHelp gets a reference to the given string and assigns it to the SubscribersListsHelp field.
func (o *LanguagePackData) SetSubscribersListsHelp(v string) {
	o.SubscribersListsHelp = &v
}

// GetSubscribersListsPlaceholder returns the SubscribersListsPlaceholder field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersListsPlaceholder() string {
	if o == nil || IsNil(o.SubscribersListsPlaceholder) {
		var ret string
		return ret
	}
	return *o.SubscribersListsPlaceholder
}

// GetSubscribersListsPlaceholderOk returns a tuple with the SubscribersListsPlaceholder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersListsPlaceholderOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersListsPlaceholder) {
		return nil, false
	}
	return o.SubscribersListsPlaceholder, true
}

// HasSubscribersListsPlaceholder returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersListsPlaceholder() bool {
	if o != nil && !IsNil(o.SubscribersListsPlaceholder) {
		return true
	}

	return false
}

// SetSubscribersListsPlaceholder gets a reference to the given string and assigns it to the SubscribersListsPlaceholder field.
func (o *LanguagePackData) SetSubscribersListsPlaceholder(v string) {
	o.SubscribersListsPlaceholder = &v
}

// GetSubscribersManageLists returns the SubscribersManageLists field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersManageLists() string {
	if o == nil || IsNil(o.SubscribersManageLists) {
		var ret string
		return ret
	}
	return *o.SubscribersManageLists
}

// GetSubscribersManageListsOk returns a tuple with the SubscribersManageLists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersManageListsOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersManageLists) {
		return nil, false
	}
	return o.SubscribersManageLists, true
}

// HasSubscribersManageLists returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersManageLists() bool {
	if o != nil && !IsNil(o.SubscribersManageLists) {
		return true
	}

	return false
}

// SetSubscribersManageLists gets a reference to the given string and assigns it to the SubscribersManageLists field.
func (o *LanguagePackData) SetSubscribersManageLists(v string) {
	o.SubscribersManageLists = &v
}

// GetSubscribersMarkUnsubscribed returns the SubscribersMarkUnsubscribed field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersMarkUnsubscribed() string {
	if o == nil || IsNil(o.SubscribersMarkUnsubscribed) {
		var ret string
		return ret
	}
	return *o.SubscribersMarkUnsubscribed
}

// GetSubscribersMarkUnsubscribedOk returns a tuple with the SubscribersMarkUnsubscribed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersMarkUnsubscribedOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersMarkUnsubscribed) {
		return nil, false
	}
	return o.SubscribersMarkUnsubscribed, true
}

// HasSubscribersMarkUnsubscribed returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersMarkUnsubscribed() bool {
	if o != nil && !IsNil(o.SubscribersMarkUnsubscribed) {
		return true
	}

	return false
}

// SetSubscribersMarkUnsubscribed gets a reference to the given string and assigns it to the SubscribersMarkUnsubscribed field.
func (o *LanguagePackData) SetSubscribersMarkUnsubscribed(v string) {
	o.SubscribersMarkUnsubscribed = &v
}

// GetSubscribersNewSubscriber returns the SubscribersNewSubscriber field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersNewSubscriber() string {
	if o == nil || IsNil(o.SubscribersNewSubscriber) {
		var ret string
		return ret
	}
	return *o.SubscribersNewSubscriber
}

// GetSubscribersNewSubscriberOk returns a tuple with the SubscribersNewSubscriber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersNewSubscriberOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersNewSubscriber) {
		return nil, false
	}
	return o.SubscribersNewSubscriber, true
}

// HasSubscribersNewSubscriber returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersNewSubscriber() bool {
	if o != nil && !IsNil(o.SubscribersNewSubscriber) {
		return true
	}

	return false
}

// SetSubscribersNewSubscriber gets a reference to the given string and assigns it to the SubscribersNewSubscriber field.
func (o *LanguagePackData) SetSubscribersNewSubscriber(v string) {
	o.SubscribersNewSubscriber = &v
}

// GetSubscribersNumSelected returns the SubscribersNumSelected field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersNumSelected() string {
	if o == nil || IsNil(o.SubscribersNumSelected) {
		var ret string
		return ret
	}
	return *o.SubscribersNumSelected
}

// GetSubscribersNumSelectedOk returns a tuple with the SubscribersNumSelected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersNumSelectedOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersNumSelected) {
		return nil, false
	}
	return o.SubscribersNumSelected, true
}

// HasSubscribersNumSelected returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersNumSelected() bool {
	if o != nil && !IsNil(o.SubscribersNumSelected) {
		return true
	}

	return false
}

// SetSubscribersNumSelected gets a reference to the given string and assigns it to the SubscribersNumSelected field.
func (o *LanguagePackData) SetSubscribersNumSelected(v string) {
	o.SubscribersNumSelected = &v
}

// GetSubscribersOptinSubject returns the SubscribersOptinSubject field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersOptinSubject() string {
	if o == nil || IsNil(o.SubscribersOptinSubject) {
		var ret string
		return ret
	}
	return *o.SubscribersOptinSubject
}

// GetSubscribersOptinSubjectOk returns a tuple with the SubscribersOptinSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersOptinSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersOptinSubject) {
		return nil, false
	}
	return o.SubscribersOptinSubject, true
}

// HasSubscribersOptinSubject returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersOptinSubject() bool {
	if o != nil && !IsNil(o.SubscribersOptinSubject) {
		return true
	}

	return false
}

// SetSubscribersOptinSubject gets a reference to the given string and assigns it to the SubscribersOptinSubject field.
func (o *LanguagePackData) SetSubscribersOptinSubject(v string) {
	o.SubscribersOptinSubject = &v
}

// GetSubscribersPreconfirm returns the SubscribersPreconfirm field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersPreconfirm() string {
	if o == nil || IsNil(o.SubscribersPreconfirm) {
		var ret string
		return ret
	}
	return *o.SubscribersPreconfirm
}

// GetSubscribersPreconfirmOk returns a tuple with the SubscribersPreconfirm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersPreconfirmOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersPreconfirm) {
		return nil, false
	}
	return o.SubscribersPreconfirm, true
}

// HasSubscribersPreconfirm returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersPreconfirm() bool {
	if o != nil && !IsNil(o.SubscribersPreconfirm) {
		return true
	}

	return false
}

// SetSubscribersPreconfirm gets a reference to the given string and assigns it to the SubscribersPreconfirm field.
func (o *LanguagePackData) SetSubscribersPreconfirm(v string) {
	o.SubscribersPreconfirm = &v
}

// GetSubscribersPreconfirmHelp returns the SubscribersPreconfirmHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersPreconfirmHelp() string {
	if o == nil || IsNil(o.SubscribersPreconfirmHelp) {
		var ret string
		return ret
	}
	return *o.SubscribersPreconfirmHelp
}

// GetSubscribersPreconfirmHelpOk returns a tuple with the SubscribersPreconfirmHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersPreconfirmHelpOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersPreconfirmHelp) {
		return nil, false
	}
	return o.SubscribersPreconfirmHelp, true
}

// HasSubscribersPreconfirmHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersPreconfirmHelp() bool {
	if o != nil && !IsNil(o.SubscribersPreconfirmHelp) {
		return true
	}

	return false
}

// SetSubscribersPreconfirmHelp gets a reference to the given string and assigns it to the SubscribersPreconfirmHelp field.
func (o *LanguagePackData) SetSubscribersPreconfirmHelp(v string) {
	o.SubscribersPreconfirmHelp = &v
}

// GetSubscribersQuery returns the SubscribersQuery field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersQuery() string {
	if o == nil || IsNil(o.SubscribersQuery) {
		var ret string
		return ret
	}
	return *o.SubscribersQuery
}

// GetSubscribersQueryOk returns a tuple with the SubscribersQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersQueryOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersQuery) {
		return nil, false
	}
	return o.SubscribersQuery, true
}

// HasSubscribersQuery returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersQuery() bool {
	if o != nil && !IsNil(o.SubscribersQuery) {
		return true
	}

	return false
}

// SetSubscribersQuery gets a reference to the given string and assigns it to the SubscribersQuery field.
func (o *LanguagePackData) SetSubscribersQuery(v string) {
	o.SubscribersQuery = &v
}

// GetSubscribersQueryPlaceholder returns the SubscribersQueryPlaceholder field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersQueryPlaceholder() string {
	if o == nil || IsNil(o.SubscribersQueryPlaceholder) {
		var ret string
		return ret
	}
	return *o.SubscribersQueryPlaceholder
}

// GetSubscribersQueryPlaceholderOk returns a tuple with the SubscribersQueryPlaceholder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersQueryPlaceholderOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersQueryPlaceholder) {
		return nil, false
	}
	return o.SubscribersQueryPlaceholder, true
}

// HasSubscribersQueryPlaceholder returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersQueryPlaceholder() bool {
	if o != nil && !IsNil(o.SubscribersQueryPlaceholder) {
		return true
	}

	return false
}

// SetSubscribersQueryPlaceholder gets a reference to the given string and assigns it to the SubscribersQueryPlaceholder field.
func (o *LanguagePackData) SetSubscribersQueryPlaceholder(v string) {
	o.SubscribersQueryPlaceholder = &v
}

// GetSubscribersReset returns the SubscribersReset field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersReset() string {
	if o == nil || IsNil(o.SubscribersReset) {
		var ret string
		return ret
	}
	return *o.SubscribersReset
}

// GetSubscribersResetOk returns a tuple with the SubscribersReset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersResetOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersReset) {
		return nil, false
	}
	return o.SubscribersReset, true
}

// HasSubscribersReset returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersReset() bool {
	if o != nil && !IsNil(o.SubscribersReset) {
		return true
	}

	return false
}

// SetSubscribersReset gets a reference to the given string and assigns it to the SubscribersReset field.
func (o *LanguagePackData) SetSubscribersReset(v string) {
	o.SubscribersReset = &v
}

// GetSubscribersSelectAll returns the SubscribersSelectAll field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersSelectAll() string {
	if o == nil || IsNil(o.SubscribersSelectAll) {
		var ret string
		return ret
	}
	return *o.SubscribersSelectAll
}

// GetSubscribersSelectAllOk returns a tuple with the SubscribersSelectAll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersSelectAllOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersSelectAll) {
		return nil, false
	}
	return o.SubscribersSelectAll, true
}

// HasSubscribersSelectAll returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersSelectAll() bool {
	if o != nil && !IsNil(o.SubscribersSelectAll) {
		return true
	}

	return false
}

// SetSubscribersSelectAll gets a reference to the given string and assigns it to the SubscribersSelectAll field.
func (o *LanguagePackData) SetSubscribersSelectAll(v string) {
	o.SubscribersSelectAll = &v
}

// GetSubscribersSendOptinConfirm returns the SubscribersSendOptinConfirm field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersSendOptinConfirm() string {
	if o == nil || IsNil(o.SubscribersSendOptinConfirm) {
		var ret string
		return ret
	}
	return *o.SubscribersSendOptinConfirm
}

// GetSubscribersSendOptinConfirmOk returns a tuple with the SubscribersSendOptinConfirm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersSendOptinConfirmOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersSendOptinConfirm) {
		return nil, false
	}
	return o.SubscribersSendOptinConfirm, true
}

// HasSubscribersSendOptinConfirm returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersSendOptinConfirm() bool {
	if o != nil && !IsNil(o.SubscribersSendOptinConfirm) {
		return true
	}

	return false
}

// SetSubscribersSendOptinConfirm gets a reference to the given string and assigns it to the SubscribersSendOptinConfirm field.
func (o *LanguagePackData) SetSubscribersSendOptinConfirm(v string) {
	o.SubscribersSendOptinConfirm = &v
}

// GetSubscribersSentOptinConfirm returns the SubscribersSentOptinConfirm field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersSentOptinConfirm() string {
	if o == nil || IsNil(o.SubscribersSentOptinConfirm) {
		var ret string
		return ret
	}
	return *o.SubscribersSentOptinConfirm
}

// GetSubscribersSentOptinConfirmOk returns a tuple with the SubscribersSentOptinConfirm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersSentOptinConfirmOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersSentOptinConfirm) {
		return nil, false
	}
	return o.SubscribersSentOptinConfirm, true
}

// HasSubscribersSentOptinConfirm returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersSentOptinConfirm() bool {
	if o != nil && !IsNil(o.SubscribersSentOptinConfirm) {
		return true
	}

	return false
}

// SetSubscribersSentOptinConfirm gets a reference to the given string and assigns it to the SubscribersSentOptinConfirm field.
func (o *LanguagePackData) SetSubscribersSentOptinConfirm(v string) {
	o.SubscribersSentOptinConfirm = &v
}

// GetSubscribersStatusBlocklisted returns the SubscribersStatusBlocklisted field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersStatusBlocklisted() string {
	if o == nil || IsNil(o.SubscribersStatusBlocklisted) {
		var ret string
		return ret
	}
	return *o.SubscribersStatusBlocklisted
}

// GetSubscribersStatusBlocklistedOk returns a tuple with the SubscribersStatusBlocklisted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersStatusBlocklistedOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersStatusBlocklisted) {
		return nil, false
	}
	return o.SubscribersStatusBlocklisted, true
}

// HasSubscribersStatusBlocklisted returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersStatusBlocklisted() bool {
	if o != nil && !IsNil(o.SubscribersStatusBlocklisted) {
		return true
	}

	return false
}

// SetSubscribersStatusBlocklisted gets a reference to the given string and assigns it to the SubscribersStatusBlocklisted field.
func (o *LanguagePackData) SetSubscribersStatusBlocklisted(v string) {
	o.SubscribersStatusBlocklisted = &v
}

// GetSubscribersStatusConfirmed returns the SubscribersStatusConfirmed field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersStatusConfirmed() string {
	if o == nil || IsNil(o.SubscribersStatusConfirmed) {
		var ret string
		return ret
	}
	return *o.SubscribersStatusConfirmed
}

// GetSubscribersStatusConfirmedOk returns a tuple with the SubscribersStatusConfirmed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersStatusConfirmedOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersStatusConfirmed) {
		return nil, false
	}
	return o.SubscribersStatusConfirmed, true
}

// HasSubscribersStatusConfirmed returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersStatusConfirmed() bool {
	if o != nil && !IsNil(o.SubscribersStatusConfirmed) {
		return true
	}

	return false
}

// SetSubscribersStatusConfirmed gets a reference to the given string and assigns it to the SubscribersStatusConfirmed field.
func (o *LanguagePackData) SetSubscribersStatusConfirmed(v string) {
	o.SubscribersStatusConfirmed = &v
}

// GetSubscribersStatusEnabled returns the SubscribersStatusEnabled field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersStatusEnabled() string {
	if o == nil || IsNil(o.SubscribersStatusEnabled) {
		var ret string
		return ret
	}
	return *o.SubscribersStatusEnabled
}

// GetSubscribersStatusEnabledOk returns a tuple with the SubscribersStatusEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersStatusEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersStatusEnabled) {
		return nil, false
	}
	return o.SubscribersStatusEnabled, true
}

// HasSubscribersStatusEnabled returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersStatusEnabled() bool {
	if o != nil && !IsNil(o.SubscribersStatusEnabled) {
		return true
	}

	return false
}

// SetSubscribersStatusEnabled gets a reference to the given string and assigns it to the SubscribersStatusEnabled field.
func (o *LanguagePackData) SetSubscribersStatusEnabled(v string) {
	o.SubscribersStatusEnabled = &v
}

// GetSubscribersStatusSubscribed returns the SubscribersStatusSubscribed field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersStatusSubscribed() string {
	if o == nil || IsNil(o.SubscribersStatusSubscribed) {
		var ret string
		return ret
	}
	return *o.SubscribersStatusSubscribed
}

// GetSubscribersStatusSubscribedOk returns a tuple with the SubscribersStatusSubscribed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersStatusSubscribedOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersStatusSubscribed) {
		return nil, false
	}
	return o.SubscribersStatusSubscribed, true
}

// HasSubscribersStatusSubscribed returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersStatusSubscribed() bool {
	if o != nil && !IsNil(o.SubscribersStatusSubscribed) {
		return true
	}

	return false
}

// SetSubscribersStatusSubscribed gets a reference to the given string and assigns it to the SubscribersStatusSubscribed field.
func (o *LanguagePackData) SetSubscribersStatusSubscribed(v string) {
	o.SubscribersStatusSubscribed = &v
}

// GetSubscribersStatusUnconfirmed returns the SubscribersStatusUnconfirmed field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersStatusUnconfirmed() string {
	if o == nil || IsNil(o.SubscribersStatusUnconfirmed) {
		var ret string
		return ret
	}
	return *o.SubscribersStatusUnconfirmed
}

// GetSubscribersStatusUnconfirmedOk returns a tuple with the SubscribersStatusUnconfirmed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersStatusUnconfirmedOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersStatusUnconfirmed) {
		return nil, false
	}
	return o.SubscribersStatusUnconfirmed, true
}

// HasSubscribersStatusUnconfirmed returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersStatusUnconfirmed() bool {
	if o != nil && !IsNil(o.SubscribersStatusUnconfirmed) {
		return true
	}

	return false
}

// SetSubscribersStatusUnconfirmed gets a reference to the given string and assigns it to the SubscribersStatusUnconfirmed field.
func (o *LanguagePackData) SetSubscribersStatusUnconfirmed(v string) {
	o.SubscribersStatusUnconfirmed = &v
}

// GetSubscribersStatusUnsubscribed returns the SubscribersStatusUnsubscribed field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersStatusUnsubscribed() string {
	if o == nil || IsNil(o.SubscribersStatusUnsubscribed) {
		var ret string
		return ret
	}
	return *o.SubscribersStatusUnsubscribed
}

// GetSubscribersStatusUnsubscribedOk returns a tuple with the SubscribersStatusUnsubscribed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersStatusUnsubscribedOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersStatusUnsubscribed) {
		return nil, false
	}
	return o.SubscribersStatusUnsubscribed, true
}

// HasSubscribersStatusUnsubscribed returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersStatusUnsubscribed() bool {
	if o != nil && !IsNil(o.SubscribersStatusUnsubscribed) {
		return true
	}

	return false
}

// SetSubscribersStatusUnsubscribed gets a reference to the given string and assigns it to the SubscribersStatusUnsubscribed field.
func (o *LanguagePackData) SetSubscribersStatusUnsubscribed(v string) {
	o.SubscribersStatusUnsubscribed = &v
}

// GetSubscribersSubscribersDeleted returns the SubscribersSubscribersDeleted field value if set, zero value otherwise.
func (o *LanguagePackData) GetSubscribersSubscribersDeleted() string {
	if o == nil || IsNil(o.SubscribersSubscribersDeleted) {
		var ret string
		return ret
	}
	return *o.SubscribersSubscribersDeleted
}

// GetSubscribersSubscribersDeletedOk returns a tuple with the SubscribersSubscribersDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetSubscribersSubscribersDeletedOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribersSubscribersDeleted) {
		return nil, false
	}
	return o.SubscribersSubscribersDeleted, true
}

// HasSubscribersSubscribersDeleted returns a boolean if a field has been set.
func (o *LanguagePackData) HasSubscribersSubscribersDeleted() bool {
	if o != nil && !IsNil(o.SubscribersSubscribersDeleted) {
		return true
	}

	return false
}

// SetSubscribersSubscribersDeleted gets a reference to the given string and assigns it to the SubscribersSubscribersDeleted field.
func (o *LanguagePackData) SetSubscribersSubscribersDeleted(v string) {
	o.SubscribersSubscribersDeleted = &v
}

// GetTemplatesCantDeleteDefault returns the TemplatesCantDeleteDefault field value if set, zero value otherwise.
func (o *LanguagePackData) GetTemplatesCantDeleteDefault() string {
	if o == nil || IsNil(o.TemplatesCantDeleteDefault) {
		var ret string
		return ret
	}
	return *o.TemplatesCantDeleteDefault
}

// GetTemplatesCantDeleteDefaultOk returns a tuple with the TemplatesCantDeleteDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetTemplatesCantDeleteDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.TemplatesCantDeleteDefault) {
		return nil, false
	}
	return o.TemplatesCantDeleteDefault, true
}

// HasTemplatesCantDeleteDefault returns a boolean if a field has been set.
func (o *LanguagePackData) HasTemplatesCantDeleteDefault() bool {
	if o != nil && !IsNil(o.TemplatesCantDeleteDefault) {
		return true
	}

	return false
}

// SetTemplatesCantDeleteDefault gets a reference to the given string and assigns it to the TemplatesCantDeleteDefault field.
func (o *LanguagePackData) SetTemplatesCantDeleteDefault(v string) {
	o.TemplatesCantDeleteDefault = &v
}

// GetTemplatesDefault returns the TemplatesDefault field value if set, zero value otherwise.
func (o *LanguagePackData) GetTemplatesDefault() string {
	if o == nil || IsNil(o.TemplatesDefault) {
		var ret string
		return ret
	}
	return *o.TemplatesDefault
}

// GetTemplatesDefaultOk returns a tuple with the TemplatesDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetTemplatesDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.TemplatesDefault) {
		return nil, false
	}
	return o.TemplatesDefault, true
}

// HasTemplatesDefault returns a boolean if a field has been set.
func (o *LanguagePackData) HasTemplatesDefault() bool {
	if o != nil && !IsNil(o.TemplatesDefault) {
		return true
	}

	return false
}

// SetTemplatesDefault gets a reference to the given string and assigns it to the TemplatesDefault field.
func (o *LanguagePackData) SetTemplatesDefault(v string) {
	o.TemplatesDefault = &v
}

// GetTemplatesDummyName returns the TemplatesDummyName field value if set, zero value otherwise.
func (o *LanguagePackData) GetTemplatesDummyName() string {
	if o == nil || IsNil(o.TemplatesDummyName) {
		var ret string
		return ret
	}
	return *o.TemplatesDummyName
}

// GetTemplatesDummyNameOk returns a tuple with the TemplatesDummyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetTemplatesDummyNameOk() (*string, bool) {
	if o == nil || IsNil(o.TemplatesDummyName) {
		return nil, false
	}
	return o.TemplatesDummyName, true
}

// HasTemplatesDummyName returns a boolean if a field has been set.
func (o *LanguagePackData) HasTemplatesDummyName() bool {
	if o != nil && !IsNil(o.TemplatesDummyName) {
		return true
	}

	return false
}

// SetTemplatesDummyName gets a reference to the given string and assigns it to the TemplatesDummyName field.
func (o *LanguagePackData) SetTemplatesDummyName(v string) {
	o.TemplatesDummyName = &v
}

// GetTemplatesDummySubject returns the TemplatesDummySubject field value if set, zero value otherwise.
func (o *LanguagePackData) GetTemplatesDummySubject() string {
	if o == nil || IsNil(o.TemplatesDummySubject) {
		var ret string
		return ret
	}
	return *o.TemplatesDummySubject
}

// GetTemplatesDummySubjectOk returns a tuple with the TemplatesDummySubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetTemplatesDummySubjectOk() (*string, bool) {
	if o == nil || IsNil(o.TemplatesDummySubject) {
		return nil, false
	}
	return o.TemplatesDummySubject, true
}

// HasTemplatesDummySubject returns a boolean if a field has been set.
func (o *LanguagePackData) HasTemplatesDummySubject() bool {
	if o != nil && !IsNil(o.TemplatesDummySubject) {
		return true
	}

	return false
}

// SetTemplatesDummySubject gets a reference to the given string and assigns it to the TemplatesDummySubject field.
func (o *LanguagePackData) SetTemplatesDummySubject(v string) {
	o.TemplatesDummySubject = &v
}

// GetTemplatesErrorCompiling returns the TemplatesErrorCompiling field value if set, zero value otherwise.
func (o *LanguagePackData) GetTemplatesErrorCompiling() string {
	if o == nil || IsNil(o.TemplatesErrorCompiling) {
		var ret string
		return ret
	}
	return *o.TemplatesErrorCompiling
}

// GetTemplatesErrorCompilingOk returns a tuple with the TemplatesErrorCompiling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetTemplatesErrorCompilingOk() (*string, bool) {
	if o == nil || IsNil(o.TemplatesErrorCompiling) {
		return nil, false
	}
	return o.TemplatesErrorCompiling, true
}

// HasTemplatesErrorCompiling returns a boolean if a field has been set.
func (o *LanguagePackData) HasTemplatesErrorCompiling() bool {
	if o != nil && !IsNil(o.TemplatesErrorCompiling) {
		return true
	}

	return false
}

// SetTemplatesErrorCompiling gets a reference to the given string and assigns it to the TemplatesErrorCompiling field.
func (o *LanguagePackData) SetTemplatesErrorCompiling(v string) {
	o.TemplatesErrorCompiling = &v
}

// GetTemplatesErrorRendering returns the TemplatesErrorRendering field value if set, zero value otherwise.
func (o *LanguagePackData) GetTemplatesErrorRendering() string {
	if o == nil || IsNil(o.TemplatesErrorRendering) {
		var ret string
		return ret
	}
	return *o.TemplatesErrorRendering
}

// GetTemplatesErrorRenderingOk returns a tuple with the TemplatesErrorRendering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetTemplatesErrorRenderingOk() (*string, bool) {
	if o == nil || IsNil(o.TemplatesErrorRendering) {
		return nil, false
	}
	return o.TemplatesErrorRendering, true
}

// HasTemplatesErrorRendering returns a boolean if a field has been set.
func (o *LanguagePackData) HasTemplatesErrorRendering() bool {
	if o != nil && !IsNil(o.TemplatesErrorRendering) {
		return true
	}

	return false
}

// SetTemplatesErrorRendering gets a reference to the given string and assigns it to the TemplatesErrorRendering field.
func (o *LanguagePackData) SetTemplatesErrorRendering(v string) {
	o.TemplatesErrorRendering = &v
}

// GetTemplatesFieldInvalidName returns the TemplatesFieldInvalidName field value if set, zero value otherwise.
func (o *LanguagePackData) GetTemplatesFieldInvalidName() string {
	if o == nil || IsNil(o.TemplatesFieldInvalidName) {
		var ret string
		return ret
	}
	return *o.TemplatesFieldInvalidName
}

// GetTemplatesFieldInvalidNameOk returns a tuple with the TemplatesFieldInvalidName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetTemplatesFieldInvalidNameOk() (*string, bool) {
	if o == nil || IsNil(o.TemplatesFieldInvalidName) {
		return nil, false
	}
	return o.TemplatesFieldInvalidName, true
}

// HasTemplatesFieldInvalidName returns a boolean if a field has been set.
func (o *LanguagePackData) HasTemplatesFieldInvalidName() bool {
	if o != nil && !IsNil(o.TemplatesFieldInvalidName) {
		return true
	}

	return false
}

// SetTemplatesFieldInvalidName gets a reference to the given string and assigns it to the TemplatesFieldInvalidName field.
func (o *LanguagePackData) SetTemplatesFieldInvalidName(v string) {
	o.TemplatesFieldInvalidName = &v
}

// GetTemplatesMakeDefault returns the TemplatesMakeDefault field value if set, zero value otherwise.
func (o *LanguagePackData) GetTemplatesMakeDefault() string {
	if o == nil || IsNil(o.TemplatesMakeDefault) {
		var ret string
		return ret
	}
	return *o.TemplatesMakeDefault
}

// GetTemplatesMakeDefaultOk returns a tuple with the TemplatesMakeDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetTemplatesMakeDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.TemplatesMakeDefault) {
		return nil, false
	}
	return o.TemplatesMakeDefault, true
}

// HasTemplatesMakeDefault returns a boolean if a field has been set.
func (o *LanguagePackData) HasTemplatesMakeDefault() bool {
	if o != nil && !IsNil(o.TemplatesMakeDefault) {
		return true
	}

	return false
}

// SetTemplatesMakeDefault gets a reference to the given string and assigns it to the TemplatesMakeDefault field.
func (o *LanguagePackData) SetTemplatesMakeDefault(v string) {
	o.TemplatesMakeDefault = &v
}

// GetTemplatesNewTemplate returns the TemplatesNewTemplate field value if set, zero value otherwise.
func (o *LanguagePackData) GetTemplatesNewTemplate() string {
	if o == nil || IsNil(o.TemplatesNewTemplate) {
		var ret string
		return ret
	}
	return *o.TemplatesNewTemplate
}

// GetTemplatesNewTemplateOk returns a tuple with the TemplatesNewTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetTemplatesNewTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.TemplatesNewTemplate) {
		return nil, false
	}
	return o.TemplatesNewTemplate, true
}

// HasTemplatesNewTemplate returns a boolean if a field has been set.
func (o *LanguagePackData) HasTemplatesNewTemplate() bool {
	if o != nil && !IsNil(o.TemplatesNewTemplate) {
		return true
	}

	return false
}

// SetTemplatesNewTemplate gets a reference to the given string and assigns it to the TemplatesNewTemplate field.
func (o *LanguagePackData) SetTemplatesNewTemplate(v string) {
	o.TemplatesNewTemplate = &v
}

// GetTemplatesPlaceholderHelp returns the TemplatesPlaceholderHelp field value if set, zero value otherwise.
func (o *LanguagePackData) GetTemplatesPlaceholderHelp() string {
	if o == nil || IsNil(o.TemplatesPlaceholderHelp) {
		var ret string
		return ret
	}
	return *o.TemplatesPlaceholderHelp
}

// GetTemplatesPlaceholderHelpOk returns a tuple with the TemplatesPlaceholderHelp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetTemplatesPlaceholderHelpOk() (*string, bool) {
	if o == nil || IsNil(o.TemplatesPlaceholderHelp) {
		return nil, false
	}
	return o.TemplatesPlaceholderHelp, true
}

// HasTemplatesPlaceholderHelp returns a boolean if a field has been set.
func (o *LanguagePackData) HasTemplatesPlaceholderHelp() bool {
	if o != nil && !IsNil(o.TemplatesPlaceholderHelp) {
		return true
	}

	return false
}

// SetTemplatesPlaceholderHelp gets a reference to the given string and assigns it to the TemplatesPlaceholderHelp field.
func (o *LanguagePackData) SetTemplatesPlaceholderHelp(v string) {
	o.TemplatesPlaceholderHelp = &v
}

// GetTemplatesPreview returns the TemplatesPreview field value if set, zero value otherwise.
func (o *LanguagePackData) GetTemplatesPreview() string {
	if o == nil || IsNil(o.TemplatesPreview) {
		var ret string
		return ret
	}
	return *o.TemplatesPreview
}

// GetTemplatesPreviewOk returns a tuple with the TemplatesPreview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetTemplatesPreviewOk() (*string, bool) {
	if o == nil || IsNil(o.TemplatesPreview) {
		return nil, false
	}
	return o.TemplatesPreview, true
}

// HasTemplatesPreview returns a boolean if a field has been set.
func (o *LanguagePackData) HasTemplatesPreview() bool {
	if o != nil && !IsNil(o.TemplatesPreview) {
		return true
	}

	return false
}

// SetTemplatesPreview gets a reference to the given string and assigns it to the TemplatesPreview field.
func (o *LanguagePackData) SetTemplatesPreview(v string) {
	o.TemplatesPreview = &v
}

// GetTemplatesRawHTML returns the TemplatesRawHTML field value if set, zero value otherwise.
func (o *LanguagePackData) GetTemplatesRawHTML() string {
	if o == nil || IsNil(o.TemplatesRawHTML) {
		var ret string
		return ret
	}
	return *o.TemplatesRawHTML
}

// GetTemplatesRawHTMLOk returns a tuple with the TemplatesRawHTML field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetTemplatesRawHTMLOk() (*string, bool) {
	if o == nil || IsNil(o.TemplatesRawHTML) {
		return nil, false
	}
	return o.TemplatesRawHTML, true
}

// HasTemplatesRawHTML returns a boolean if a field has been set.
func (o *LanguagePackData) HasTemplatesRawHTML() bool {
	if o != nil && !IsNil(o.TemplatesRawHTML) {
		return true
	}

	return false
}

// SetTemplatesRawHTML gets a reference to the given string and assigns it to the TemplatesRawHTML field.
func (o *LanguagePackData) SetTemplatesRawHTML(v string) {
	o.TemplatesRawHTML = &v
}

// GetTemplatesSubject returns the TemplatesSubject field value if set, zero value otherwise.
func (o *LanguagePackData) GetTemplatesSubject() string {
	if o == nil || IsNil(o.TemplatesSubject) {
		var ret string
		return ret
	}
	return *o.TemplatesSubject
}

// GetTemplatesSubjectOk returns a tuple with the TemplatesSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetTemplatesSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.TemplatesSubject) {
		return nil, false
	}
	return o.TemplatesSubject, true
}

// HasTemplatesSubject returns a boolean if a field has been set.
func (o *LanguagePackData) HasTemplatesSubject() bool {
	if o != nil && !IsNil(o.TemplatesSubject) {
		return true
	}

	return false
}

// SetTemplatesSubject gets a reference to the given string and assigns it to the TemplatesSubject field.
func (o *LanguagePackData) SetTemplatesSubject(v string) {
	o.TemplatesSubject = &v
}

// GetUsersLogin returns the UsersLogin field value if set, zero value otherwise.
func (o *LanguagePackData) GetUsersLogin() string {
	if o == nil || IsNil(o.UsersLogin) {
		var ret string
		return ret
	}
	return *o.UsersLogin
}

// GetUsersLoginOk returns a tuple with the UsersLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetUsersLoginOk() (*string, bool) {
	if o == nil || IsNil(o.UsersLogin) {
		return nil, false
	}
	return o.UsersLogin, true
}

// HasUsersLogin returns a boolean if a field has been set.
func (o *LanguagePackData) HasUsersLogin() bool {
	if o != nil && !IsNil(o.UsersLogin) {
		return true
	}

	return false
}

// SetUsersLogin gets a reference to the given string and assigns it to the UsersLogin field.
func (o *LanguagePackData) SetUsersLogin(v string) {
	o.UsersLogin = &v
}

// GetUsersLogout returns the UsersLogout field value if set, zero value otherwise.
func (o *LanguagePackData) GetUsersLogout() string {
	if o == nil || IsNil(o.UsersLogout) {
		var ret string
		return ret
	}
	return *o.UsersLogout
}

// GetUsersLogoutOk returns a tuple with the UsersLogout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LanguagePackData) GetUsersLogoutOk() (*string, bool) {
	if o == nil || IsNil(o.UsersLogout) {
		return nil, false
	}
	return o.UsersLogout, true
}

// HasUsersLogout returns a boolean if a field has been set.
func (o *LanguagePackData) HasUsersLogout() bool {
	if o != nil && !IsNil(o.UsersLogout) {
		return true
	}

	return false
}

// SetUsersLogout gets a reference to the given string and assigns it to the UsersLogout field.
func (o *LanguagePackData) SetUsersLogout(v string) {
	o.UsersLogout = &v
}

func (o LanguagePackData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LanguagePackData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["_.code"] = o.Code
	}
	if !IsNil(o.Name) {
		toSerialize["_.name"] = o.Name
	}
	if !IsNil(o.AdminErrorMarshallingConfig) {
		toSerialize["admin.errorMarshallingConfig"] = o.AdminErrorMarshallingConfig
	}
	if !IsNil(o.AnalyticsCount) {
		toSerialize["analytics.count"] = o.AnalyticsCount
	}
	if !IsNil(o.AnalyticsFromDate) {
		toSerialize["analytics.fromDate"] = o.AnalyticsFromDate
	}
	if !IsNil(o.AnalyticsInvalidDates) {
		toSerialize["analytics.invalidDates"] = o.AnalyticsInvalidDates
	}
	if !IsNil(o.AnalyticsIsUnique) {
		toSerialize["analytics.isUnique"] = o.AnalyticsIsUnique
	}
	if !IsNil(o.AnalyticsLinks) {
		toSerialize["analytics.links"] = o.AnalyticsLinks
	}
	if !IsNil(o.AnalyticsNonUnique) {
		toSerialize["analytics.nonUnique"] = o.AnalyticsNonUnique
	}
	if !IsNil(o.AnalyticsTitle) {
		toSerialize["analytics.title"] = o.AnalyticsTitle
	}
	if !IsNil(o.AnalyticsToDate) {
		toSerialize["analytics.toDate"] = o.AnalyticsToDate
	}
	if !IsNil(o.BouncesSource) {
		toSerialize["bounces.source"] = o.BouncesSource
	}
	if !IsNil(o.BouncesUnknownService) {
		toSerialize["bounces.unknownService"] = o.BouncesUnknownService
	}
	if !IsNil(o.BouncesView) {
		toSerialize["bounces.view"] = o.BouncesView
	}
	if !IsNil(o.CampaignsAddAltText) {
		toSerialize["campaigns.addAltText"] = o.CampaignsAddAltText
	}
	if !IsNil(o.CampaignsArchive) {
		toSerialize["campaigns.archive"] = o.CampaignsArchive
	}
	if !IsNil(o.CampaignsArchiveEnable) {
		toSerialize["campaigns.archiveEnable"] = o.CampaignsArchiveEnable
	}
	if !IsNil(o.CampaignsArchiveHelp) {
		toSerialize["campaigns.archiveHelp"] = o.CampaignsArchiveHelp
	}
	if !IsNil(o.CampaignsArchiveMeta) {
		toSerialize["campaigns.archiveMeta"] = o.CampaignsArchiveMeta
	}
	if !IsNil(o.CampaignsArchiveMetaHelp) {
		toSerialize["campaigns.archiveMetaHelp"] = o.CampaignsArchiveMetaHelp
	}
	if !IsNil(o.CampaignsCantUpdate) {
		toSerialize["campaigns.cantUpdate"] = o.CampaignsCantUpdate
	}
	if !IsNil(o.CampaignsClicks) {
		toSerialize["campaigns.clicks"] = o.CampaignsClicks
	}
	if !IsNil(o.CampaignsConfirmDelete) {
		toSerialize["campaigns.confirmDelete"] = o.CampaignsConfirmDelete
	}
	if !IsNil(o.CampaignsConfirmSchedule) {
		toSerialize["campaigns.confirmSchedule"] = o.CampaignsConfirmSchedule
	}
	if !IsNil(o.CampaignsConfirmSwitchFormat) {
		toSerialize["campaigns.confirmSwitchFormat"] = o.CampaignsConfirmSwitchFormat
	}
	if !IsNil(o.CampaignsContent) {
		toSerialize["campaigns.content"] = o.CampaignsContent
	}
	if !IsNil(o.CampaignsContentHelp) {
		toSerialize["campaigns.contentHelp"] = o.CampaignsContentHelp
	}
	if !IsNil(o.CampaignsContinue) {
		toSerialize["campaigns.continue"] = o.CampaignsContinue
	}
	if !IsNil(o.CampaignsCopyOf) {
		toSerialize["campaigns.copyOf"] = o.CampaignsCopyOf
	}
	if !IsNil(o.CampaignsCustomHeadersHelp) {
		toSerialize["campaigns.customHeadersHelp"] = o.CampaignsCustomHeadersHelp
	}
	if !IsNil(o.CampaignsDateAndTime) {
		toSerialize["campaigns.dateAndTime"] = o.CampaignsDateAndTime
	}
	if !IsNil(o.CampaignsEnded) {
		toSerialize["campaigns.ended"] = o.CampaignsEnded
	}
	if !IsNil(o.CampaignsErrorSendTest) {
		toSerialize["campaigns.errorSendTest"] = o.CampaignsErrorSendTest
	}
	if !IsNil(o.CampaignsFieldInvalidBody) {
		toSerialize["campaigns.fieldInvalidBody"] = o.CampaignsFieldInvalidBody
	}
	if !IsNil(o.CampaignsFieldInvalidFromEmail) {
		toSerialize["campaigns.fieldInvalidFromEmail"] = o.CampaignsFieldInvalidFromEmail
	}
	if !IsNil(o.CampaignsFieldInvalidListIDs) {
		toSerialize["campaigns.fieldInvalidListIDs"] = o.CampaignsFieldInvalidListIDs
	}
	if !IsNil(o.CampaignsFieldInvalidMessenger) {
		toSerialize["campaigns.fieldInvalidMessenger"] = o.CampaignsFieldInvalidMessenger
	}
	if !IsNil(o.CampaignsFieldInvalidName) {
		toSerialize["campaigns.fieldInvalidName"] = o.CampaignsFieldInvalidName
	}
	if !IsNil(o.CampaignsFieldInvalidSendAt) {
		toSerialize["campaigns.fieldInvalidSendAt"] = o.CampaignsFieldInvalidSendAt
	}
	if !IsNil(o.CampaignsFieldInvalidSubject) {
		toSerialize["campaigns.fieldInvalidSubject"] = o.CampaignsFieldInvalidSubject
	}
	if !IsNil(o.CampaignsFormatHTML) {
		toSerialize["campaigns.formatHTML"] = o.CampaignsFormatHTML
	}
	if !IsNil(o.CampaignsFromAddress) {
		toSerialize["campaigns.fromAddress"] = o.CampaignsFromAddress
	}
	if !IsNil(o.CampaignsFromAddressPlaceholder) {
		toSerialize["campaigns.fromAddressPlaceholder"] = o.CampaignsFromAddressPlaceholder
	}
	if !IsNil(o.CampaignsInvalid) {
		toSerialize["campaigns.invalid"] = o.CampaignsInvalid
	}
	if !IsNil(o.CampaignsInvalidCustomHeaders) {
		toSerialize["campaigns.invalidCustomHeaders"] = o.CampaignsInvalidCustomHeaders
	}
	if !IsNil(o.CampaignsMarkdown) {
		toSerialize["campaigns.markdown"] = o.CampaignsMarkdown
	}
	if !IsNil(o.CampaignsNeedsSendAt) {
		toSerialize["campaigns.needsSendAt"] = o.CampaignsNeedsSendAt
	}
	if !IsNil(o.CampaignsNewCampaign) {
		toSerialize["campaigns.newCampaign"] = o.CampaignsNewCampaign
	}
	if !IsNil(o.CampaignsNoKnownSubsToTest) {
		toSerialize["campaigns.noKnownSubsToTest"] = o.CampaignsNoKnownSubsToTest
	}
	if !IsNil(o.CampaignsNoOptinLists) {
		toSerialize["campaigns.noOptinLists"] = o.CampaignsNoOptinLists
	}
	if !IsNil(o.CampaignsNoSubs) {
		toSerialize["campaigns.noSubs"] = o.CampaignsNoSubs
	}
	if !IsNil(o.CampaignsNoSubsToTest) {
		toSerialize["campaigns.noSubsToTest"] = o.CampaignsNoSubsToTest
	}
	if !IsNil(o.CampaignsNotFound) {
		toSerialize["campaigns.notFound"] = o.CampaignsNotFound
	}
	if !IsNil(o.CampaignsOnlyActiveCancel) {
		toSerialize["campaigns.onlyActiveCancel"] = o.CampaignsOnlyActiveCancel
	}
	if !IsNil(o.CampaignsOnlyActivePause) {
		toSerialize["campaigns.onlyActivePause"] = o.CampaignsOnlyActivePause
	}
	if !IsNil(o.CampaignsOnlyDraftAsScheduled) {
		toSerialize["campaigns.onlyDraftAsScheduled"] = o.CampaignsOnlyDraftAsScheduled
	}
	if !IsNil(o.CampaignsOnlyPausedDraft) {
		toSerialize["campaigns.onlyPausedDraft"] = o.CampaignsOnlyPausedDraft
	}
	if !IsNil(o.CampaignsOnlyScheduledAsDraft) {
		toSerialize["campaigns.onlyScheduledAsDraft"] = o.CampaignsOnlyScheduledAsDraft
	}
	if !IsNil(o.CampaignsPause) {
		toSerialize["campaigns.pause"] = o.CampaignsPause
	}
	if !IsNil(o.CampaignsPlainText) {
		toSerialize["campaigns.plainText"] = o.CampaignsPlainText
	}
	if !IsNil(o.CampaignsPreview) {
		toSerialize["campaigns.preview"] = o.CampaignsPreview
	}
	if !IsNil(o.CampaignsProgress) {
		toSerialize["campaigns.progress"] = o.CampaignsProgress
	}
	if !IsNil(o.CampaignsQueryPlaceholder) {
		toSerialize["campaigns.queryPlaceholder"] = o.CampaignsQueryPlaceholder
	}
	if !IsNil(o.CampaignsRateMinuteShort) {
		toSerialize["campaigns.rateMinuteShort"] = o.CampaignsRateMinuteShort
	}
	if !IsNil(o.CampaignsRawHTML) {
		toSerialize["campaigns.rawHTML"] = o.CampaignsRawHTML
	}
	if !IsNil(o.CampaignsRemoveAltText) {
		toSerialize["campaigns.removeAltText"] = o.CampaignsRemoveAltText
	}
	if !IsNil(o.CampaignsRichText) {
		toSerialize["campaigns.richText"] = o.CampaignsRichText
	}
	if !IsNil(o.CampaignsSchedule) {
		toSerialize["campaigns.schedule"] = o.CampaignsSchedule
	}
	if !IsNil(o.CampaignsScheduled) {
		toSerialize["campaigns.scheduled"] = o.CampaignsScheduled
	}
	if !IsNil(o.CampaignsSend) {
		toSerialize["campaigns.send"] = o.CampaignsSend
	}
	if !IsNil(o.CampaignsSendLater) {
		toSerialize["campaigns.sendLater"] = o.CampaignsSendLater
	}
	if !IsNil(o.CampaignsSendTest) {
		toSerialize["campaigns.sendTest"] = o.CampaignsSendTest
	}
	if !IsNil(o.CampaignsSendTestHelp) {
		toSerialize["campaigns.sendTestHelp"] = o.CampaignsSendTestHelp
	}
	if !IsNil(o.CampaignsSendToLists) {
		toSerialize["campaigns.sendToLists"] = o.CampaignsSendToLists
	}
	if !IsNil(o.CampaignsSent) {
		toSerialize["campaigns.sent"] = o.CampaignsSent
	}
	if !IsNil(o.CampaignsStart) {
		toSerialize["campaigns.start"] = o.CampaignsStart
	}
	if !IsNil(o.CampaignsStarted) {
		toSerialize["campaigns.started"] = o.CampaignsStarted
	}
	if !IsNil(o.CampaignsStartedAt) {
		toSerialize["campaigns.startedAt"] = o.CampaignsStartedAt
	}
	if !IsNil(o.CampaignsStats) {
		toSerialize["campaigns.stats"] = o.CampaignsStats
	}
	if !IsNil(o.CampaignsStatusCancelled) {
		toSerialize["campaigns.status.cancelled"] = o.CampaignsStatusCancelled
	}
	if !IsNil(o.CampaignsStatusDraft) {
		toSerialize["campaigns.status.draft"] = o.CampaignsStatusDraft
	}
	if !IsNil(o.CampaignsStatusFinished) {
		toSerialize["campaigns.status.finished"] = o.CampaignsStatusFinished
	}
	if !IsNil(o.CampaignsStatusPaused) {
		toSerialize["campaigns.status.paused"] = o.CampaignsStatusPaused
	}
	if !IsNil(o.CampaignsStatusRunning) {
		toSerialize["campaigns.status.running"] = o.CampaignsStatusRunning
	}
	if !IsNil(o.CampaignsStatusScheduled) {
		toSerialize["campaigns.status.scheduled"] = o.CampaignsStatusScheduled
	}
	if !IsNil(o.CampaignsStatusChanged) {
		toSerialize["campaigns.statusChanged"] = o.CampaignsStatusChanged
	}
	if !IsNil(o.CampaignsSubject) {
		toSerialize["campaigns.subject"] = o.CampaignsSubject
	}
	if !IsNil(o.CampaignsTestEmails) {
		toSerialize["campaigns.testEmails"] = o.CampaignsTestEmails
	}
	if !IsNil(o.CampaignsTestSent) {
		toSerialize["campaigns.testSent"] = o.CampaignsTestSent
	}
	if !IsNil(o.CampaignsTimestamps) {
		toSerialize["campaigns.timestamps"] = o.CampaignsTimestamps
	}
	if !IsNil(o.CampaignsTrackLink) {
		toSerialize["campaigns.trackLink"] = o.CampaignsTrackLink
	}
	if !IsNil(o.CampaignsViews) {
		toSerialize["campaigns.views"] = o.CampaignsViews
	}
	if !IsNil(o.DashboardCampaignViews) {
		toSerialize["dashboard.campaignViews"] = o.DashboardCampaignViews
	}
	if !IsNil(o.DashboardLinkClicks) {
		toSerialize["dashboard.linkClicks"] = o.DashboardLinkClicks
	}
	if !IsNil(o.DashboardMessagesSent) {
		toSerialize["dashboard.messagesSent"] = o.DashboardMessagesSent
	}
	if !IsNil(o.DashboardOrphanSubs) {
		toSerialize["dashboard.orphanSubs"] = o.DashboardOrphanSubs
	}
	if !IsNil(o.EmailDataInfo) {
		toSerialize["email.data.info"] = o.EmailDataInfo
	}
	if !IsNil(o.EmailDataTitle) {
		toSerialize["email.data.title"] = o.EmailDataTitle
	}
	if !IsNil(o.EmailOptinConfirmSub) {
		toSerialize["email.optin.confirmSub"] = o.EmailOptinConfirmSub
	}
	if !IsNil(o.EmailOptinConfirmSubHelp) {
		toSerialize["email.optin.confirmSubHelp"] = o.EmailOptinConfirmSubHelp
	}
	if !IsNil(o.EmailOptinConfirmSubInfo) {
		toSerialize["email.optin.confirmSubInfo"] = o.EmailOptinConfirmSubInfo
	}
	if !IsNil(o.EmailOptinConfirmSubTitle) {
		toSerialize["email.optin.confirmSubTitle"] = o.EmailOptinConfirmSubTitle
	}
	if !IsNil(o.EmailOptinConfirmSubWelcome) {
		toSerialize["email.optin.confirmSubWelcome"] = o.EmailOptinConfirmSubWelcome
	}
	if !IsNil(o.EmailOptinPrivateList) {
		toSerialize["email.optin.privateList"] = o.EmailOptinPrivateList
	}
	if !IsNil(o.EmailStatusCampaignReason) {
		toSerialize["email.status.campaignReason"] = o.EmailStatusCampaignReason
	}
	if !IsNil(o.EmailStatusCampaignSent) {
		toSerialize["email.status.campaignSent"] = o.EmailStatusCampaignSent
	}
	if !IsNil(o.EmailStatusCampaignUpdateTitle) {
		toSerialize["email.status.campaignUpdateTitle"] = o.EmailStatusCampaignUpdateTitle
	}
	if !IsNil(o.EmailStatusImportFile) {
		toSerialize["email.status.importFile"] = o.EmailStatusImportFile
	}
	if !IsNil(o.EmailStatusImportRecords) {
		toSerialize["email.status.importRecords"] = o.EmailStatusImportRecords
	}
	if !IsNil(o.EmailStatusImportTitle) {
		toSerialize["email.status.importTitle"] = o.EmailStatusImportTitle
	}
	if !IsNil(o.EmailStatusStatus) {
		toSerialize["email.status.status"] = o.EmailStatusStatus
	}
	if !IsNil(o.EmailUnsub) {
		toSerialize["email.unsub"] = o.EmailUnsub
	}
	if !IsNil(o.EmailUnsubHelp) {
		toSerialize["email.unsubHelp"] = o.EmailUnsubHelp
	}
	if !IsNil(o.EmailViewInBrowser) {
		toSerialize["email.viewInBrowser"] = o.EmailViewInBrowser
	}
	if !IsNil(o.FormsFormHTML) {
		toSerialize["forms.formHTML"] = o.FormsFormHTML
	}
	if !IsNil(o.FormsFormHTMLHelp) {
		toSerialize["forms.formHTMLHelp"] = o.FormsFormHTMLHelp
	}
	if !IsNil(o.FormsNoPublicLists) {
		toSerialize["forms.noPublicLists"] = o.FormsNoPublicLists
	}
	if !IsNil(o.FormsPublicLists) {
		toSerialize["forms.publicLists"] = o.FormsPublicLists
	}
	if !IsNil(o.FormsPublicSubPage) {
		toSerialize["forms.publicSubPage"] = o.FormsPublicSubPage
	}
	if !IsNil(o.FormsSelectHelp) {
		toSerialize["forms.selectHelp"] = o.FormsSelectHelp
	}
	if !IsNil(o.FormsTitle) {
		toSerialize["forms.title"] = o.FormsTitle
	}
	if !IsNil(o.GlobalsButtonsAdd) {
		toSerialize["globals.buttons.add"] = o.GlobalsButtonsAdd
	}
	if !IsNil(o.GlobalsButtonsAddNew) {
		toSerialize["globals.buttons.addNew"] = o.GlobalsButtonsAddNew
	}
	if !IsNil(o.GlobalsButtonsBack) {
		toSerialize["globals.buttons.back"] = o.GlobalsButtonsBack
	}
	if !IsNil(o.GlobalsButtonsCancel) {
		toSerialize["globals.buttons.cancel"] = o.GlobalsButtonsCancel
	}
	if !IsNil(o.GlobalsButtonsClone) {
		toSerialize["globals.buttons.clone"] = o.GlobalsButtonsClone
	}
	if !IsNil(o.GlobalsButtonsClose) {
		toSerialize["globals.buttons.close"] = o.GlobalsButtonsClose
	}
	if !IsNil(o.GlobalsButtonsContinue) {
		toSerialize["globals.buttons.continue"] = o.GlobalsButtonsContinue
	}
	if !IsNil(o.GlobalsButtonsDelete) {
		toSerialize["globals.buttons.delete"] = o.GlobalsButtonsDelete
	}
	if !IsNil(o.GlobalsButtonsDeleteAll) {
		toSerialize["globals.buttons.deleteAll"] = o.GlobalsButtonsDeleteAll
	}
	if !IsNil(o.GlobalsButtonsEdit) {
		toSerialize["globals.buttons.edit"] = o.GlobalsButtonsEdit
	}
	if !IsNil(o.GlobalsButtonsEnabled) {
		toSerialize["globals.buttons.enabled"] = o.GlobalsButtonsEnabled
	}
	if !IsNil(o.GlobalsButtonsInsert) {
		toSerialize["globals.buttons.insert"] = o.GlobalsButtonsInsert
	}
	if !IsNil(o.GlobalsButtonsLearnMore) {
		toSerialize["globals.buttons.learnMore"] = o.GlobalsButtonsLearnMore
	}
	if !IsNil(o.GlobalsButtonsMore) {
		toSerialize["globals.buttons.more"] = o.GlobalsButtonsMore
	}
	if !IsNil(o.GlobalsButtonsNew) {
		toSerialize["globals.buttons.new"] = o.GlobalsButtonsNew
	}
	if !IsNil(o.GlobalsButtonsOk) {
		toSerialize["globals.buttons.ok"] = o.GlobalsButtonsOk
	}
	if !IsNil(o.GlobalsButtonsRemove) {
		toSerialize["globals.buttons.remove"] = o.GlobalsButtonsRemove
	}
	if !IsNil(o.GlobalsButtonsSave) {
		toSerialize["globals.buttons.save"] = o.GlobalsButtonsSave
	}
	if !IsNil(o.GlobalsButtonsSaveChanges) {
		toSerialize["globals.buttons.saveChanges"] = o.GlobalsButtonsSaveChanges
	}
	if !IsNil(o.GlobalsDays0) {
		toSerialize["globals.days.0"] = o.GlobalsDays0
	}
	if !IsNil(o.GlobalsDays1) {
		toSerialize["globals.days.1"] = o.GlobalsDays1
	}
	if !IsNil(o.GlobalsDays2) {
		toSerialize["globals.days.2"] = o.GlobalsDays2
	}
	if !IsNil(o.GlobalsDays3) {
		toSerialize["globals.days.3"] = o.GlobalsDays3
	}
	if !IsNil(o.GlobalsDays4) {
		toSerialize["globals.days.4"] = o.GlobalsDays4
	}
	if !IsNil(o.GlobalsDays5) {
		toSerialize["globals.days.5"] = o.GlobalsDays5
	}
	if !IsNil(o.GlobalsDays6) {
		toSerialize["globals.days.6"] = o.GlobalsDays6
	}
	if !IsNil(o.GlobalsDays7) {
		toSerialize["globals.days.7"] = o.GlobalsDays7
	}
	if !IsNil(o.GlobalsFieldsCreatedAt) {
		toSerialize["globals.fields.createdAt"] = o.GlobalsFieldsCreatedAt
	}
	if !IsNil(o.GlobalsFieldsDescription) {
		toSerialize["globals.fields.description"] = o.GlobalsFieldsDescription
	}
	if !IsNil(o.GlobalsFieldsId) {
		toSerialize["globals.fields.id"] = o.GlobalsFieldsId
	}
	if !IsNil(o.GlobalsFieldsName) {
		toSerialize["globals.fields.name"] = o.GlobalsFieldsName
	}
	if !IsNil(o.GlobalsFieldsStatus) {
		toSerialize["globals.fields.status"] = o.GlobalsFieldsStatus
	}
	if !IsNil(o.GlobalsFieldsType) {
		toSerialize["globals.fields.type"] = o.GlobalsFieldsType
	}
	if !IsNil(o.GlobalsFieldsUpdatedAt) {
		toSerialize["globals.fields.updatedAt"] = o.GlobalsFieldsUpdatedAt
	}
	if !IsNil(o.GlobalsFieldsUuid) {
		toSerialize["globals.fields.uuid"] = o.GlobalsFieldsUuid
	}
	if !IsNil(o.GlobalsMessagesConfirm) {
		toSerialize["globals.messages.confirm"] = o.GlobalsMessagesConfirm
	}
	if !IsNil(o.GlobalsMessagesConfirmDiscard) {
		toSerialize["globals.messages.confirmDiscard"] = o.GlobalsMessagesConfirmDiscard
	}
	if !IsNil(o.GlobalsMessagesCreated) {
		toSerialize["globals.messages.created"] = o.GlobalsMessagesCreated
	}
	if !IsNil(o.GlobalsMessagesDeleted) {
		toSerialize["globals.messages.deleted"] = o.GlobalsMessagesDeleted
	}
	if !IsNil(o.GlobalsMessagesDeletedCount) {
		toSerialize["globals.messages.deletedCount"] = o.GlobalsMessagesDeletedCount
	}
	if !IsNil(o.GlobalsMessagesDone) {
		toSerialize["globals.messages.done"] = o.GlobalsMessagesDone
	}
	if !IsNil(o.GlobalsMessagesEmptyState) {
		toSerialize["globals.messages.emptyState"] = o.GlobalsMessagesEmptyState
	}
	if !IsNil(o.GlobalsMessagesErrorCreating) {
		toSerialize["globals.messages.errorCreating"] = o.GlobalsMessagesErrorCreating
	}
	if !IsNil(o.GlobalsMessagesErrorDeleting) {
		toSerialize["globals.messages.errorDeleting"] = o.GlobalsMessagesErrorDeleting
	}
	if !IsNil(o.GlobalsMessagesErrorFetching) {
		toSerialize["globals.messages.errorFetching"] = o.GlobalsMessagesErrorFetching
	}
	if !IsNil(o.GlobalsMessagesErrorInvalidIDs) {
		toSerialize["globals.messages.errorInvalidIDs"] = o.GlobalsMessagesErrorInvalidIDs
	}
	if !IsNil(o.GlobalsMessagesErrorUUID) {
		toSerialize["globals.messages.errorUUID"] = o.GlobalsMessagesErrorUUID
	}
	if !IsNil(o.GlobalsMessagesErrorUpdating) {
		toSerialize["globals.messages.errorUpdating"] = o.GlobalsMessagesErrorUpdating
	}
	if !IsNil(o.GlobalsMessagesInternalError) {
		toSerialize["globals.messages.internalError"] = o.GlobalsMessagesInternalError
	}
	if !IsNil(o.GlobalsMessagesInvalidData) {
		toSerialize["globals.messages.invalidData"] = o.GlobalsMessagesInvalidData
	}
	if !IsNil(o.GlobalsMessagesInvalidID) {
		toSerialize["globals.messages.invalidID"] = o.GlobalsMessagesInvalidID
	}
	if !IsNil(o.GlobalsMessagesInvalidUUID) {
		toSerialize["globals.messages.invalidUUID"] = o.GlobalsMessagesInvalidUUID
	}
	if !IsNil(o.GlobalsMessagesMissingFields) {
		toSerialize["globals.messages.missingFields"] = o.GlobalsMessagesMissingFields
	}
	if !IsNil(o.GlobalsMessagesNotFound) {
		toSerialize["globals.messages.notFound"] = o.GlobalsMessagesNotFound
	}
	if !IsNil(o.GlobalsMessagesPasswordChange) {
		toSerialize["globals.messages.passwordChange"] = o.GlobalsMessagesPasswordChange
	}
	if !IsNil(o.GlobalsMessagesUpdated) {
		toSerialize["globals.messages.updated"] = o.GlobalsMessagesUpdated
	}
	if !IsNil(o.GlobalsMonths1) {
		toSerialize["globals.months.1"] = o.GlobalsMonths1
	}
	if !IsNil(o.GlobalsMonths10) {
		toSerialize["globals.months.10"] = o.GlobalsMonths10
	}
	if !IsNil(o.GlobalsMonths11) {
		toSerialize["globals.months.11"] = o.GlobalsMonths11
	}
	if !IsNil(o.GlobalsMonths12) {
		toSerialize["globals.months.12"] = o.GlobalsMonths12
	}
	if !IsNil(o.GlobalsMonths2) {
		toSerialize["globals.months.2"] = o.GlobalsMonths2
	}
	if !IsNil(o.GlobalsMonths3) {
		toSerialize["globals.months.3"] = o.GlobalsMonths3
	}
	if !IsNil(o.GlobalsMonths4) {
		toSerialize["globals.months.4"] = o.GlobalsMonths4
	}
	if !IsNil(o.GlobalsMonths5) {
		toSerialize["globals.months.5"] = o.GlobalsMonths5
	}
	if !IsNil(o.GlobalsMonths6) {
		toSerialize["globals.months.6"] = o.GlobalsMonths6
	}
	if !IsNil(o.GlobalsMonths7) {
		toSerialize["globals.months.7"] = o.GlobalsMonths7
	}
	if !IsNil(o.GlobalsMonths8) {
		toSerialize["globals.months.8"] = o.GlobalsMonths8
	}
	if !IsNil(o.GlobalsMonths9) {
		toSerialize["globals.months.9"] = o.GlobalsMonths9
	}
	if !IsNil(o.GlobalsStatesOff) {
		toSerialize["globals.states.off"] = o.GlobalsStatesOff
	}
	if !IsNil(o.GlobalsTermsAll) {
		toSerialize["globals.terms.all"] = o.GlobalsTermsAll
	}
	if !IsNil(o.GlobalsTermsAnalytics) {
		toSerialize["globals.terms.analytics"] = o.GlobalsTermsAnalytics
	}
	if !IsNil(o.GlobalsTermsBounce) {
		toSerialize["globals.terms.bounce"] = o.GlobalsTermsBounce
	}
	if !IsNil(o.GlobalsTermsBounces) {
		toSerialize["globals.terms.bounces"] = o.GlobalsTermsBounces
	}
	if !IsNil(o.GlobalsTermsCampaign) {
		toSerialize["globals.terms.campaign"] = o.GlobalsTermsCampaign
	}
	if !IsNil(o.GlobalsTermsCampaigns) {
		toSerialize["globals.terms.campaigns"] = o.GlobalsTermsCampaigns
	}
	if !IsNil(o.GlobalsTermsDashboard) {
		toSerialize["globals.terms.dashboard"] = o.GlobalsTermsDashboard
	}
	if !IsNil(o.GlobalsTermsDay) {
		toSerialize["globals.terms.day"] = o.GlobalsTermsDay
	}
	if !IsNil(o.GlobalsTermsHour) {
		toSerialize["globals.terms.hour"] = o.GlobalsTermsHour
	}
	if !IsNil(o.GlobalsTermsList) {
		toSerialize["globals.terms.list"] = o.GlobalsTermsList
	}
	if !IsNil(o.GlobalsTermsLists) {
		toSerialize["globals.terms.lists"] = o.GlobalsTermsLists
	}
	if !IsNil(o.GlobalsTermsMedia) {
		toSerialize["globals.terms.media"] = o.GlobalsTermsMedia
	}
	if !IsNil(o.GlobalsTermsMessenger) {
		toSerialize["globals.terms.messenger"] = o.GlobalsTermsMessenger
	}
	if !IsNil(o.GlobalsTermsMessengers) {
		toSerialize["globals.terms.messengers"] = o.GlobalsTermsMessengers
	}
	if !IsNil(o.GlobalsTermsMinute) {
		toSerialize["globals.terms.minute"] = o.GlobalsTermsMinute
	}
	if !IsNil(o.GlobalsTermsMonth) {
		toSerialize["globals.terms.month"] = o.GlobalsTermsMonth
	}
	if !IsNil(o.GlobalsTermsSecond) {
		toSerialize["globals.terms.second"] = o.GlobalsTermsSecond
	}
	if !IsNil(o.GlobalsTermsSettings) {
		toSerialize["globals.terms.settings"] = o.GlobalsTermsSettings
	}
	if !IsNil(o.GlobalsTermsSubscriber) {
		toSerialize["globals.terms.subscriber"] = o.GlobalsTermsSubscriber
	}
	if !IsNil(o.GlobalsTermsSubscribers) {
		toSerialize["globals.terms.subscribers"] = o.GlobalsTermsSubscribers
	}
	if !IsNil(o.GlobalsTermsSubscriptions) {
		toSerialize["globals.terms.subscriptions"] = o.GlobalsTermsSubscriptions
	}
	if !IsNil(o.GlobalsTermsTag) {
		toSerialize["globals.terms.tag"] = o.GlobalsTermsTag
	}
	if !IsNil(o.GlobalsTermsTags) {
		toSerialize["globals.terms.tags"] = o.GlobalsTermsTags
	}
	if !IsNil(o.GlobalsTermsTemplate) {
		toSerialize["globals.terms.template"] = o.GlobalsTermsTemplate
	}
	if !IsNil(o.GlobalsTermsTemplates) {
		toSerialize["globals.terms.templates"] = o.GlobalsTermsTemplates
	}
	if !IsNil(o.GlobalsTermsTx) {
		toSerialize["globals.terms.tx"] = o.GlobalsTermsTx
	}
	if !IsNil(o.GlobalsTermsYear) {
		toSerialize["globals.terms.year"] = o.GlobalsTermsYear
	}
	if !IsNil(o.ImportAlreadyRunning) {
		toSerialize["import.alreadyRunning"] = o.ImportAlreadyRunning
	}
	if !IsNil(o.ImportBlocklist) {
		toSerialize["import.blocklist"] = o.ImportBlocklist
	}
	if !IsNil(o.ImportCsvDelim) {
		toSerialize["import.csvDelim"] = o.ImportCsvDelim
	}
	if !IsNil(o.ImportCsvDelimHelp) {
		toSerialize["import.csvDelimHelp"] = o.ImportCsvDelimHelp
	}
	if !IsNil(o.ImportCsvExample) {
		toSerialize["import.csvExample"] = o.ImportCsvExample
	}
	if !IsNil(o.ImportCsvFile) {
		toSerialize["import.csvFile"] = o.ImportCsvFile
	}
	if !IsNil(o.ImportCsvFileHelp) {
		toSerialize["import.csvFileHelp"] = o.ImportCsvFileHelp
	}
	if !IsNil(o.ImportErrorCopyingFile) {
		toSerialize["import.errorCopyingFile"] = o.ImportErrorCopyingFile
	}
	if !IsNil(o.ImportErrorProcessingZIP) {
		toSerialize["import.errorProcessingZIP"] = o.ImportErrorProcessingZIP
	}
	if !IsNil(o.ImportErrorStarting) {
		toSerialize["import.errorStarting"] = o.ImportErrorStarting
	}
	if !IsNil(o.ImportImportDone) {
		toSerialize["import.importDone"] = o.ImportImportDone
	}
	if !IsNil(o.ImportImportStarted) {
		toSerialize["import.importStarted"] = o.ImportImportStarted
	}
	if !IsNil(o.ImportInstructions) {
		toSerialize["import.instructions"] = o.ImportInstructions
	}
	if !IsNil(o.ImportInstructionsHelp) {
		toSerialize["import.instructionsHelp"] = o.ImportInstructionsHelp
	}
	if !IsNil(o.ImportInvalidDelim) {
		toSerialize["import.invalidDelim"] = o.ImportInvalidDelim
	}
	if !IsNil(o.ImportInvalidFile) {
		toSerialize["import.invalidFile"] = o.ImportInvalidFile
	}
	if !IsNil(o.ImportInvalidMode) {
		toSerialize["import.invalidMode"] = o.ImportInvalidMode
	}
	if !IsNil(o.ImportInvalidParams) {
		toSerialize["import.invalidParams"] = o.ImportInvalidParams
	}
	if !IsNil(o.ImportInvalidSubStatus) {
		toSerialize["import.invalidSubStatus"] = o.ImportInvalidSubStatus
	}
	if !IsNil(o.ImportListSubHelp) {
		toSerialize["import.listSubHelp"] = o.ImportListSubHelp
	}
	if !IsNil(o.ImportMode) {
		toSerialize["import.mode"] = o.ImportMode
	}
	if !IsNil(o.ImportOverwrite) {
		toSerialize["import.overwrite"] = o.ImportOverwrite
	}
	if !IsNil(o.ImportOverwriteHelp) {
		toSerialize["import.overwriteHelp"] = o.ImportOverwriteHelp
	}
	if !IsNil(o.ImportRecordsCount) {
		toSerialize["import.recordsCount"] = o.ImportRecordsCount
	}
	if !IsNil(o.ImportStopImport) {
		toSerialize["import.stopImport"] = o.ImportStopImport
	}
	if !IsNil(o.ImportSubscribe) {
		toSerialize["import.subscribe"] = o.ImportSubscribe
	}
	if !IsNil(o.ImportTitle) {
		toSerialize["import.title"] = o.ImportTitle
	}
	if !IsNil(o.ImportUpload) {
		toSerialize["import.upload"] = o.ImportUpload
	}
	if !IsNil(o.ListsConfirmDelete) {
		toSerialize["lists.confirmDelete"] = o.ListsConfirmDelete
	}
	if !IsNil(o.ListsConfirmSub) {
		toSerialize["lists.confirmSub"] = o.ListsConfirmSub
	}
	if !IsNil(o.ListsInvalidName) {
		toSerialize["lists.invalidName"] = o.ListsInvalidName
	}
	if !IsNil(o.ListsNewList) {
		toSerialize["lists.newList"] = o.ListsNewList
	}
	if !IsNil(o.ListsOptin) {
		toSerialize["lists.optin"] = o.ListsOptin
	}
	if !IsNil(o.ListsOptinHelp) {
		toSerialize["lists.optinHelp"] = o.ListsOptinHelp
	}
	if !IsNil(o.ListsOptinTo) {
		toSerialize["lists.optinTo"] = o.ListsOptinTo
	}
	if !IsNil(o.ListsOptinsDouble) {
		toSerialize["lists.optins.double"] = o.ListsOptinsDouble
	}
	if !IsNil(o.ListsOptinsSingle) {
		toSerialize["lists.optins.single"] = o.ListsOptinsSingle
	}
	if !IsNil(o.ListsSendCampaign) {
		toSerialize["lists.sendCampaign"] = o.ListsSendCampaign
	}
	if !IsNil(o.ListsSendOptinCampaign) {
		toSerialize["lists.sendOptinCampaign"] = o.ListsSendOptinCampaign
	}
	if !IsNil(o.ListsType) {
		toSerialize["lists.type"] = o.ListsType
	}
	if !IsNil(o.ListsTypeHelp) {
		toSerialize["lists.typeHelp"] = o.ListsTypeHelp
	}
	if !IsNil(o.ListsTypesPrivate) {
		toSerialize["lists.types.private"] = o.ListsTypesPrivate
	}
	if !IsNil(o.ListsTypesPublic) {
		toSerialize["lists.types.public"] = o.ListsTypesPublic
	}
	if !IsNil(o.LogsTitle) {
		toSerialize["logs.title"] = o.LogsTitle
	}
	if !IsNil(o.MaintenanceHelp) {
		toSerialize["maintenance.help"] = o.MaintenanceHelp
	}
	if !IsNil(o.MaintenanceMaintenanceUnconfirmedOptins) {
		toSerialize["maintenance.maintenance.unconfirmedOptins"] = o.MaintenanceMaintenanceUnconfirmedOptins
	}
	if !IsNil(o.MaintenanceOlderThan) {
		toSerialize["maintenance.olderThan"] = o.MaintenanceOlderThan
	}
	if !IsNil(o.MaintenanceTitle) {
		toSerialize["maintenance.title"] = o.MaintenanceTitle
	}
	if !IsNil(o.MaintenanceUnconfirmedSubs) {
		toSerialize["maintenance.unconfirmedSubs"] = o.MaintenanceUnconfirmedSubs
	}
	if !IsNil(o.MediaErrorReadingFile) {
		toSerialize["media.errorReadingFile"] = o.MediaErrorReadingFile
	}
	if !IsNil(o.MediaErrorResizing) {
		toSerialize["media.errorResizing"] = o.MediaErrorResizing
	}
	if !IsNil(o.MediaErrorSavingThumbnail) {
		toSerialize["media.errorSavingThumbnail"] = o.MediaErrorSavingThumbnail
	}
	if !IsNil(o.MediaErrorUploading) {
		toSerialize["media.errorUploading"] = o.MediaErrorUploading
	}
	if !IsNil(o.MediaInvalidFile) {
		toSerialize["media.invalidFile"] = o.MediaInvalidFile
	}
	if !IsNil(o.MediaTitle) {
		toSerialize["media.title"] = o.MediaTitle
	}
	if !IsNil(o.MediaUnsupportedFileType) {
		toSerialize["media.unsupportedFileType"] = o.MediaUnsupportedFileType
	}
	if !IsNil(o.MediaUpload) {
		toSerialize["media.upload"] = o.MediaUpload
	}
	if !IsNil(o.MediaUploadHelp) {
		toSerialize["media.uploadHelp"] = o.MediaUploadHelp
	}
	if !IsNil(o.MediaUploadImage) {
		toSerialize["media.uploadImage"] = o.MediaUploadImage
	}
	if !IsNil(o.MenuAllCampaigns) {
		toSerialize["menu.allCampaigns"] = o.MenuAllCampaigns
	}
	if !IsNil(o.MenuAllLists) {
		toSerialize["menu.allLists"] = o.MenuAllLists
	}
	if !IsNil(o.MenuAllSubscribers) {
		toSerialize["menu.allSubscribers"] = o.MenuAllSubscribers
	}
	if !IsNil(o.MenuDashboard) {
		toSerialize["menu.dashboard"] = o.MenuDashboard
	}
	if !IsNil(o.MenuForms) {
		toSerialize["menu.forms"] = o.MenuForms
	}
	if !IsNil(o.MenuImport) {
		toSerialize["menu.import"] = o.MenuImport
	}
	if !IsNil(o.MenuLogs) {
		toSerialize["menu.logs"] = o.MenuLogs
	}
	if !IsNil(o.MenuMaintenance) {
		toSerialize["menu.maintenance"] = o.MenuMaintenance
	}
	if !IsNil(o.MenuMedia) {
		toSerialize["menu.media"] = o.MenuMedia
	}
	if !IsNil(o.MenuNewCampaign) {
		toSerialize["menu.newCampaign"] = o.MenuNewCampaign
	}
	if !IsNil(o.MenuSettings) {
		toSerialize["menu.settings"] = o.MenuSettings
	}
	if !IsNil(o.PublicArchiveEmpty) {
		toSerialize["public.archiveEmpty"] = o.PublicArchiveEmpty
	}
	if !IsNil(o.PublicArchiveTitle) {
		toSerialize["public.archiveTitle"] = o.PublicArchiveTitle
	}
	if !IsNil(o.PublicBlocklisted) {
		toSerialize["public.blocklisted"] = o.PublicBlocklisted
	}
	if !IsNil(o.PublicCampaignNotFound) {
		toSerialize["public.campaignNotFound"] = o.PublicCampaignNotFound
	}
	if !IsNil(o.PublicConfirmOptinSubTitle) {
		toSerialize["public.confirmOptinSubTitle"] = o.PublicConfirmOptinSubTitle
	}
	if !IsNil(o.PublicConfirmSub) {
		toSerialize["public.confirmSub"] = o.PublicConfirmSub
	}
	if !IsNil(o.PublicConfirmSubInfo) {
		toSerialize["public.confirmSubInfo"] = o.PublicConfirmSubInfo
	}
	if !IsNil(o.PublicConfirmSubTitle) {
		toSerialize["public.confirmSubTitle"] = o.PublicConfirmSubTitle
	}
	if !IsNil(o.PublicDataRemoved) {
		toSerialize["public.dataRemoved"] = o.PublicDataRemoved
	}
	if !IsNil(o.PublicDataRemovedTitle) {
		toSerialize["public.dataRemovedTitle"] = o.PublicDataRemovedTitle
	}
	if !IsNil(o.PublicDataSent) {
		toSerialize["public.dataSent"] = o.PublicDataSent
	}
	if !IsNil(o.PublicDataSentTitle) {
		toSerialize["public.dataSentTitle"] = o.PublicDataSentTitle
	}
	if !IsNil(o.PublicErrorFetchingCampaign) {
		toSerialize["public.errorFetchingCampaign"] = o.PublicErrorFetchingCampaign
	}
	if !IsNil(o.PublicErrorFetchingEmail) {
		toSerialize["public.errorFetchingEmail"] = o.PublicErrorFetchingEmail
	}
	if !IsNil(o.PublicErrorFetchingLists) {
		toSerialize["public.errorFetchingLists"] = o.PublicErrorFetchingLists
	}
	if !IsNil(o.PublicErrorProcessingRequest) {
		toSerialize["public.errorProcessingRequest"] = o.PublicErrorProcessingRequest
	}
	if !IsNil(o.PublicErrorTitle) {
		toSerialize["public.errorTitle"] = o.PublicErrorTitle
	}
	if !IsNil(o.PublicInvalidFeature) {
		toSerialize["public.invalidFeature"] = o.PublicInvalidFeature
	}
	if !IsNil(o.PublicInvalidLink) {
		toSerialize["public.invalidLink"] = o.PublicInvalidLink
	}
	if !IsNil(o.PublicManagePrefs) {
		toSerialize["public.managePrefs"] = o.PublicManagePrefs
	}
	if !IsNil(o.PublicManagePrefsUnsub) {
		toSerialize["public.managePrefsUnsub"] = o.PublicManagePrefsUnsub
	}
	if !IsNil(o.PublicNoListsAvailable) {
		toSerialize["public.noListsAvailable"] = o.PublicNoListsAvailable
	}
	if !IsNil(o.PublicNoListsSelected) {
		toSerialize["public.noListsSelected"] = o.PublicNoListsSelected
	}
	if !IsNil(o.PublicNoSubInfo) {
		toSerialize["public.noSubInfo"] = o.PublicNoSubInfo
	}
	if !IsNil(o.PublicNoSubTitle) {
		toSerialize["public.noSubTitle"] = o.PublicNoSubTitle
	}
	if !IsNil(o.PublicNotFoundTitle) {
		toSerialize["public.notFoundTitle"] = o.PublicNotFoundTitle
	}
	if !IsNil(o.PublicPrefsSaved) {
		toSerialize["public.prefsSaved"] = o.PublicPrefsSaved
	}
	if !IsNil(o.PublicPrivacyConfirmWipe) {
		toSerialize["public.privacyConfirmWipe"] = o.PublicPrivacyConfirmWipe
	}
	if !IsNil(o.PublicPrivacyExport) {
		toSerialize["public.privacyExport"] = o.PublicPrivacyExport
	}
	if !IsNil(o.PublicPrivacyExportHelp) {
		toSerialize["public.privacyExportHelp"] = o.PublicPrivacyExportHelp
	}
	if !IsNil(o.PublicPrivacyTitle) {
		toSerialize["public.privacyTitle"] = o.PublicPrivacyTitle
	}
	if !IsNil(o.PublicPrivacyWipe) {
		toSerialize["public.privacyWipe"] = o.PublicPrivacyWipe
	}
	if !IsNil(o.PublicPrivacyWipeHelp) {
		toSerialize["public.privacyWipeHelp"] = o.PublicPrivacyWipeHelp
	}
	if !IsNil(o.PublicSub) {
		toSerialize["public.sub"] = o.PublicSub
	}
	if !IsNil(o.PublicSubConfirmed) {
		toSerialize["public.subConfirmed"] = o.PublicSubConfirmed
	}
	if !IsNil(o.PublicSubConfirmedTitle) {
		toSerialize["public.subConfirmedTitle"] = o.PublicSubConfirmedTitle
	}
	if !IsNil(o.PublicSubName) {
		toSerialize["public.subName"] = o.PublicSubName
	}
	if !IsNil(o.PublicSubNotFound) {
		toSerialize["public.subNotFound"] = o.PublicSubNotFound
	}
	if !IsNil(o.PublicSubOptinPending) {
		toSerialize["public.subOptinPending"] = o.PublicSubOptinPending
	}
	if !IsNil(o.PublicSubPrivateList) {
		toSerialize["public.subPrivateList"] = o.PublicSubPrivateList
	}
	if !IsNil(o.PublicSubTitle) {
		toSerialize["public.subTitle"] = o.PublicSubTitle
	}
	if !IsNil(o.PublicUnsub) {
		toSerialize["public.unsub"] = o.PublicUnsub
	}
	if !IsNil(o.PublicUnsubFull) {
		toSerialize["public.unsubFull"] = o.PublicUnsubFull
	}
	if !IsNil(o.PublicUnsubHelp) {
		toSerialize["public.unsubHelp"] = o.PublicUnsubHelp
	}
	if !IsNil(o.PublicUnsubTitle) {
		toSerialize["public.unsubTitle"] = o.PublicUnsubTitle
	}
	if !IsNil(o.PublicUnsubbedInfo) {
		toSerialize["public.unsubbedInfo"] = o.PublicUnsubbedInfo
	}
	if !IsNil(o.PublicUnsubbedTitle) {
		toSerialize["public.unsubbedTitle"] = o.PublicUnsubbedTitle
	}
	if !IsNil(o.PublicUnsubscribeTitle) {
		toSerialize["public.unsubscribeTitle"] = o.PublicUnsubscribeTitle
	}
	if !IsNil(o.SettingsAppearanceAdminHelp) {
		toSerialize["settings.appearance.adminHelp"] = o.SettingsAppearanceAdminHelp
	}
	if !IsNil(o.SettingsAppearanceAdminName) {
		toSerialize["settings.appearance.adminName"] = o.SettingsAppearanceAdminName
	}
	if !IsNil(o.SettingsAppearanceCustomCSS) {
		toSerialize["settings.appearance.customCSS"] = o.SettingsAppearanceCustomCSS
	}
	if !IsNil(o.SettingsAppearanceCustomJS) {
		toSerialize["settings.appearance.customJS"] = o.SettingsAppearanceCustomJS
	}
	if !IsNil(o.SettingsAppearanceName) {
		toSerialize["settings.appearance.name"] = o.SettingsAppearanceName
	}
	if !IsNil(o.SettingsAppearancePublicHelp) {
		toSerialize["settings.appearance.publicHelp"] = o.SettingsAppearancePublicHelp
	}
	if !IsNil(o.SettingsAppearancePublicName) {
		toSerialize["settings.appearance.publicName"] = o.SettingsAppearancePublicName
	}
	if !IsNil(o.SettingsBouncesAction) {
		toSerialize["settings.bounces.action"] = o.SettingsBouncesAction
	}
	if !IsNil(o.SettingsBouncesBlocklist) {
		toSerialize["settings.bounces.blocklist"] = o.SettingsBouncesBlocklist
	}
	if !IsNil(o.SettingsBouncesCount) {
		toSerialize["settings.bounces.count"] = o.SettingsBouncesCount
	}
	if !IsNil(o.SettingsBouncesCountHelp) {
		toSerialize["settings.bounces.countHelp"] = o.SettingsBouncesCountHelp
	}
	if !IsNil(o.SettingsBouncesDelete) {
		toSerialize["settings.bounces.delete"] = o.SettingsBouncesDelete
	}
	if !IsNil(o.SettingsBouncesEnable) {
		toSerialize["settings.bounces.enable"] = o.SettingsBouncesEnable
	}
	if !IsNil(o.SettingsBouncesEnableMailbox) {
		toSerialize["settings.bounces.enableMailbox"] = o.SettingsBouncesEnableMailbox
	}
	if !IsNil(o.SettingsBouncesEnableSES) {
		toSerialize["settings.bounces.enableSES"] = o.SettingsBouncesEnableSES
	}
	if !IsNil(o.SettingsBouncesEnableSendgrid) {
		toSerialize["settings.bounces.enableSendgrid"] = o.SettingsBouncesEnableSendgrid
	}
	if !IsNil(o.SettingsBouncesEnableWebhooks) {
		toSerialize["settings.bounces.enableWebhooks"] = o.SettingsBouncesEnableWebhooks
	}
	if !IsNil(o.SettingsBouncesEnabled) {
		toSerialize["settings.bounces.enabled"] = o.SettingsBouncesEnabled
	}
	if !IsNil(o.SettingsBouncesFolder) {
		toSerialize["settings.bounces.folder"] = o.SettingsBouncesFolder
	}
	if !IsNil(o.SettingsBouncesFolderHelp) {
		toSerialize["settings.bounces.folderHelp"] = o.SettingsBouncesFolderHelp
	}
	if !IsNil(o.SettingsBouncesInvalidScanInterval) {
		toSerialize["settings.bounces.invalidScanInterval"] = o.SettingsBouncesInvalidScanInterval
	}
	if !IsNil(o.SettingsBouncesName) {
		toSerialize["settings.bounces.name"] = o.SettingsBouncesName
	}
	if !IsNil(o.SettingsBouncesScanInterval) {
		toSerialize["settings.bounces.scanInterval"] = o.SettingsBouncesScanInterval
	}
	if !IsNil(o.SettingsBouncesScanIntervalHelp) {
		toSerialize["settings.bounces.scanIntervalHelp"] = o.SettingsBouncesScanIntervalHelp
	}
	if !IsNil(o.SettingsBouncesSendgridKey) {
		toSerialize["settings.bounces.sendgridKey"] = o.SettingsBouncesSendgridKey
	}
	if !IsNil(o.SettingsBouncesType) {
		toSerialize["settings.bounces.type"] = o.SettingsBouncesType
	}
	if !IsNil(o.SettingsBouncesUsername) {
		toSerialize["settings.bounces.username"] = o.SettingsBouncesUsername
	}
	if !IsNil(o.SettingsConfirmRestart) {
		toSerialize["settings.confirmRestart"] = o.SettingsConfirmRestart
	}
	if !IsNil(o.SettingsDuplicateMessengerName) {
		toSerialize["settings.duplicateMessengerName"] = o.SettingsDuplicateMessengerName
	}
	if !IsNil(o.SettingsErrorEncoding) {
		toSerialize["settings.errorEncoding"] = o.SettingsErrorEncoding
	}
	if !IsNil(o.SettingsErrorNoSMTP) {
		toSerialize["settings.errorNoSMTP"] = o.SettingsErrorNoSMTP
	}
	if !IsNil(o.SettingsGeneralAdminNotifEmails) {
		toSerialize["settings.general.adminNotifEmails"] = o.SettingsGeneralAdminNotifEmails
	}
	if !IsNil(o.SettingsGeneralAdminNotifEmailsHelp) {
		toSerialize["settings.general.adminNotifEmailsHelp"] = o.SettingsGeneralAdminNotifEmailsHelp
	}
	if !IsNil(o.SettingsGeneralCheckUpdates) {
		toSerialize["settings.general.checkUpdates"] = o.SettingsGeneralCheckUpdates
	}
	if !IsNil(o.SettingsGeneralCheckUpdatesHelp) {
		toSerialize["settings.general.checkUpdatesHelp"] = o.SettingsGeneralCheckUpdatesHelp
	}
	if !IsNil(o.SettingsGeneralEnablePublicArchive) {
		toSerialize["settings.general.enablePublicArchive"] = o.SettingsGeneralEnablePublicArchive
	}
	if !IsNil(o.SettingsGeneralEnablePublicArchiveHelp) {
		toSerialize["settings.general.enablePublicArchiveHelp"] = o.SettingsGeneralEnablePublicArchiveHelp
	}
	if !IsNil(o.SettingsGeneralEnablePublicSubPage) {
		toSerialize["settings.general.enablePublicSubPage"] = o.SettingsGeneralEnablePublicSubPage
	}
	if !IsNil(o.SettingsGeneralEnablePublicSubPageHelp) {
		toSerialize["settings.general.enablePublicSubPageHelp"] = o.SettingsGeneralEnablePublicSubPageHelp
	}
	if !IsNil(o.SettingsGeneralFaviconURL) {
		toSerialize["settings.general.faviconURL"] = o.SettingsGeneralFaviconURL
	}
	if !IsNil(o.SettingsGeneralFaviconURLHelp) {
		toSerialize["settings.general.faviconURLHelp"] = o.SettingsGeneralFaviconURLHelp
	}
	if !IsNil(o.SettingsGeneralFromEmail) {
		toSerialize["settings.general.fromEmail"] = o.SettingsGeneralFromEmail
	}
	if !IsNil(o.SettingsGeneralFromEmailHelp) {
		toSerialize["settings.general.fromEmailHelp"] = o.SettingsGeneralFromEmailHelp
	}
	if !IsNil(o.SettingsGeneralLanguage) {
		toSerialize["settings.general.language"] = o.SettingsGeneralLanguage
	}
	if !IsNil(o.SettingsGeneralLogoURL) {
		toSerialize["settings.general.logoURL"] = o.SettingsGeneralLogoURL
	}
	if !IsNil(o.SettingsGeneralLogoURLHelp) {
		toSerialize["settings.general.logoURLHelp"] = o.SettingsGeneralLogoURLHelp
	}
	if !IsNil(o.SettingsGeneralName) {
		toSerialize["settings.general.name"] = o.SettingsGeneralName
	}
	if !IsNil(o.SettingsGeneralRootURL) {
		toSerialize["settings.general.rootURL"] = o.SettingsGeneralRootURL
	}
	if !IsNil(o.SettingsGeneralRootURLHelp) {
		toSerialize["settings.general.rootURLHelp"] = o.SettingsGeneralRootURLHelp
	}
	if !IsNil(o.SettingsGeneralSendOptinConfirm) {
		toSerialize["settings.general.sendOptinConfirm"] = o.SettingsGeneralSendOptinConfirm
	}
	if !IsNil(o.SettingsGeneralSendOptinConfirmHelp) {
		toSerialize["settings.general.sendOptinConfirmHelp"] = o.SettingsGeneralSendOptinConfirmHelp
	}
	if !IsNil(o.SettingsGeneralSiteName) {
		toSerialize["settings.general.siteName"] = o.SettingsGeneralSiteName
	}
	if !IsNil(o.SettingsInvalidMessengerName) {
		toSerialize["settings.invalidMessengerName"] = o.SettingsInvalidMessengerName
	}
	if !IsNil(o.SettingsMailserverAuthProtocol) {
		toSerialize["settings.mailserver.authProtocol"] = o.SettingsMailserverAuthProtocol
	}
	if !IsNil(o.SettingsMailserverHost) {
		toSerialize["settings.mailserver.host"] = o.SettingsMailserverHost
	}
	if !IsNil(o.SettingsMailserverHostHelp) {
		toSerialize["settings.mailserver.hostHelp"] = o.SettingsMailserverHostHelp
	}
	if !IsNil(o.SettingsMailserverIdleTimeout) {
		toSerialize["settings.mailserver.idleTimeout"] = o.SettingsMailserverIdleTimeout
	}
	if !IsNil(o.SettingsMailserverIdleTimeoutHelp) {
		toSerialize["settings.mailserver.idleTimeoutHelp"] = o.SettingsMailserverIdleTimeoutHelp
	}
	if !IsNil(o.SettingsMailserverMaxConns) {
		toSerialize["settings.mailserver.maxConns"] = o.SettingsMailserverMaxConns
	}
	if !IsNil(o.SettingsMailserverMaxConnsHelp) {
		toSerialize["settings.mailserver.maxConnsHelp"] = o.SettingsMailserverMaxConnsHelp
	}
	if !IsNil(o.SettingsMailserverPassword) {
		toSerialize["settings.mailserver.password"] = o.SettingsMailserverPassword
	}
	if !IsNil(o.SettingsMailserverPasswordHelp) {
		toSerialize["settings.mailserver.passwordHelp"] = o.SettingsMailserverPasswordHelp
	}
	if !IsNil(o.SettingsMailserverPort) {
		toSerialize["settings.mailserver.port"] = o.SettingsMailserverPort
	}
	if !IsNil(o.SettingsMailserverPortHelp) {
		toSerialize["settings.mailserver.portHelp"] = o.SettingsMailserverPortHelp
	}
	if !IsNil(o.SettingsMailserverSkipTLS) {
		toSerialize["settings.mailserver.skipTLS"] = o.SettingsMailserverSkipTLS
	}
	if !IsNil(o.SettingsMailserverSkipTLSHelp) {
		toSerialize["settings.mailserver.skipTLSHelp"] = o.SettingsMailserverSkipTLSHelp
	}
	if !IsNil(o.SettingsMailserverTls) {
		toSerialize["settings.mailserver.tls"] = o.SettingsMailserverTls
	}
	if !IsNil(o.SettingsMailserverTlsHelp) {
		toSerialize["settings.mailserver.tlsHelp"] = o.SettingsMailserverTlsHelp
	}
	if !IsNil(o.SettingsMailserverUsername) {
		toSerialize["settings.mailserver.username"] = o.SettingsMailserverUsername
	}
	if !IsNil(o.SettingsMailserverWaitTimeout) {
		toSerialize["settings.mailserver.waitTimeout"] = o.SettingsMailserverWaitTimeout
	}
	if !IsNil(o.SettingsMailserverWaitTimeoutHelp) {
		toSerialize["settings.mailserver.waitTimeoutHelp"] = o.SettingsMailserverWaitTimeoutHelp
	}
	if !IsNil(o.SettingsMediaProvider) {
		toSerialize["settings.media.provider"] = o.SettingsMediaProvider
	}
	if !IsNil(o.SettingsMediaS3Bucket) {
		toSerialize["settings.media.s3.bucket"] = o.SettingsMediaS3Bucket
	}
	if !IsNil(o.SettingsMediaS3BucketPath) {
		toSerialize["settings.media.s3.bucketPath"] = o.SettingsMediaS3BucketPath
	}
	if !IsNil(o.SettingsMediaS3BucketPathHelp) {
		toSerialize["settings.media.s3.bucketPathHelp"] = o.SettingsMediaS3BucketPathHelp
	}
	if !IsNil(o.SettingsMediaS3BucketType) {
		toSerialize["settings.media.s3.bucketType"] = o.SettingsMediaS3BucketType
	}
	if !IsNil(o.SettingsMediaS3BucketTypePrivate) {
		toSerialize["settings.media.s3.bucketTypePrivate"] = o.SettingsMediaS3BucketTypePrivate
	}
	if !IsNil(o.SettingsMediaS3BucketTypePublic) {
		toSerialize["settings.media.s3.bucketTypePublic"] = o.SettingsMediaS3BucketTypePublic
	}
	if !IsNil(o.SettingsMediaS3Key) {
		toSerialize["settings.media.s3.key"] = o.SettingsMediaS3Key
	}
	if !IsNil(o.SettingsMediaS3PublicURL) {
		toSerialize["settings.media.s3.publicURL"] = o.SettingsMediaS3PublicURL
	}
	if !IsNil(o.SettingsMediaS3PublicURLHelp) {
		toSerialize["settings.media.s3.publicURLHelp"] = o.SettingsMediaS3PublicURLHelp
	}
	if !IsNil(o.SettingsMediaS3Region) {
		toSerialize["settings.media.s3.region"] = o.SettingsMediaS3Region
	}
	if !IsNil(o.SettingsMediaS3Secret) {
		toSerialize["settings.media.s3.secret"] = o.SettingsMediaS3Secret
	}
	if !IsNil(o.SettingsMediaS3UploadExpiry) {
		toSerialize["settings.media.s3.uploadExpiry"] = o.SettingsMediaS3UploadExpiry
	}
	if !IsNil(o.SettingsMediaS3UploadExpiryHelp) {
		toSerialize["settings.media.s3.uploadExpiryHelp"] = o.SettingsMediaS3UploadExpiryHelp
	}
	if !IsNil(o.SettingsMediaS3Url) {
		toSerialize["settings.media.s3.url"] = o.SettingsMediaS3Url
	}
	if !IsNil(o.SettingsMediaS3UrlHelp) {
		toSerialize["settings.media.s3.urlHelp"] = o.SettingsMediaS3UrlHelp
	}
	if !IsNil(o.SettingsMediaTitle) {
		toSerialize["settings.media.title"] = o.SettingsMediaTitle
	}
	if !IsNil(o.SettingsMediaUploadPath) {
		toSerialize["settings.media.upload.path"] = o.SettingsMediaUploadPath
	}
	if !IsNil(o.SettingsMediaUploadPathHelp) {
		toSerialize["settings.media.upload.pathHelp"] = o.SettingsMediaUploadPathHelp
	}
	if !IsNil(o.SettingsMediaUploadUri) {
		toSerialize["settings.media.upload.uri"] = o.SettingsMediaUploadUri
	}
	if !IsNil(o.SettingsMediaUploadUriHelp) {
		toSerialize["settings.media.upload.uriHelp"] = o.SettingsMediaUploadUriHelp
	}
	if !IsNil(o.SettingsMessengersMaxConns) {
		toSerialize["settings.messengers.maxConns"] = o.SettingsMessengersMaxConns
	}
	if !IsNil(o.SettingsMessengersMaxConnsHelp) {
		toSerialize["settings.messengers.maxConnsHelp"] = o.SettingsMessengersMaxConnsHelp
	}
	if !IsNil(o.SettingsMessengersMessageSaved) {
		toSerialize["settings.messengers.messageSaved"] = o.SettingsMessengersMessageSaved
	}
	if !IsNil(o.SettingsMessengersName) {
		toSerialize["settings.messengers.name"] = o.SettingsMessengersName
	}
	if !IsNil(o.SettingsMessengersNameHelp) {
		toSerialize["settings.messengers.nameHelp"] = o.SettingsMessengersNameHelp
	}
	if !IsNil(o.SettingsMessengersPassword) {
		toSerialize["settings.messengers.password"] = o.SettingsMessengersPassword
	}
	if !IsNil(o.SettingsMessengersRetries) {
		toSerialize["settings.messengers.retries"] = o.SettingsMessengersRetries
	}
	if !IsNil(o.SettingsMessengersRetriesHelp) {
		toSerialize["settings.messengers.retriesHelp"] = o.SettingsMessengersRetriesHelp
	}
	if !IsNil(o.SettingsMessengersSkipTLSHelp) {
		toSerialize["settings.messengers.skipTLSHelp"] = o.SettingsMessengersSkipTLSHelp
	}
	if !IsNil(o.SettingsMessengersTimeout) {
		toSerialize["settings.messengers.timeout"] = o.SettingsMessengersTimeout
	}
	if !IsNil(o.SettingsMessengersTimeoutHelp) {
		toSerialize["settings.messengers.timeoutHelp"] = o.SettingsMessengersTimeoutHelp
	}
	if !IsNil(o.SettingsMessengersUrl) {
		toSerialize["settings.messengers.url"] = o.SettingsMessengersUrl
	}
	if !IsNil(o.SettingsMessengersUrlHelp) {
		toSerialize["settings.messengers.urlHelp"] = o.SettingsMessengersUrlHelp
	}
	if !IsNil(o.SettingsMessengersUsername) {
		toSerialize["settings.messengers.username"] = o.SettingsMessengersUsername
	}
	if !IsNil(o.SettingsNeedsRestart) {
		toSerialize["settings.needsRestart"] = o.SettingsNeedsRestart
	}
	if !IsNil(o.SettingsPerformanceBatchSize) {
		toSerialize["settings.performance.batchSize"] = o.SettingsPerformanceBatchSize
	}
	if !IsNil(o.SettingsPerformanceBatchSizeHelp) {
		toSerialize["settings.performance.batchSizeHelp"] = o.SettingsPerformanceBatchSizeHelp
	}
	if !IsNil(o.SettingsPerformanceConcurrency) {
		toSerialize["settings.performance.concurrency"] = o.SettingsPerformanceConcurrency
	}
	if !IsNil(o.SettingsPerformanceConcurrencyHelp) {
		toSerialize["settings.performance.concurrencyHelp"] = o.SettingsPerformanceConcurrencyHelp
	}
	if !IsNil(o.SettingsPerformanceMaxErrThreshold) {
		toSerialize["settings.performance.maxErrThreshold"] = o.SettingsPerformanceMaxErrThreshold
	}
	if !IsNil(o.SettingsPerformanceMaxErrThresholdHelp) {
		toSerialize["settings.performance.maxErrThresholdHelp"] = o.SettingsPerformanceMaxErrThresholdHelp
	}
	if !IsNil(o.SettingsPerformanceMessageRate) {
		toSerialize["settings.performance.messageRate"] = o.SettingsPerformanceMessageRate
	}
	if !IsNil(o.SettingsPerformanceMessageRateHelp) {
		toSerialize["settings.performance.messageRateHelp"] = o.SettingsPerformanceMessageRateHelp
	}
	if !IsNil(o.SettingsPerformanceName) {
		toSerialize["settings.performance.name"] = o.SettingsPerformanceName
	}
	if !IsNil(o.SettingsPerformanceSlidingWindow) {
		toSerialize["settings.performance.slidingWindow"] = o.SettingsPerformanceSlidingWindow
	}
	if !IsNil(o.SettingsPerformanceSlidingWindowDuration) {
		toSerialize["settings.performance.slidingWindowDuration"] = o.SettingsPerformanceSlidingWindowDuration
	}
	if !IsNil(o.SettingsPerformanceSlidingWindowDurationHelp) {
		toSerialize["settings.performance.slidingWindowDurationHelp"] = o.SettingsPerformanceSlidingWindowDurationHelp
	}
	if !IsNil(o.SettingsPerformanceSlidingWindowHelp) {
		toSerialize["settings.performance.slidingWindowHelp"] = o.SettingsPerformanceSlidingWindowHelp
	}
	if !IsNil(o.SettingsPerformanceSlidingWindowRate) {
		toSerialize["settings.performance.slidingWindowRate"] = o.SettingsPerformanceSlidingWindowRate
	}
	if !IsNil(o.SettingsPerformanceSlidingWindowRateHelp) {
		toSerialize["settings.performance.slidingWindowRateHelp"] = o.SettingsPerformanceSlidingWindowRateHelp
	}
	if !IsNil(o.SettingsPrivacyAllowBlocklist) {
		toSerialize["settings.privacy.allowBlocklist"] = o.SettingsPrivacyAllowBlocklist
	}
	if !IsNil(o.SettingsPrivacyAllowBlocklistHelp) {
		toSerialize["settings.privacy.allowBlocklistHelp"] = o.SettingsPrivacyAllowBlocklistHelp
	}
	if !IsNil(o.SettingsPrivacyAllowExport) {
		toSerialize["settings.privacy.allowExport"] = o.SettingsPrivacyAllowExport
	}
	if !IsNil(o.SettingsPrivacyAllowExportHelp) {
		toSerialize["settings.privacy.allowExportHelp"] = o.SettingsPrivacyAllowExportHelp
	}
	if !IsNil(o.SettingsPrivacyAllowPrefs) {
		toSerialize["settings.privacy.allowPrefs"] = o.SettingsPrivacyAllowPrefs
	}
	if !IsNil(o.SettingsPrivacyAllowPrefsHelp) {
		toSerialize["settings.privacy.allowPrefsHelp"] = o.SettingsPrivacyAllowPrefsHelp
	}
	if !IsNil(o.SettingsPrivacyAllowWipe) {
		toSerialize["settings.privacy.allowWipe"] = o.SettingsPrivacyAllowWipe
	}
	if !IsNil(o.SettingsPrivacyAllowWipeHelp) {
		toSerialize["settings.privacy.allowWipeHelp"] = o.SettingsPrivacyAllowWipeHelp
	}
	if !IsNil(o.SettingsPrivacyDomainBlocklist) {
		toSerialize["settings.privacy.domainBlocklist"] = o.SettingsPrivacyDomainBlocklist
	}
	if !IsNil(o.SettingsPrivacyDomainBlocklistHelp) {
		toSerialize["settings.privacy.domainBlocklistHelp"] = o.SettingsPrivacyDomainBlocklistHelp
	}
	if !IsNil(o.SettingsPrivacyIndividualSubTracking) {
		toSerialize["settings.privacy.individualSubTracking"] = o.SettingsPrivacyIndividualSubTracking
	}
	if !IsNil(o.SettingsPrivacyIndividualSubTrackingHelp) {
		toSerialize["settings.privacy.individualSubTrackingHelp"] = o.SettingsPrivacyIndividualSubTrackingHelp
	}
	if !IsNil(o.SettingsPrivacyListUnsubHeader) {
		toSerialize["settings.privacy.listUnsubHeader"] = o.SettingsPrivacyListUnsubHeader
	}
	if !IsNil(o.SettingsPrivacyListUnsubHeaderHelp) {
		toSerialize["settings.privacy.listUnsubHeaderHelp"] = o.SettingsPrivacyListUnsubHeaderHelp
	}
	if !IsNil(o.SettingsPrivacyName) {
		toSerialize["settings.privacy.name"] = o.SettingsPrivacyName
	}
	if !IsNil(o.SettingsRestart) {
		toSerialize["settings.restart"] = o.SettingsRestart
	}
	if !IsNil(o.SettingsSmtpCustomHeaders) {
		toSerialize["settings.smtp.customHeaders"] = o.SettingsSmtpCustomHeaders
	}
	if !IsNil(o.SettingsSmtpCustomHeadersHelp) {
		toSerialize["settings.smtp.customHeadersHelp"] = o.SettingsSmtpCustomHeadersHelp
	}
	if !IsNil(o.SettingsSmtpEnabled) {
		toSerialize["settings.smtp.enabled"] = o.SettingsSmtpEnabled
	}
	if !IsNil(o.SettingsSmtpHeloHost) {
		toSerialize["settings.smtp.heloHost"] = o.SettingsSmtpHeloHost
	}
	if !IsNil(o.SettingsSmtpHeloHostHelp) {
		toSerialize["settings.smtp.heloHostHelp"] = o.SettingsSmtpHeloHostHelp
	}
	if !IsNil(o.SettingsSmtpName) {
		toSerialize["settings.smtp.name"] = o.SettingsSmtpName
	}
	if !IsNil(o.SettingsSmtpRetries) {
		toSerialize["settings.smtp.retries"] = o.SettingsSmtpRetries
	}
	if !IsNil(o.SettingsSmtpRetriesHelp) {
		toSerialize["settings.smtp.retriesHelp"] = o.SettingsSmtpRetriesHelp
	}
	if !IsNil(o.SettingsSmtpSendTest) {
		toSerialize["settings.smtp.sendTest"] = o.SettingsSmtpSendTest
	}
	if !IsNil(o.SettingsSmtpSetCustomHeaders) {
		toSerialize["settings.smtp.setCustomHeaders"] = o.SettingsSmtpSetCustomHeaders
	}
	if !IsNil(o.SettingsSmtpTestConnection) {
		toSerialize["settings.smtp.testConnection"] = o.SettingsSmtpTestConnection
	}
	if !IsNil(o.SettingsSmtpTestEnterEmail) {
		toSerialize["settings.smtp.testEnterEmail"] = o.SettingsSmtpTestEnterEmail
	}
	if !IsNil(o.SettingsSmtpToEmail) {
		toSerialize["settings.smtp.toEmail"] = o.SettingsSmtpToEmail
	}
	if !IsNil(o.SettingsTitle) {
		toSerialize["settings.title"] = o.SettingsTitle
	}
	if !IsNil(o.SettingsUpdateAvailable) {
		toSerialize["settings.updateAvailable"] = o.SettingsUpdateAvailable
	}
	if !IsNil(o.SubscribersAdvancedQuery) {
		toSerialize["subscribers.advancedQuery"] = o.SubscribersAdvancedQuery
	}
	if !IsNil(o.SubscribersAdvancedQueryHelp) {
		toSerialize["subscribers.advancedQueryHelp"] = o.SubscribersAdvancedQueryHelp
	}
	if !IsNil(o.SubscribersAttribs) {
		toSerialize["subscribers.attribs"] = o.SubscribersAttribs
	}
	if !IsNil(o.SubscribersAttribsHelp) {
		toSerialize["subscribers.attribsHelp"] = o.SubscribersAttribsHelp
	}
	if !IsNil(o.SubscribersBlocklistedHelp) {
		toSerialize["subscribers.blocklistedHelp"] = o.SubscribersBlocklistedHelp
	}
	if !IsNil(o.SubscribersConfirmBlocklist) {
		toSerialize["subscribers.confirmBlocklist"] = o.SubscribersConfirmBlocklist
	}
	if !IsNil(o.SubscribersConfirmDelete) {
		toSerialize["subscribers.confirmDelete"] = o.SubscribersConfirmDelete
	}
	if !IsNil(o.SubscribersConfirmExport) {
		toSerialize["subscribers.confirmExport"] = o.SubscribersConfirmExport
	}
	if !IsNil(o.SubscribersDomainBlocklisted) {
		toSerialize["subscribers.domainBlocklisted"] = o.SubscribersDomainBlocklisted
	}
	if !IsNil(o.SubscribersDownloadData) {
		toSerialize["subscribers.downloadData"] = o.SubscribersDownloadData
	}
	if !IsNil(o.SubscribersEmail) {
		toSerialize["subscribers.email"] = o.SubscribersEmail
	}
	if !IsNil(o.SubscribersEmailExists) {
		toSerialize["subscribers.emailExists"] = o.SubscribersEmailExists
	}
	if !IsNil(o.SubscribersErrorBlocklisting) {
		toSerialize["subscribers.errorBlocklisting"] = o.SubscribersErrorBlocklisting
	}
	if !IsNil(o.SubscribersErrorNoIDs) {
		toSerialize["subscribers.errorNoIDs"] = o.SubscribersErrorNoIDs
	}
	if !IsNil(o.SubscribersErrorNoListsGiven) {
		toSerialize["subscribers.errorNoListsGiven"] = o.SubscribersErrorNoListsGiven
	}
	if !IsNil(o.SubscribersErrorPreparingQuery) {
		toSerialize["subscribers.errorPreparingQuery"] = o.SubscribersErrorPreparingQuery
	}
	if !IsNil(o.SubscribersErrorSendingOptin) {
		toSerialize["subscribers.errorSendingOptin"] = o.SubscribersErrorSendingOptin
	}
	if !IsNil(o.SubscribersExport) {
		toSerialize["subscribers.export"] = o.SubscribersExport
	}
	if !IsNil(o.SubscribersInvalidAction) {
		toSerialize["subscribers.invalidAction"] = o.SubscribersInvalidAction
	}
	if !IsNil(o.SubscribersInvalidEmail) {
		toSerialize["subscribers.invalidEmail"] = o.SubscribersInvalidEmail
	}
	if !IsNil(o.SubscribersInvalidJSON) {
		toSerialize["subscribers.invalidJSON"] = o.SubscribersInvalidJSON
	}
	if !IsNil(o.SubscribersInvalidName) {
		toSerialize["subscribers.invalidName"] = o.SubscribersInvalidName
	}
	if !IsNil(o.SubscribersListChangeApplied) {
		toSerialize["subscribers.listChangeApplied"] = o.SubscribersListChangeApplied
	}
	if !IsNil(o.SubscribersLists) {
		toSerialize["subscribers.lists"] = o.SubscribersLists
	}
	if !IsNil(o.SubscribersListsHelp) {
		toSerialize["subscribers.listsHelp"] = o.SubscribersListsHelp
	}
	if !IsNil(o.SubscribersListsPlaceholder) {
		toSerialize["subscribers.listsPlaceholder"] = o.SubscribersListsPlaceholder
	}
	if !IsNil(o.SubscribersManageLists) {
		toSerialize["subscribers.manageLists"] = o.SubscribersManageLists
	}
	if !IsNil(o.SubscribersMarkUnsubscribed) {
		toSerialize["subscribers.markUnsubscribed"] = o.SubscribersMarkUnsubscribed
	}
	if !IsNil(o.SubscribersNewSubscriber) {
		toSerialize["subscribers.newSubscriber"] = o.SubscribersNewSubscriber
	}
	if !IsNil(o.SubscribersNumSelected) {
		toSerialize["subscribers.numSelected"] = o.SubscribersNumSelected
	}
	if !IsNil(o.SubscribersOptinSubject) {
		toSerialize["subscribers.optinSubject"] = o.SubscribersOptinSubject
	}
	if !IsNil(o.SubscribersPreconfirm) {
		toSerialize["subscribers.preconfirm"] = o.SubscribersPreconfirm
	}
	if !IsNil(o.SubscribersPreconfirmHelp) {
		toSerialize["subscribers.preconfirmHelp"] = o.SubscribersPreconfirmHelp
	}
	if !IsNil(o.SubscribersQuery) {
		toSerialize["subscribers.query"] = o.SubscribersQuery
	}
	if !IsNil(o.SubscribersQueryPlaceholder) {
		toSerialize["subscribers.queryPlaceholder"] = o.SubscribersQueryPlaceholder
	}
	if !IsNil(o.SubscribersReset) {
		toSerialize["subscribers.reset"] = o.SubscribersReset
	}
	if !IsNil(o.SubscribersSelectAll) {
		toSerialize["subscribers.selectAll"] = o.SubscribersSelectAll
	}
	if !IsNil(o.SubscribersSendOptinConfirm) {
		toSerialize["subscribers.sendOptinConfirm"] = o.SubscribersSendOptinConfirm
	}
	if !IsNil(o.SubscribersSentOptinConfirm) {
		toSerialize["subscribers.sentOptinConfirm"] = o.SubscribersSentOptinConfirm
	}
	if !IsNil(o.SubscribersStatusBlocklisted) {
		toSerialize["subscribers.status.blocklisted"] = o.SubscribersStatusBlocklisted
	}
	if !IsNil(o.SubscribersStatusConfirmed) {
		toSerialize["subscribers.status.confirmed"] = o.SubscribersStatusConfirmed
	}
	if !IsNil(o.SubscribersStatusEnabled) {
		toSerialize["subscribers.status.enabled"] = o.SubscribersStatusEnabled
	}
	if !IsNil(o.SubscribersStatusSubscribed) {
		toSerialize["subscribers.status.subscribed"] = o.SubscribersStatusSubscribed
	}
	if !IsNil(o.SubscribersStatusUnconfirmed) {
		toSerialize["subscribers.status.unconfirmed"] = o.SubscribersStatusUnconfirmed
	}
	if !IsNil(o.SubscribersStatusUnsubscribed) {
		toSerialize["subscribers.status.unsubscribed"] = o.SubscribersStatusUnsubscribed
	}
	if !IsNil(o.SubscribersSubscribersDeleted) {
		toSerialize["subscribers.subscribersDeleted"] = o.SubscribersSubscribersDeleted
	}
	if !IsNil(o.TemplatesCantDeleteDefault) {
		toSerialize["templates.cantDeleteDefault"] = o.TemplatesCantDeleteDefault
	}
	if !IsNil(o.TemplatesDefault) {
		toSerialize["templates.default"] = o.TemplatesDefault
	}
	if !IsNil(o.TemplatesDummyName) {
		toSerialize["templates.dummyName"] = o.TemplatesDummyName
	}
	if !IsNil(o.TemplatesDummySubject) {
		toSerialize["templates.dummySubject"] = o.TemplatesDummySubject
	}
	if !IsNil(o.TemplatesErrorCompiling) {
		toSerialize["templates.errorCompiling"] = o.TemplatesErrorCompiling
	}
	if !IsNil(o.TemplatesErrorRendering) {
		toSerialize["templates.errorRendering"] = o.TemplatesErrorRendering
	}
	if !IsNil(o.TemplatesFieldInvalidName) {
		toSerialize["templates.fieldInvalidName"] = o.TemplatesFieldInvalidName
	}
	if !IsNil(o.TemplatesMakeDefault) {
		toSerialize["templates.makeDefault"] = o.TemplatesMakeDefault
	}
	if !IsNil(o.TemplatesNewTemplate) {
		toSerialize["templates.newTemplate"] = o.TemplatesNewTemplate
	}
	if !IsNil(o.TemplatesPlaceholderHelp) {
		toSerialize["templates.placeholderHelp"] = o.TemplatesPlaceholderHelp
	}
	if !IsNil(o.TemplatesPreview) {
		toSerialize["templates.preview"] = o.TemplatesPreview
	}
	if !IsNil(o.TemplatesRawHTML) {
		toSerialize["templates.rawHTML"] = o.TemplatesRawHTML
	}
	if !IsNil(o.TemplatesSubject) {
		toSerialize["templates.subject"] = o.TemplatesSubject
	}
	if !IsNil(o.UsersLogin) {
		toSerialize["users.login"] = o.UsersLogin
	}
	if !IsNil(o.UsersLogout) {
		toSerialize["users.logout"] = o.UsersLogout
	}
	return toSerialize, nil
}

type NullableLanguagePackData struct {
	value *LanguagePackData
	isSet bool
}

func (v NullableLanguagePackData) Get() *LanguagePackData {
	return v.value
}

func (v *NullableLanguagePackData) Set(val *LanguagePackData) {
	v.value = val
	v.isSet = true
}

func (v NullableLanguagePackData) IsSet() bool {
	return v.isSet
}

func (v *NullableLanguagePackData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLanguagePackData(val *LanguagePackData) *NullableLanguagePackData {
	return &NullableLanguagePackData{value: val, isSet: true}
}

func (v NullableLanguagePackData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLanguagePackData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


