/*
Listmonk

The API collection for listmonk

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetCampaignById200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCampaignById200Response{}

// GetCampaignById200Response struct for GetCampaignById200Response
type GetCampaignById200Response struct {
	Data *Campaign `json:"data,omitempty"`
}

// NewGetCampaignById200Response instantiates a new GetCampaignById200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCampaignById200Response() *GetCampaignById200Response {
	this := GetCampaignById200Response{}
	return &this
}

// NewGetCampaignById200ResponseWithDefaults instantiates a new GetCampaignById200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCampaignById200ResponseWithDefaults() *GetCampaignById200Response {
	this := GetCampaignById200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetCampaignById200Response) GetData() Campaign {
	if o == nil || IsNil(o.Data) {
		var ret Campaign
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignById200Response) GetDataOk() (*Campaign, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetCampaignById200Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given Campaign and assigns it to the Data field.
func (o *GetCampaignById200Response) SetData(v Campaign) {
	o.Data = &v
}

func (o GetCampaignById200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCampaignById200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableGetCampaignById200Response struct {
	value *GetCampaignById200Response
	isSet bool
}

func (v NullableGetCampaignById200Response) Get() *GetCampaignById200Response {
	return v.value
}

func (v *NullableGetCampaignById200Response) Set(val *GetCampaignById200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCampaignById200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCampaignById200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCampaignById200Response(val *GetCampaignById200Response) *NullableGetCampaignById200Response {
	return &NullableGetCampaignById200Response{value: val, isSet: true}
}

func (v NullableGetCampaignById200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCampaignById200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


