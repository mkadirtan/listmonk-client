/*
Listmonk

The API collection for listmonk

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServerConfigData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerConfigData{}

// ServerConfigData struct for ServerConfigData
type ServerConfigData struct {
	Messengers []string `json:"messengers,omitempty"`
	Langs []ServerConfigDataLangsInner `json:"langs,omitempty"`
	Lang *string `json:"lang,omitempty"`
	Update *string `json:"update,omitempty"`
	NeedsRestart *bool `json:"needs_restart,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewServerConfigData instantiates a new ServerConfigData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerConfigData() *ServerConfigData {
	this := ServerConfigData{}
	return &this
}

// NewServerConfigDataWithDefaults instantiates a new ServerConfigData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerConfigDataWithDefaults() *ServerConfigData {
	this := ServerConfigData{}
	return &this
}

// GetMessengers returns the Messengers field value if set, zero value otherwise.
func (o *ServerConfigData) GetMessengers() []string {
	if o == nil || IsNil(o.Messengers) {
		var ret []string
		return ret
	}
	return o.Messengers
}

// GetMessengersOk returns a tuple with the Messengers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerConfigData) GetMessengersOk() ([]string, bool) {
	if o == nil || IsNil(o.Messengers) {
		return nil, false
	}
	return o.Messengers, true
}

// HasMessengers returns a boolean if a field has been set.
func (o *ServerConfigData) HasMessengers() bool {
	if o != nil && !IsNil(o.Messengers) {
		return true
	}

	return false
}

// SetMessengers gets a reference to the given []string and assigns it to the Messengers field.
func (o *ServerConfigData) SetMessengers(v []string) {
	o.Messengers = v
}

// GetLangs returns the Langs field value if set, zero value otherwise.
func (o *ServerConfigData) GetLangs() []ServerConfigDataLangsInner {
	if o == nil || IsNil(o.Langs) {
		var ret []ServerConfigDataLangsInner
		return ret
	}
	return o.Langs
}

// GetLangsOk returns a tuple with the Langs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerConfigData) GetLangsOk() ([]ServerConfigDataLangsInner, bool) {
	if o == nil || IsNil(o.Langs) {
		return nil, false
	}
	return o.Langs, true
}

// HasLangs returns a boolean if a field has been set.
func (o *ServerConfigData) HasLangs() bool {
	if o != nil && !IsNil(o.Langs) {
		return true
	}

	return false
}

// SetLangs gets a reference to the given []ServerConfigDataLangsInner and assigns it to the Langs field.
func (o *ServerConfigData) SetLangs(v []ServerConfigDataLangsInner) {
	o.Langs = v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *ServerConfigData) GetLang() string {
	if o == nil || IsNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerConfigData) GetLangOk() (*string, bool) {
	if o == nil || IsNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *ServerConfigData) HasLang() bool {
	if o != nil && !IsNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *ServerConfigData) SetLang(v string) {
	o.Lang = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *ServerConfigData) GetUpdate() string {
	if o == nil || IsNil(o.Update) {
		var ret string
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerConfigData) GetUpdateOk() (*string, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *ServerConfigData) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given string and assigns it to the Update field.
func (o *ServerConfigData) SetUpdate(v string) {
	o.Update = &v
}

// GetNeedsRestart returns the NeedsRestart field value if set, zero value otherwise.
func (o *ServerConfigData) GetNeedsRestart() bool {
	if o == nil || IsNil(o.NeedsRestart) {
		var ret bool
		return ret
	}
	return *o.NeedsRestart
}

// GetNeedsRestartOk returns a tuple with the NeedsRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerConfigData) GetNeedsRestartOk() (*bool, bool) {
	if o == nil || IsNil(o.NeedsRestart) {
		return nil, false
	}
	return o.NeedsRestart, true
}

// HasNeedsRestart returns a boolean if a field has been set.
func (o *ServerConfigData) HasNeedsRestart() bool {
	if o != nil && !IsNil(o.NeedsRestart) {
		return true
	}

	return false
}

// SetNeedsRestart gets a reference to the given bool and assigns it to the NeedsRestart field.
func (o *ServerConfigData) SetNeedsRestart(v bool) {
	o.NeedsRestart = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ServerConfigData) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerConfigData) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ServerConfigData) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ServerConfigData) SetVersion(v string) {
	o.Version = &v
}

func (o ServerConfigData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerConfigData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Messengers) {
		toSerialize["messengers"] = o.Messengers
	}
	if !IsNil(o.Langs) {
		toSerialize["langs"] = o.Langs
	}
	if !IsNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.NeedsRestart) {
		toSerialize["needs_restart"] = o.NeedsRestart
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableServerConfigData struct {
	value *ServerConfigData
	isSet bool
}

func (v NullableServerConfigData) Get() *ServerConfigData {
	return v.value
}

func (v *NullableServerConfigData) Set(val *ServerConfigData) {
	v.value = val
	v.isSet = true
}

func (v NullableServerConfigData) IsSet() bool {
	return v.isSet
}

func (v *NullableServerConfigData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerConfigData(val *ServerConfigData) *NullableServerConfigData {
	return &NullableServerConfigData{value: val, isSet: true}
}

func (v NullableServerConfigData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerConfigData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


