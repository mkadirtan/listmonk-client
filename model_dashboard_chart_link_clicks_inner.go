/*
Listmonk

The API collection for listmonk

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DashboardChartLinkClicksInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DashboardChartLinkClicksInner{}

// DashboardChartLinkClicksInner struct for DashboardChartLinkClicksInner
type DashboardChartLinkClicksInner struct {
	Count *int32 `json:"count,omitempty"`
	Date *string `json:"date,omitempty"`
}

// NewDashboardChartLinkClicksInner instantiates a new DashboardChartLinkClicksInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardChartLinkClicksInner() *DashboardChartLinkClicksInner {
	this := DashboardChartLinkClicksInner{}
	return &this
}

// NewDashboardChartLinkClicksInnerWithDefaults instantiates a new DashboardChartLinkClicksInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardChartLinkClicksInnerWithDefaults() *DashboardChartLinkClicksInner {
	this := DashboardChartLinkClicksInner{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *DashboardChartLinkClicksInner) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardChartLinkClicksInner) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *DashboardChartLinkClicksInner) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *DashboardChartLinkClicksInner) SetCount(v int32) {
	o.Count = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *DashboardChartLinkClicksInner) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardChartLinkClicksInner) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *DashboardChartLinkClicksInner) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *DashboardChartLinkClicksInner) SetDate(v string) {
	o.Date = &v
}

func (o DashboardChartLinkClicksInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DashboardChartLinkClicksInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	return toSerialize, nil
}

type NullableDashboardChartLinkClicksInner struct {
	value *DashboardChartLinkClicksInner
	isSet bool
}

func (v NullableDashboardChartLinkClicksInner) Get() *DashboardChartLinkClicksInner {
	return v.value
}

func (v *NullableDashboardChartLinkClicksInner) Set(val *DashboardChartLinkClicksInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardChartLinkClicksInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardChartLinkClicksInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardChartLinkClicksInner(val *DashboardChartLinkClicksInner) *NullableDashboardChartLinkClicksInner {
	return &NullableDashboardChartLinkClicksInner{value: val, isSet: true}
}

func (v NullableDashboardChartLinkClicksInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardChartLinkClicksInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


