/*
Listmonk

The API collection for listmonk

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ImportSubscribersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportSubscribersRequest{}

// ImportSubscribersRequest struct for ImportSubscribersRequest
type ImportSubscribersRequest struct {
	Params *string `json:"params,omitempty"`
	File *string `json:"file,omitempty"`
}

// NewImportSubscribersRequest instantiates a new ImportSubscribersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportSubscribersRequest() *ImportSubscribersRequest {
	this := ImportSubscribersRequest{}
	return &this
}

// NewImportSubscribersRequestWithDefaults instantiates a new ImportSubscribersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportSubscribersRequestWithDefaults() *ImportSubscribersRequest {
	this := ImportSubscribersRequest{}
	return &this
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *ImportSubscribersRequest) GetParams() string {
	if o == nil || IsNil(o.Params) {
		var ret string
		return ret
	}
	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSubscribersRequest) GetParamsOk() (*string, bool) {
	if o == nil || IsNil(o.Params) {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *ImportSubscribersRequest) HasParams() bool {
	if o != nil && !IsNil(o.Params) {
		return true
	}

	return false
}

// SetParams gets a reference to the given string and assigns it to the Params field.
func (o *ImportSubscribersRequest) SetParams(v string) {
	o.Params = &v
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *ImportSubscribersRequest) GetFile() string {
	if o == nil || IsNil(o.File) {
		var ret string
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSubscribersRequest) GetFileOk() (*string, bool) {
	if o == nil || IsNil(o.File) {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *ImportSubscribersRequest) HasFile() bool {
	if o != nil && !IsNil(o.File) {
		return true
	}

	return false
}

// SetFile gets a reference to the given string and assigns it to the File field.
func (o *ImportSubscribersRequest) SetFile(v string) {
	o.File = &v
}

func (o ImportSubscribersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImportSubscribersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Params) {
		toSerialize["params"] = o.Params
	}
	if !IsNil(o.File) {
		toSerialize["file"] = o.File
	}
	return toSerialize, nil
}

type NullableImportSubscribersRequest struct {
	value *ImportSubscribersRequest
	isSet bool
}

func (v NullableImportSubscribersRequest) Get() *ImportSubscribersRequest {
	return v.value
}

func (v *NullableImportSubscribersRequest) Set(val *ImportSubscribersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableImportSubscribersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableImportSubscribersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportSubscribersRequest(val *ImportSubscribersRequest) *NullableImportSubscribersRequest {
	return &NullableImportSubscribersRequest{value: val, isSet: true}
}

func (v NullableImportSubscribersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportSubscribersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


