/*
Listmonk

The API collection for listmonk

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Subscriber type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Subscriber{}

// Subscriber struct for Subscriber
type Subscriber struct {
	Id *int32 `json:"id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	Email *string `json:"email,omitempty"`
	Name *string `json:"name,omitempty"`
	Attribs *SubscriberProfileAttribs `json:"attribs,omitempty"`
	Status *string `json:"status,omitempty"`
	Lists []SubscriberListsInner `json:"lists,omitempty"`
}

// NewSubscriber instantiates a new Subscriber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriber() *Subscriber {
	this := Subscriber{}
	return &this
}

// NewSubscriberWithDefaults instantiates a new Subscriber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriberWithDefaults() *Subscriber {
	this := Subscriber{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Subscriber) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscriber) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Subscriber) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Subscriber) SetId(v int32) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Subscriber) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscriber) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Subscriber) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *Subscriber) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Subscriber) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscriber) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Subscriber) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *Subscriber) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *Subscriber) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscriber) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *Subscriber) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *Subscriber) SetUuid(v string) {
	o.Uuid = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *Subscriber) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscriber) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *Subscriber) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *Subscriber) SetEmail(v string) {
	o.Email = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Subscriber) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscriber) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Subscriber) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Subscriber) SetName(v string) {
	o.Name = &v
}

// GetAttribs returns the Attribs field value if set, zero value otherwise.
func (o *Subscriber) GetAttribs() SubscriberProfileAttribs {
	if o == nil || IsNil(o.Attribs) {
		var ret SubscriberProfileAttribs
		return ret
	}
	return *o.Attribs
}

// GetAttribsOk returns a tuple with the Attribs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscriber) GetAttribsOk() (*SubscriberProfileAttribs, bool) {
	if o == nil || IsNil(o.Attribs) {
		return nil, false
	}
	return o.Attribs, true
}

// HasAttribs returns a boolean if a field has been set.
func (o *Subscriber) HasAttribs() bool {
	if o != nil && !IsNil(o.Attribs) {
		return true
	}

	return false
}

// SetAttribs gets a reference to the given SubscriberProfileAttribs and assigns it to the Attribs field.
func (o *Subscriber) SetAttribs(v SubscriberProfileAttribs) {
	o.Attribs = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Subscriber) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscriber) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Subscriber) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Subscriber) SetStatus(v string) {
	o.Status = &v
}

// GetLists returns the Lists field value if set, zero value otherwise.
func (o *Subscriber) GetLists() []SubscriberListsInner {
	if o == nil || IsNil(o.Lists) {
		var ret []SubscriberListsInner
		return ret
	}
	return o.Lists
}

// GetListsOk returns a tuple with the Lists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Subscriber) GetListsOk() ([]SubscriberListsInner, bool) {
	if o == nil || IsNil(o.Lists) {
		return nil, false
	}
	return o.Lists, true
}

// HasLists returns a boolean if a field has been set.
func (o *Subscriber) HasLists() bool {
	if o != nil && !IsNil(o.Lists) {
		return true
	}

	return false
}

// SetLists gets a reference to the given []SubscriberListsInner and assigns it to the Lists field.
func (o *Subscriber) SetLists(v []SubscriberListsInner) {
	o.Lists = v
}

func (o Subscriber) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Subscriber) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Attribs) {
		toSerialize["attribs"] = o.Attribs
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Lists) {
		toSerialize["lists"] = o.Lists
	}
	return toSerialize, nil
}

type NullableSubscriber struct {
	value *Subscriber
	isSet bool
}

func (v NullableSubscriber) Get() *Subscriber {
	return v.value
}

func (v *NullableSubscriber) Set(val *Subscriber) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriber) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriber(val *Subscriber) *NullableSubscriber {
	return &NullableSubscriber{value: val, isSet: true}
}

func (v NullableSubscriber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


