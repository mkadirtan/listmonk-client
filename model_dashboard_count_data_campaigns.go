/*
Listmonk

The API collection for listmonk

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DashboardCountDataCampaigns type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DashboardCountDataCampaigns{}

// DashboardCountDataCampaigns struct for DashboardCountDataCampaigns
type DashboardCountDataCampaigns struct {
	Total *int32 `json:"total,omitempty"`
	ByStatus *DashboardCountDataCampaignsByStatus `json:"by_status,omitempty"`
}

// NewDashboardCountDataCampaigns instantiates a new DashboardCountDataCampaigns object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardCountDataCampaigns() *DashboardCountDataCampaigns {
	this := DashboardCountDataCampaigns{}
	return &this
}

// NewDashboardCountDataCampaignsWithDefaults instantiates a new DashboardCountDataCampaigns object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardCountDataCampaignsWithDefaults() *DashboardCountDataCampaigns {
	this := DashboardCountDataCampaigns{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *DashboardCountDataCampaigns) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardCountDataCampaigns) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *DashboardCountDataCampaigns) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *DashboardCountDataCampaigns) SetTotal(v int32) {
	o.Total = &v
}

// GetByStatus returns the ByStatus field value if set, zero value otherwise.
func (o *DashboardCountDataCampaigns) GetByStatus() DashboardCountDataCampaignsByStatus {
	if o == nil || IsNil(o.ByStatus) {
		var ret DashboardCountDataCampaignsByStatus
		return ret
	}
	return *o.ByStatus
}

// GetByStatusOk returns a tuple with the ByStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardCountDataCampaigns) GetByStatusOk() (*DashboardCountDataCampaignsByStatus, bool) {
	if o == nil || IsNil(o.ByStatus) {
		return nil, false
	}
	return o.ByStatus, true
}

// HasByStatus returns a boolean if a field has been set.
func (o *DashboardCountDataCampaigns) HasByStatus() bool {
	if o != nil && !IsNil(o.ByStatus) {
		return true
	}

	return false
}

// SetByStatus gets a reference to the given DashboardCountDataCampaignsByStatus and assigns it to the ByStatus field.
func (o *DashboardCountDataCampaigns) SetByStatus(v DashboardCountDataCampaignsByStatus) {
	o.ByStatus = &v
}

func (o DashboardCountDataCampaigns) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DashboardCountDataCampaigns) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.ByStatus) {
		toSerialize["by_status"] = o.ByStatus
	}
	return toSerialize, nil
}

type NullableDashboardCountDataCampaigns struct {
	value *DashboardCountDataCampaigns
	isSet bool
}

func (v NullableDashboardCountDataCampaigns) Get() *DashboardCountDataCampaigns {
	return v.value
}

func (v *NullableDashboardCountDataCampaigns) Set(val *DashboardCountDataCampaigns) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardCountDataCampaigns) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardCountDataCampaigns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardCountDataCampaigns(val *DashboardCountDataCampaigns) *NullableDashboardCountDataCampaigns {
	return &NullableDashboardCountDataCampaigns{value: val, isSet: true}
}

func (v NullableDashboardCountDataCampaigns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardCountDataCampaigns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


