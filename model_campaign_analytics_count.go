/*
Listmonk

The API collection for listmonk

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CampaignAnalyticsCount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampaignAnalyticsCount{}

// CampaignAnalyticsCount struct for CampaignAnalyticsCount
type CampaignAnalyticsCount struct {
	CampaignId *int32 `json:"campaign_id,omitempty"`
	Count *int32 `json:"count,omitempty"`
	Timestamp *time.Time `json:"timestamp,omitempty"`
}

// NewCampaignAnalyticsCount instantiates a new CampaignAnalyticsCount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignAnalyticsCount() *CampaignAnalyticsCount {
	this := CampaignAnalyticsCount{}
	return &this
}

// NewCampaignAnalyticsCountWithDefaults instantiates a new CampaignAnalyticsCount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignAnalyticsCountWithDefaults() *CampaignAnalyticsCount {
	this := CampaignAnalyticsCount{}
	return &this
}

// GetCampaignId returns the CampaignId field value if set, zero value otherwise.
func (o *CampaignAnalyticsCount) GetCampaignId() int32 {
	if o == nil || IsNil(o.CampaignId) {
		var ret int32
		return ret
	}
	return *o.CampaignId
}

// GetCampaignIdOk returns a tuple with the CampaignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignAnalyticsCount) GetCampaignIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CampaignId) {
		return nil, false
	}
	return o.CampaignId, true
}

// HasCampaignId returns a boolean if a field has been set.
func (o *CampaignAnalyticsCount) HasCampaignId() bool {
	if o != nil && !IsNil(o.CampaignId) {
		return true
	}

	return false
}

// SetCampaignId gets a reference to the given int32 and assigns it to the CampaignId field.
func (o *CampaignAnalyticsCount) SetCampaignId(v int32) {
	o.CampaignId = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *CampaignAnalyticsCount) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignAnalyticsCount) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *CampaignAnalyticsCount) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *CampaignAnalyticsCount) SetCount(v int32) {
	o.Count = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *CampaignAnalyticsCount) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignAnalyticsCount) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *CampaignAnalyticsCount) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *CampaignAnalyticsCount) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

func (o CampaignAnalyticsCount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampaignAnalyticsCount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CampaignId) {
		toSerialize["campaign_id"] = o.CampaignId
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableCampaignAnalyticsCount struct {
	value *CampaignAnalyticsCount
	isSet bool
}

func (v NullableCampaignAnalyticsCount) Get() *CampaignAnalyticsCount {
	return v.value
}

func (v *NullableCampaignAnalyticsCount) Set(val *CampaignAnalyticsCount) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignAnalyticsCount) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignAnalyticsCount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignAnalyticsCount(val *CampaignAnalyticsCount) *NullableCampaignAnalyticsCount {
	return &NullableCampaignAnalyticsCount{value: val, isSet: true}
}

func (v NullableCampaignAnalyticsCount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignAnalyticsCount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


