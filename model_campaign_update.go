/*
Listmonk

The API collection for listmonk

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CampaignUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampaignUpdate{}

// CampaignUpdate struct for CampaignUpdate
type CampaignUpdate struct {
	Name *string `json:"name,omitempty"`
	Subject *string `json:"subject,omitempty"`
	Lists []int32 `json:"lists,omitempty"`
	FromEmail *string `json:"from_email,omitempty"`
	Messenger *string `json:"messenger,omitempty"`
	Type *string `json:"type,omitempty"`
	Tags []string `json:"tags,omitempty"`
	SendLater *bool `json:"send_later,omitempty"`
	SendAt map[string]interface{} `json:"send_at,omitempty"`
	Headers []map[string]interface{} `json:"headers,omitempty"`
	TemplateId *int32 `json:"template_id,omitempty"`
	ContentType *string `json:"content_type,omitempty"`
	Body *string `json:"body,omitempty"`
	Altbody *string `json:"altbody,omitempty"`
	Archive *bool `json:"archive,omitempty"`
	ArchiveTemplateId *int32 `json:"archive_template_id,omitempty"`
	ArchiveMeta map[string]interface{} `json:"archive_meta,omitempty"`
}

// NewCampaignUpdate instantiates a new CampaignUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignUpdate() *CampaignUpdate {
	this := CampaignUpdate{}
	return &this
}

// NewCampaignUpdateWithDefaults instantiates a new CampaignUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignUpdateWithDefaults() *CampaignUpdate {
	this := CampaignUpdate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CampaignUpdate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CampaignUpdate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CampaignUpdate) SetName(v string) {
	o.Name = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *CampaignUpdate) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdate) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *CampaignUpdate) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *CampaignUpdate) SetSubject(v string) {
	o.Subject = &v
}

// GetLists returns the Lists field value if set, zero value otherwise.
func (o *CampaignUpdate) GetLists() []int32 {
	if o == nil || IsNil(o.Lists) {
		var ret []int32
		return ret
	}
	return o.Lists
}

// GetListsOk returns a tuple with the Lists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdate) GetListsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Lists) {
		return nil, false
	}
	return o.Lists, true
}

// HasLists returns a boolean if a field has been set.
func (o *CampaignUpdate) HasLists() bool {
	if o != nil && !IsNil(o.Lists) {
		return true
	}

	return false
}

// SetLists gets a reference to the given []int32 and assigns it to the Lists field.
func (o *CampaignUpdate) SetLists(v []int32) {
	o.Lists = v
}

// GetFromEmail returns the FromEmail field value if set, zero value otherwise.
func (o *CampaignUpdate) GetFromEmail() string {
	if o == nil || IsNil(o.FromEmail) {
		var ret string
		return ret
	}
	return *o.FromEmail
}

// GetFromEmailOk returns a tuple with the FromEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdate) GetFromEmailOk() (*string, bool) {
	if o == nil || IsNil(o.FromEmail) {
		return nil, false
	}
	return o.FromEmail, true
}

// HasFromEmail returns a boolean if a field has been set.
func (o *CampaignUpdate) HasFromEmail() bool {
	if o != nil && !IsNil(o.FromEmail) {
		return true
	}

	return false
}

// SetFromEmail gets a reference to the given string and assigns it to the FromEmail field.
func (o *CampaignUpdate) SetFromEmail(v string) {
	o.FromEmail = &v
}

// GetMessenger returns the Messenger field value if set, zero value otherwise.
func (o *CampaignUpdate) GetMessenger() string {
	if o == nil || IsNil(o.Messenger) {
		var ret string
		return ret
	}
	return *o.Messenger
}

// GetMessengerOk returns a tuple with the Messenger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdate) GetMessengerOk() (*string, bool) {
	if o == nil || IsNil(o.Messenger) {
		return nil, false
	}
	return o.Messenger, true
}

// HasMessenger returns a boolean if a field has been set.
func (o *CampaignUpdate) HasMessenger() bool {
	if o != nil && !IsNil(o.Messenger) {
		return true
	}

	return false
}

// SetMessenger gets a reference to the given string and assigns it to the Messenger field.
func (o *CampaignUpdate) SetMessenger(v string) {
	o.Messenger = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CampaignUpdate) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdate) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CampaignUpdate) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CampaignUpdate) SetType(v string) {
	o.Type = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CampaignUpdate) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdate) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CampaignUpdate) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *CampaignUpdate) SetTags(v []string) {
	o.Tags = v
}

// GetSendLater returns the SendLater field value if set, zero value otherwise.
func (o *CampaignUpdate) GetSendLater() bool {
	if o == nil || IsNil(o.SendLater) {
		var ret bool
		return ret
	}
	return *o.SendLater
}

// GetSendLaterOk returns a tuple with the SendLater field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdate) GetSendLaterOk() (*bool, bool) {
	if o == nil || IsNil(o.SendLater) {
		return nil, false
	}
	return o.SendLater, true
}

// HasSendLater returns a boolean if a field has been set.
func (o *CampaignUpdate) HasSendLater() bool {
	if o != nil && !IsNil(o.SendLater) {
		return true
	}

	return false
}

// SetSendLater gets a reference to the given bool and assigns it to the SendLater field.
func (o *CampaignUpdate) SetSendLater(v bool) {
	o.SendLater = &v
}

// GetSendAt returns the SendAt field value if set, zero value otherwise.
func (o *CampaignUpdate) GetSendAt() map[string]interface{} {
	if o == nil || IsNil(o.SendAt) {
		var ret map[string]interface{}
		return ret
	}
	return o.SendAt
}

// GetSendAtOk returns a tuple with the SendAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdate) GetSendAtOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.SendAt) {
		return map[string]interface{}{}, false
	}
	return o.SendAt, true
}

// HasSendAt returns a boolean if a field has been set.
func (o *CampaignUpdate) HasSendAt() bool {
	if o != nil && !IsNil(o.SendAt) {
		return true
	}

	return false
}

// SetSendAt gets a reference to the given map[string]interface{} and assigns it to the SendAt field.
func (o *CampaignUpdate) SetSendAt(v map[string]interface{}) {
	o.SendAt = v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *CampaignUpdate) GetHeaders() []map[string]interface{} {
	if o == nil || IsNil(o.Headers) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdate) GetHeadersOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *CampaignUpdate) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []map[string]interface{} and assigns it to the Headers field.
func (o *CampaignUpdate) SetHeaders(v []map[string]interface{}) {
	o.Headers = v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *CampaignUpdate) GetTemplateId() int32 {
	if o == nil || IsNil(o.TemplateId) {
		var ret int32
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdate) GetTemplateIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *CampaignUpdate) HasTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given int32 and assigns it to the TemplateId field.
func (o *CampaignUpdate) SetTemplateId(v int32) {
	o.TemplateId = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *CampaignUpdate) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdate) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *CampaignUpdate) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *CampaignUpdate) SetContentType(v string) {
	o.ContentType = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *CampaignUpdate) GetBody() string {
	if o == nil || IsNil(o.Body) {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdate) GetBodyOk() (*string, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *CampaignUpdate) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *CampaignUpdate) SetBody(v string) {
	o.Body = &v
}

// GetAltbody returns the Altbody field value if set, zero value otherwise.
func (o *CampaignUpdate) GetAltbody() string {
	if o == nil || IsNil(o.Altbody) {
		var ret string
		return ret
	}
	return *o.Altbody
}

// GetAltbodyOk returns a tuple with the Altbody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdate) GetAltbodyOk() (*string, bool) {
	if o == nil || IsNil(o.Altbody) {
		return nil, false
	}
	return o.Altbody, true
}

// HasAltbody returns a boolean if a field has been set.
func (o *CampaignUpdate) HasAltbody() bool {
	if o != nil && !IsNil(o.Altbody) {
		return true
	}

	return false
}

// SetAltbody gets a reference to the given string and assigns it to the Altbody field.
func (o *CampaignUpdate) SetAltbody(v string) {
	o.Altbody = &v
}

// GetArchive returns the Archive field value if set, zero value otherwise.
func (o *CampaignUpdate) GetArchive() bool {
	if o == nil || IsNil(o.Archive) {
		var ret bool
		return ret
	}
	return *o.Archive
}

// GetArchiveOk returns a tuple with the Archive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdate) GetArchiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Archive) {
		return nil, false
	}
	return o.Archive, true
}

// HasArchive returns a boolean if a field has been set.
func (o *CampaignUpdate) HasArchive() bool {
	if o != nil && !IsNil(o.Archive) {
		return true
	}

	return false
}

// SetArchive gets a reference to the given bool and assigns it to the Archive field.
func (o *CampaignUpdate) SetArchive(v bool) {
	o.Archive = &v
}

// GetArchiveTemplateId returns the ArchiveTemplateId field value if set, zero value otherwise.
func (o *CampaignUpdate) GetArchiveTemplateId() int32 {
	if o == nil || IsNil(o.ArchiveTemplateId) {
		var ret int32
		return ret
	}
	return *o.ArchiveTemplateId
}

// GetArchiveTemplateIdOk returns a tuple with the ArchiveTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdate) GetArchiveTemplateIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ArchiveTemplateId) {
		return nil, false
	}
	return o.ArchiveTemplateId, true
}

// HasArchiveTemplateId returns a boolean if a field has been set.
func (o *CampaignUpdate) HasArchiveTemplateId() bool {
	if o != nil && !IsNil(o.ArchiveTemplateId) {
		return true
	}

	return false
}

// SetArchiveTemplateId gets a reference to the given int32 and assigns it to the ArchiveTemplateId field.
func (o *CampaignUpdate) SetArchiveTemplateId(v int32) {
	o.ArchiveTemplateId = &v
}

// GetArchiveMeta returns the ArchiveMeta field value if set, zero value otherwise.
func (o *CampaignUpdate) GetArchiveMeta() map[string]interface{} {
	if o == nil || IsNil(o.ArchiveMeta) {
		var ret map[string]interface{}
		return ret
	}
	return o.ArchiveMeta
}

// GetArchiveMetaOk returns a tuple with the ArchiveMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdate) GetArchiveMetaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ArchiveMeta) {
		return map[string]interface{}{}, false
	}
	return o.ArchiveMeta, true
}

// HasArchiveMeta returns a boolean if a field has been set.
func (o *CampaignUpdate) HasArchiveMeta() bool {
	if o != nil && !IsNil(o.ArchiveMeta) {
		return true
	}

	return false
}

// SetArchiveMeta gets a reference to the given map[string]interface{} and assigns it to the ArchiveMeta field.
func (o *CampaignUpdate) SetArchiveMeta(v map[string]interface{}) {
	o.ArchiveMeta = v
}

func (o CampaignUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampaignUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Lists) {
		toSerialize["lists"] = o.Lists
	}
	if !IsNil(o.FromEmail) {
		toSerialize["from_email"] = o.FromEmail
	}
	if !IsNil(o.Messenger) {
		toSerialize["messenger"] = o.Messenger
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.SendLater) {
		toSerialize["send_later"] = o.SendLater
	}
	if !IsNil(o.SendAt) {
		toSerialize["send_at"] = o.SendAt
	}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !IsNil(o.TemplateId) {
		toSerialize["template_id"] = o.TemplateId
	}
	if !IsNil(o.ContentType) {
		toSerialize["content_type"] = o.ContentType
	}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if !IsNil(o.Altbody) {
		toSerialize["altbody"] = o.Altbody
	}
	if !IsNil(o.Archive) {
		toSerialize["archive"] = o.Archive
	}
	if !IsNil(o.ArchiveTemplateId) {
		toSerialize["archive_template_id"] = o.ArchiveTemplateId
	}
	if !IsNil(o.ArchiveMeta) {
		toSerialize["archive_meta"] = o.ArchiveMeta
	}
	return toSerialize, nil
}

type NullableCampaignUpdate struct {
	value *CampaignUpdate
	isSet bool
}

func (v NullableCampaignUpdate) Get() *CampaignUpdate {
	return v.value
}

func (v *NullableCampaignUpdate) Set(val *CampaignUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignUpdate(val *CampaignUpdate) *NullableCampaignUpdate {
	return &NullableCampaignUpdate{value: val, isSet: true}
}

func (v NullableCampaignUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


