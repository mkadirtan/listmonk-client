/*
Listmonk

The API collection for listmonk

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TransactionalMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionalMessage{}

// TransactionalMessage struct for TransactionalMessage
type TransactionalMessage struct {
	SubscriberEmail *string `json:"subscriber_email,omitempty"`
	SubscriberId *int32 `json:"subscriber_id,omitempty"`
	TemplateId *int32 `json:"template_id,omitempty"`
	FromEmail *string `json:"from_email,omitempty"`
	Data map[string]interface{} `json:"data,omitempty"`
	Headers []map[string]interface{} `json:"headers,omitempty"`
	Messenger *string `json:"messenger,omitempty"`
	ContentType *string `json:"content_type,omitempty"`
}

// NewTransactionalMessage instantiates a new TransactionalMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionalMessage() *TransactionalMessage {
	this := TransactionalMessage{}
	return &this
}

// NewTransactionalMessageWithDefaults instantiates a new TransactionalMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionalMessageWithDefaults() *TransactionalMessage {
	this := TransactionalMessage{}
	return &this
}

// GetSubscriberEmail returns the SubscriberEmail field value if set, zero value otherwise.
func (o *TransactionalMessage) GetSubscriberEmail() string {
	if o == nil || IsNil(o.SubscriberEmail) {
		var ret string
		return ret
	}
	return *o.SubscriberEmail
}

// GetSubscriberEmailOk returns a tuple with the SubscriberEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionalMessage) GetSubscriberEmailOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriberEmail) {
		return nil, false
	}
	return o.SubscriberEmail, true
}

// HasSubscriberEmail returns a boolean if a field has been set.
func (o *TransactionalMessage) HasSubscriberEmail() bool {
	if o != nil && !IsNil(o.SubscriberEmail) {
		return true
	}

	return false
}

// SetSubscriberEmail gets a reference to the given string and assigns it to the SubscriberEmail field.
func (o *TransactionalMessage) SetSubscriberEmail(v string) {
	o.SubscriberEmail = &v
}

// GetSubscriberId returns the SubscriberId field value if set, zero value otherwise.
func (o *TransactionalMessage) GetSubscriberId() int32 {
	if o == nil || IsNil(o.SubscriberId) {
		var ret int32
		return ret
	}
	return *o.SubscriberId
}

// GetSubscriberIdOk returns a tuple with the SubscriberId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionalMessage) GetSubscriberIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SubscriberId) {
		return nil, false
	}
	return o.SubscriberId, true
}

// HasSubscriberId returns a boolean if a field has been set.
func (o *TransactionalMessage) HasSubscriberId() bool {
	if o != nil && !IsNil(o.SubscriberId) {
		return true
	}

	return false
}

// SetSubscriberId gets a reference to the given int32 and assigns it to the SubscriberId field.
func (o *TransactionalMessage) SetSubscriberId(v int32) {
	o.SubscriberId = &v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *TransactionalMessage) GetTemplateId() int32 {
	if o == nil || IsNil(o.TemplateId) {
		var ret int32
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionalMessage) GetTemplateIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *TransactionalMessage) HasTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given int32 and assigns it to the TemplateId field.
func (o *TransactionalMessage) SetTemplateId(v int32) {
	o.TemplateId = &v
}

// GetFromEmail returns the FromEmail field value if set, zero value otherwise.
func (o *TransactionalMessage) GetFromEmail() string {
	if o == nil || IsNil(o.FromEmail) {
		var ret string
		return ret
	}
	return *o.FromEmail
}

// GetFromEmailOk returns a tuple with the FromEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionalMessage) GetFromEmailOk() (*string, bool) {
	if o == nil || IsNil(o.FromEmail) {
		return nil, false
	}
	return o.FromEmail, true
}

// HasFromEmail returns a boolean if a field has been set.
func (o *TransactionalMessage) HasFromEmail() bool {
	if o != nil && !IsNil(o.FromEmail) {
		return true
	}

	return false
}

// SetFromEmail gets a reference to the given string and assigns it to the FromEmail field.
func (o *TransactionalMessage) SetFromEmail(v string) {
	o.FromEmail = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *TransactionalMessage) GetData() map[string]interface{} {
	if o == nil || IsNil(o.Data) {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionalMessage) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Data) {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *TransactionalMessage) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *TransactionalMessage) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *TransactionalMessage) GetHeaders() []map[string]interface{} {
	if o == nil || IsNil(o.Headers) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionalMessage) GetHeadersOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *TransactionalMessage) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []map[string]interface{} and assigns it to the Headers field.
func (o *TransactionalMessage) SetHeaders(v []map[string]interface{}) {
	o.Headers = v
}

// GetMessenger returns the Messenger field value if set, zero value otherwise.
func (o *TransactionalMessage) GetMessenger() string {
	if o == nil || IsNil(o.Messenger) {
		var ret string
		return ret
	}
	return *o.Messenger
}

// GetMessengerOk returns a tuple with the Messenger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionalMessage) GetMessengerOk() (*string, bool) {
	if o == nil || IsNil(o.Messenger) {
		return nil, false
	}
	return o.Messenger, true
}

// HasMessenger returns a boolean if a field has been set.
func (o *TransactionalMessage) HasMessenger() bool {
	if o != nil && !IsNil(o.Messenger) {
		return true
	}

	return false
}

// SetMessenger gets a reference to the given string and assigns it to the Messenger field.
func (o *TransactionalMessage) SetMessenger(v string) {
	o.Messenger = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *TransactionalMessage) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionalMessage) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *TransactionalMessage) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *TransactionalMessage) SetContentType(v string) {
	o.ContentType = &v
}

func (o TransactionalMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionalMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubscriberEmail) {
		toSerialize["subscriber_email"] = o.SubscriberEmail
	}
	if !IsNil(o.SubscriberId) {
		toSerialize["subscriber_id"] = o.SubscriberId
	}
	if !IsNil(o.TemplateId) {
		toSerialize["template_id"] = o.TemplateId
	}
	if !IsNil(o.FromEmail) {
		toSerialize["from_email"] = o.FromEmail
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !IsNil(o.Messenger) {
		toSerialize["messenger"] = o.Messenger
	}
	if !IsNil(o.ContentType) {
		toSerialize["content_type"] = o.ContentType
	}
	return toSerialize, nil
}

type NullableTransactionalMessage struct {
	value *TransactionalMessage
	isSet bool
}

func (v NullableTransactionalMessage) Get() *TransactionalMessage {
	return v.value
}

func (v *NullableTransactionalMessage) Set(val *TransactionalMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionalMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionalMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionalMessage(val *TransactionalMessage) *NullableTransactionalMessage {
	return &NullableTransactionalMessage{value: val, isSet: true}
}

func (v NullableTransactionalMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionalMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


