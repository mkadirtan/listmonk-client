/*
Listmonk

The API collection for listmonk

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CampaignRequestSendAt type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampaignRequestSendAt{}

// CampaignRequestSendAt struct for CampaignRequestSendAt
type CampaignRequestSendAt struct {
	Headers []map[string]interface{} `json:"headers,omitempty"`
	TemplateId *float32 `json:"template_id,omitempty"`
}

// NewCampaignRequestSendAt instantiates a new CampaignRequestSendAt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignRequestSendAt() *CampaignRequestSendAt {
	this := CampaignRequestSendAt{}
	return &this
}

// NewCampaignRequestSendAtWithDefaults instantiates a new CampaignRequestSendAt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignRequestSendAtWithDefaults() *CampaignRequestSendAt {
	this := CampaignRequestSendAt{}
	return &this
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *CampaignRequestSendAt) GetHeaders() []map[string]interface{} {
	if o == nil || IsNil(o.Headers) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignRequestSendAt) GetHeadersOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *CampaignRequestSendAt) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []map[string]interface{} and assigns it to the Headers field.
func (o *CampaignRequestSendAt) SetHeaders(v []map[string]interface{}) {
	o.Headers = v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *CampaignRequestSendAt) GetTemplateId() float32 {
	if o == nil || IsNil(o.TemplateId) {
		var ret float32
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignRequestSendAt) GetTemplateIdOk() (*float32, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *CampaignRequestSendAt) HasTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given float32 and assigns it to the TemplateId field.
func (o *CampaignRequestSendAt) SetTemplateId(v float32) {
	o.TemplateId = &v
}

func (o CampaignRequestSendAt) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampaignRequestSendAt) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !IsNil(o.TemplateId) {
		toSerialize["template_id"] = o.TemplateId
	}
	return toSerialize, nil
}

type NullableCampaignRequestSendAt struct {
	value *CampaignRequestSendAt
	isSet bool
}

func (v NullableCampaignRequestSendAt) Get() *CampaignRequestSendAt {
	return v.value
}

func (v *NullableCampaignRequestSendAt) Set(val *CampaignRequestSendAt) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignRequestSendAt) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignRequestSendAt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignRequestSendAt(val *CampaignRequestSendAt) *NullableCampaignRequestSendAt {
	return &NullableCampaignRequestSendAt{value: val, isSet: true}
}

func (v NullableCampaignRequestSendAt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignRequestSendAt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


