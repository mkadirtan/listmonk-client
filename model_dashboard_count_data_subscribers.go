/*
Listmonk

The API collection for listmonk

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DashboardCountDataSubscribers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DashboardCountDataSubscribers{}

// DashboardCountDataSubscribers struct for DashboardCountDataSubscribers
type DashboardCountDataSubscribers struct {
	Total *int32 `json:"total,omitempty"`
	Blocklisted map[string]interface{} `json:"blocklisted,omitempty"`
	Orphans *int32 `json:"orphans,omitempty"`
}

// NewDashboardCountDataSubscribers instantiates a new DashboardCountDataSubscribers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardCountDataSubscribers() *DashboardCountDataSubscribers {
	this := DashboardCountDataSubscribers{}
	return &this
}

// NewDashboardCountDataSubscribersWithDefaults instantiates a new DashboardCountDataSubscribers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardCountDataSubscribersWithDefaults() *DashboardCountDataSubscribers {
	this := DashboardCountDataSubscribers{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *DashboardCountDataSubscribers) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardCountDataSubscribers) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *DashboardCountDataSubscribers) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *DashboardCountDataSubscribers) SetTotal(v int32) {
	o.Total = &v
}

// GetBlocklisted returns the Blocklisted field value if set, zero value otherwise.
func (o *DashboardCountDataSubscribers) GetBlocklisted() map[string]interface{} {
	if o == nil || IsNil(o.Blocklisted) {
		var ret map[string]interface{}
		return ret
	}
	return o.Blocklisted
}

// GetBlocklistedOk returns a tuple with the Blocklisted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardCountDataSubscribers) GetBlocklistedOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Blocklisted) {
		return map[string]interface{}{}, false
	}
	return o.Blocklisted, true
}

// HasBlocklisted returns a boolean if a field has been set.
func (o *DashboardCountDataSubscribers) HasBlocklisted() bool {
	if o != nil && !IsNil(o.Blocklisted) {
		return true
	}

	return false
}

// SetBlocklisted gets a reference to the given map[string]interface{} and assigns it to the Blocklisted field.
func (o *DashboardCountDataSubscribers) SetBlocklisted(v map[string]interface{}) {
	o.Blocklisted = v
}

// GetOrphans returns the Orphans field value if set, zero value otherwise.
func (o *DashboardCountDataSubscribers) GetOrphans() int32 {
	if o == nil || IsNil(o.Orphans) {
		var ret int32
		return ret
	}
	return *o.Orphans
}

// GetOrphansOk returns a tuple with the Orphans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardCountDataSubscribers) GetOrphansOk() (*int32, bool) {
	if o == nil || IsNil(o.Orphans) {
		return nil, false
	}
	return o.Orphans, true
}

// HasOrphans returns a boolean if a field has been set.
func (o *DashboardCountDataSubscribers) HasOrphans() bool {
	if o != nil && !IsNil(o.Orphans) {
		return true
	}

	return false
}

// SetOrphans gets a reference to the given int32 and assigns it to the Orphans field.
func (o *DashboardCountDataSubscribers) SetOrphans(v int32) {
	o.Orphans = &v
}

func (o DashboardCountDataSubscribers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DashboardCountDataSubscribers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Blocklisted) {
		toSerialize["blocklisted"] = o.Blocklisted
	}
	if !IsNil(o.Orphans) {
		toSerialize["orphans"] = o.Orphans
	}
	return toSerialize, nil
}

type NullableDashboardCountDataSubscribers struct {
	value *DashboardCountDataSubscribers
	isSet bool
}

func (v NullableDashboardCountDataSubscribers) Get() *DashboardCountDataSubscribers {
	return v.value
}

func (v *NullableDashboardCountDataSubscribers) Set(val *DashboardCountDataSubscribers) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardCountDataSubscribers) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardCountDataSubscribers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardCountDataSubscribers(val *DashboardCountDataSubscribers) *NullableDashboardCountDataSubscribers {
	return &NullableDashboardCountDataSubscribers{value: val, isSet: true}
}

func (v NullableDashboardCountDataSubscribers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardCountDataSubscribers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


