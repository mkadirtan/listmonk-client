/*
Listmonk

The API collection for listmonk

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HandlePublicSubscription200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlePublicSubscription200Response{}

// HandlePublicSubscription200Response struct for HandlePublicSubscription200Response
type HandlePublicSubscription200Response struct {
	HasOptin *bool `json:"has_optin,omitempty"`
}

// NewHandlePublicSubscription200Response instantiates a new HandlePublicSubscription200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlePublicSubscription200Response() *HandlePublicSubscription200Response {
	this := HandlePublicSubscription200Response{}
	return &this
}

// NewHandlePublicSubscription200ResponseWithDefaults instantiates a new HandlePublicSubscription200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlePublicSubscription200ResponseWithDefaults() *HandlePublicSubscription200Response {
	this := HandlePublicSubscription200Response{}
	return &this
}

// GetHasOptin returns the HasOptin field value if set, zero value otherwise.
func (o *HandlePublicSubscription200Response) GetHasOptin() bool {
	if o == nil || IsNil(o.HasOptin) {
		var ret bool
		return ret
	}
	return *o.HasOptin
}

// GetHasOptinOk returns a tuple with the HasOptin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlePublicSubscription200Response) GetHasOptinOk() (*bool, bool) {
	if o == nil || IsNil(o.HasOptin) {
		return nil, false
	}
	return o.HasOptin, true
}

// HasHasOptin returns a boolean if a field has been set.
func (o *HandlePublicSubscription200Response) HasHasOptin() bool {
	if o != nil && !IsNil(o.HasOptin) {
		return true
	}

	return false
}

// SetHasOptin gets a reference to the given bool and assigns it to the HasOptin field.
func (o *HandlePublicSubscription200Response) SetHasOptin(v bool) {
	o.HasOptin = &v
}

func (o HandlePublicSubscription200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlePublicSubscription200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HasOptin) {
		toSerialize["has_optin"] = o.HasOptin
	}
	return toSerialize, nil
}

type NullableHandlePublicSubscription200Response struct {
	value *HandlePublicSubscription200Response
	isSet bool
}

func (v NullableHandlePublicSubscription200Response) Get() *HandlePublicSubscription200Response {
	return v.value
}

func (v *NullableHandlePublicSubscription200Response) Set(val *HandlePublicSubscription200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlePublicSubscription200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlePublicSubscription200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlePublicSubscription200Response(val *HandlePublicSubscription200Response) *NullableHandlePublicSubscription200Response {
	return &NullableHandlePublicSubscription200Response{value: val, isSet: true}
}

func (v NullableHandlePublicSubscription200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlePublicSubscription200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


