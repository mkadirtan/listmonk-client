/*
Listmonk

The API collection for listmonk

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CampaignStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampaignStats{}

// CampaignStats struct for CampaignStats
type CampaignStats struct {
	Id *int32 `json:"id,omitempty"`
	Status *string `json:"status,omitempty"`
	ToSend *int32 `json:"to_send,omitempty"`
	Sent *int32 `json:"sent,omitempty"`
	StartedAt *string `json:"started_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Rate *int32 `json:"rate,omitempty"`
	NetRate *int32 `json:"net_rate,omitempty"`
}

// NewCampaignStats instantiates a new CampaignStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignStats() *CampaignStats {
	this := CampaignStats{}
	return &this
}

// NewCampaignStatsWithDefaults instantiates a new CampaignStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignStatsWithDefaults() *CampaignStats {
	this := CampaignStats{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CampaignStats) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignStats) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CampaignStats) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CampaignStats) SetId(v int32) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CampaignStats) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignStats) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CampaignStats) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CampaignStats) SetStatus(v string) {
	o.Status = &v
}

// GetToSend returns the ToSend field value if set, zero value otherwise.
func (o *CampaignStats) GetToSend() int32 {
	if o == nil || IsNil(o.ToSend) {
		var ret int32
		return ret
	}
	return *o.ToSend
}

// GetToSendOk returns a tuple with the ToSend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignStats) GetToSendOk() (*int32, bool) {
	if o == nil || IsNil(o.ToSend) {
		return nil, false
	}
	return o.ToSend, true
}

// HasToSend returns a boolean if a field has been set.
func (o *CampaignStats) HasToSend() bool {
	if o != nil && !IsNil(o.ToSend) {
		return true
	}

	return false
}

// SetToSend gets a reference to the given int32 and assigns it to the ToSend field.
func (o *CampaignStats) SetToSend(v int32) {
	o.ToSend = &v
}

// GetSent returns the Sent field value if set, zero value otherwise.
func (o *CampaignStats) GetSent() int32 {
	if o == nil || IsNil(o.Sent) {
		var ret int32
		return ret
	}
	return *o.Sent
}

// GetSentOk returns a tuple with the Sent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignStats) GetSentOk() (*int32, bool) {
	if o == nil || IsNil(o.Sent) {
		return nil, false
	}
	return o.Sent, true
}

// HasSent returns a boolean if a field has been set.
func (o *CampaignStats) HasSent() bool {
	if o != nil && !IsNil(o.Sent) {
		return true
	}

	return false
}

// SetSent gets a reference to the given int32 and assigns it to the Sent field.
func (o *CampaignStats) SetSent(v int32) {
	o.Sent = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *CampaignStats) GetStartedAt() string {
	if o == nil || IsNil(o.StartedAt) {
		var ret string
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignStats) GetStartedAtOk() (*string, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// HasStartedAt returns a boolean if a field has been set.
func (o *CampaignStats) HasStartedAt() bool {
	if o != nil && !IsNil(o.StartedAt) {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given string and assigns it to the StartedAt field.
func (o *CampaignStats) SetStartedAt(v string) {
	o.StartedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CampaignStats) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignStats) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CampaignStats) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *CampaignStats) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *CampaignStats) GetRate() int32 {
	if o == nil || IsNil(o.Rate) {
		var ret int32
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignStats) GetRateOk() (*int32, bool) {
	if o == nil || IsNil(o.Rate) {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *CampaignStats) HasRate() bool {
	if o != nil && !IsNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given int32 and assigns it to the Rate field.
func (o *CampaignStats) SetRate(v int32) {
	o.Rate = &v
}

// GetNetRate returns the NetRate field value if set, zero value otherwise.
func (o *CampaignStats) GetNetRate() int32 {
	if o == nil || IsNil(o.NetRate) {
		var ret int32
		return ret
	}
	return *o.NetRate
}

// GetNetRateOk returns a tuple with the NetRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignStats) GetNetRateOk() (*int32, bool) {
	if o == nil || IsNil(o.NetRate) {
		return nil, false
	}
	return o.NetRate, true
}

// HasNetRate returns a boolean if a field has been set.
func (o *CampaignStats) HasNetRate() bool {
	if o != nil && !IsNil(o.NetRate) {
		return true
	}

	return false
}

// SetNetRate gets a reference to the given int32 and assigns it to the NetRate field.
func (o *CampaignStats) SetNetRate(v int32) {
	o.NetRate = &v
}

func (o CampaignStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampaignStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ToSend) {
		toSerialize["to_send"] = o.ToSend
	}
	if !IsNil(o.Sent) {
		toSerialize["sent"] = o.Sent
	}
	if !IsNil(o.StartedAt) {
		toSerialize["started_at"] = o.StartedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	if !IsNil(o.NetRate) {
		toSerialize["net_rate"] = o.NetRate
	}
	return toSerialize, nil
}

type NullableCampaignStats struct {
	value *CampaignStats
	isSet bool
}

func (v NullableCampaignStats) Get() *CampaignStats {
	return v.value
}

func (v *NullableCampaignStats) Set(val *CampaignStats) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignStats) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignStats(val *CampaignStats) *NullableCampaignStats {
	return &NullableCampaignStats{value: val, isSet: true}
}

func (v NullableCampaignStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


