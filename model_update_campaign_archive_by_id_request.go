/*
Listmonk

The API collection for listmonk

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateCampaignArchiveByIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCampaignArchiveByIdRequest{}

// UpdateCampaignArchiveByIdRequest struct for UpdateCampaignArchiveByIdRequest
type UpdateCampaignArchiveByIdRequest struct {
	Archive *bool `json:"archive,omitempty"`
	ArchiveTemplateId *int32 `json:"archive_template_id,omitempty"`
	ArchiveMeta map[string]interface{} `json:"archive_meta,omitempty"`
}

// NewUpdateCampaignArchiveByIdRequest instantiates a new UpdateCampaignArchiveByIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCampaignArchiveByIdRequest() *UpdateCampaignArchiveByIdRequest {
	this := UpdateCampaignArchiveByIdRequest{}
	return &this
}

// NewUpdateCampaignArchiveByIdRequestWithDefaults instantiates a new UpdateCampaignArchiveByIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCampaignArchiveByIdRequestWithDefaults() *UpdateCampaignArchiveByIdRequest {
	this := UpdateCampaignArchiveByIdRequest{}
	return &this
}

// GetArchive returns the Archive field value if set, zero value otherwise.
func (o *UpdateCampaignArchiveByIdRequest) GetArchive() bool {
	if o == nil || IsNil(o.Archive) {
		var ret bool
		return ret
	}
	return *o.Archive
}

// GetArchiveOk returns a tuple with the Archive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCampaignArchiveByIdRequest) GetArchiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Archive) {
		return nil, false
	}
	return o.Archive, true
}

// HasArchive returns a boolean if a field has been set.
func (o *UpdateCampaignArchiveByIdRequest) HasArchive() bool {
	if o != nil && !IsNil(o.Archive) {
		return true
	}

	return false
}

// SetArchive gets a reference to the given bool and assigns it to the Archive field.
func (o *UpdateCampaignArchiveByIdRequest) SetArchive(v bool) {
	o.Archive = &v
}

// GetArchiveTemplateId returns the ArchiveTemplateId field value if set, zero value otherwise.
func (o *UpdateCampaignArchiveByIdRequest) GetArchiveTemplateId() int32 {
	if o == nil || IsNil(o.ArchiveTemplateId) {
		var ret int32
		return ret
	}
	return *o.ArchiveTemplateId
}

// GetArchiveTemplateIdOk returns a tuple with the ArchiveTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCampaignArchiveByIdRequest) GetArchiveTemplateIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ArchiveTemplateId) {
		return nil, false
	}
	return o.ArchiveTemplateId, true
}

// HasArchiveTemplateId returns a boolean if a field has been set.
func (o *UpdateCampaignArchiveByIdRequest) HasArchiveTemplateId() bool {
	if o != nil && !IsNil(o.ArchiveTemplateId) {
		return true
	}

	return false
}

// SetArchiveTemplateId gets a reference to the given int32 and assigns it to the ArchiveTemplateId field.
func (o *UpdateCampaignArchiveByIdRequest) SetArchiveTemplateId(v int32) {
	o.ArchiveTemplateId = &v
}

// GetArchiveMeta returns the ArchiveMeta field value if set, zero value otherwise.
func (o *UpdateCampaignArchiveByIdRequest) GetArchiveMeta() map[string]interface{} {
	if o == nil || IsNil(o.ArchiveMeta) {
		var ret map[string]interface{}
		return ret
	}
	return o.ArchiveMeta
}

// GetArchiveMetaOk returns a tuple with the ArchiveMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCampaignArchiveByIdRequest) GetArchiveMetaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ArchiveMeta) {
		return map[string]interface{}{}, false
	}
	return o.ArchiveMeta, true
}

// HasArchiveMeta returns a boolean if a field has been set.
func (o *UpdateCampaignArchiveByIdRequest) HasArchiveMeta() bool {
	if o != nil && !IsNil(o.ArchiveMeta) {
		return true
	}

	return false
}

// SetArchiveMeta gets a reference to the given map[string]interface{} and assigns it to the ArchiveMeta field.
func (o *UpdateCampaignArchiveByIdRequest) SetArchiveMeta(v map[string]interface{}) {
	o.ArchiveMeta = v
}

func (o UpdateCampaignArchiveByIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCampaignArchiveByIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Archive) {
		toSerialize["archive"] = o.Archive
	}
	if !IsNil(o.ArchiveTemplateId) {
		toSerialize["archive_template_id"] = o.ArchiveTemplateId
	}
	if !IsNil(o.ArchiveMeta) {
		toSerialize["archive_meta"] = o.ArchiveMeta
	}
	return toSerialize, nil
}

type NullableUpdateCampaignArchiveByIdRequest struct {
	value *UpdateCampaignArchiveByIdRequest
	isSet bool
}

func (v NullableUpdateCampaignArchiveByIdRequest) Get() *UpdateCampaignArchiveByIdRequest {
	return v.value
}

func (v *NullableUpdateCampaignArchiveByIdRequest) Set(val *UpdateCampaignArchiveByIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCampaignArchiveByIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCampaignArchiveByIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCampaignArchiveByIdRequest(val *UpdateCampaignArchiveByIdRequest) *NullableUpdateCampaignArchiveByIdRequest {
	return &NullableUpdateCampaignArchiveByIdRequest{value: val, isSet: true}
}

func (v NullableUpdateCampaignArchiveByIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCampaignArchiveByIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


